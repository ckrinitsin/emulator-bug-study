<think>
Okay, so I need to classify this bug report: "qemu-riscv64 mmap will exhaust all physical memory". The possible categories are mistranslation, assembly, other, device, graphic, socket, network, KVM, boot, vnc, debug, files, permissions, performance, kernel, peripherals, hypervisor.

First, I'll break down the bug report. It mentions "qemu-riscv64 mmap". QEMU is an emulator and a virtual machine manager, so it's related to the hypervisor or emulation aspects. The issue here is about mmap (memory-mapped I/O) exhausting all physical memory. That sounds like a problem with how memory is being managed by QEMU when emulating RISC-V 64-bit systems.

Looking at the categories: Mistranslation is about incorrect mapping from source to target, which doesn't seem to fit here since it's about memory exhaustion. Assembly lowering (assembly) isn't directly related. Other could be a possibility if none of the other categories fit.

Device and peripherals are more about hardware devices; this seems like a memory issue rather than a device-specific problem. Graphic, socket, networkâ€”those don't seem relevant here. KVM is another hypervisor technology, but since it's QEMU specifically, perhaps hypervisor is a better fit.

Boot, vnc, debug, files, permissions, performance... The issue is about physical memory exhaustion due to mmap usage in QEMU. Performance could be related because it's causing high memory usage, but the root cause seems more tied to how QEMU handles memory mapping, which falls under hypervisor functions.

So considering all this, the most appropriate category would be 'hypervisor' since it's related to how QEMU (a hypervisor) manages resources like memory during emulation.
</think>

hypervisor