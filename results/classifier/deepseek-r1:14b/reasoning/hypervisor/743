<think>
Okay, so I need to classify this bug report for QEMU into one of the given categories: mistranslation, assembly, other, device, graphic, socket, network, KVM, boot, vnc, debug, files, permissions, performance, kernel, peripherals, hypervisor. Let me read through the problem description carefully.

The user is encountering an error when trying to run QEMU with more than 8 cores on their Apple M1 Pro or Max machine. The error message says that the number of SMP CPUs requested (10) exceeds the max supported by 'mach-virt' (which is 8). They mentioned that M1 Pro can have up to 10 cores, and M1 Max has 10 as well.

Looking at the steps to reproduce, they're using the command `qemu-system-aarch64 -machine virt,highmem=off -accel hvf -cpu cortex-a72 -smp 10`. So it seems like QEMU isn't allowing them to use more than 8 CPUs even though their hardware supports up to 10.

Now, considering the categories. The issue is about the maximum number of CPUs supported by the machine type 'virt'. This relates to how the virtualization setup handles SMP configurations. It's not a translation error (mistranslation), nor is it related to assembly lowering or other low-level issues like sockets or networking. 

The problem arises when trying to boot QEMU with more cores than allowed, which points towards a configuration or machine type limitation. 'mach-virt' might be the specific machine model they're using, and it's restricting CPU numbers. This is likely a hypervisor-related issue because it involves the virtualization layer managing resources like CPUs.

I don't think it's related to device peripherals, graphic issues, or performance bottlenecks here. The error is purely about exceeding the maximum allowed CPUs, which falls under how the hypervisor (like KVM in this case) manages the VM configuration.
</think>

hypervisor