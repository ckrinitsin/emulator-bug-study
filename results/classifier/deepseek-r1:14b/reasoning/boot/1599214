<think>
Alright, I'm trying to classify this bug report about QEMU. The issue is that virtlogd isn't logging the boot messages when using QEMU 2.6.0. Let me break down what's happening here.

The user mentioned that OpenStack Nova uses the "virtlogd" feature of QEMU for capturing stdout and stderr from a char device. They followed steps to reproduce: launching a guest with virtlogd, checking the log file, but found it empty. However, when connected directly via the terminal during a reboot, they saw the messages in both the terminal and the backing log file.

Looking at the possible categories:

- **mistranslation**: This usually refers to incorrect mapping from source to target architecture or IR, which doesn't seem relevant here.
- **assembly**: Lowering assembly codeâ€”doesn't fit this issue about logging.
- **device**: Could relate if it's a hardware device problem, but virtlogd is more of a service for logging.
- **graphic**: Not related to display issues.
- **socket** or **network**: The bug isn't about networking or socket communication directly.
- **KVM**: KVM is part of QEMU, but this issue is specific to logging via virtlogd, not the hypervisor itself.
- **boot**: This seems relevant because it's about boot messages not being logged during the guest OS boot process.
- **vnc**: Not related to VNC server or display issues.
- **debug**, **files**, **permissions**, **performance**, **kernel**, **peripherals**, **hypervisor**: None of these seem directly related to the logging issue described.

The key here is that the problem occurs during the guest's boot process, where the expected log messages aren't being captured. Since virtlogd is supposed to handle logging for char devices used by QEMU, and it's failing during the boot phase, the most appropriate category is "boot".
</think>

boot