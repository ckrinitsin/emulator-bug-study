<think>
Alright, let's try to figure out which category this bug report falls into. The user provided a description of the problem and steps to reproduce it.

First, looking at the description: After booting QEMU with `-cpu host`, there's no "mmu-type" in the dtb (device tree binary). They also mentioned that the SATP is invalid while KVM is set to CPU host. 

So, I know that SATP relates to the Segment Address Translation Pointer, which is part of the RISC-V architecture and deals with MMU configuration. The missing "mmu-type" in the dtb suggests an issue with how QEMU is handling device tree generation for the MMU.

The user also included a CPU device tree snippet, but it doesn't show any mmu-related nodes, which would typically be where the mmu-type property resides. This implies that during the boot process, something isn't generating or setting the correct dtb entries for the MMU.

Looking at the steps to reproduce: just using `-cpu host` with QEMU. The fact that this is happening when KVM is involved (since -cpu host typically implies using the host's CPU capabilities) suggests it's related to how QEMU/KVM interacts with the target architecture, specifically RISC-V in this case.

The possible categories include 'mistranslation', which refers to incorrect mapping from source to target. Since the issue arises during the boot process and affects the device tree (which is part of the target's hardware description), it might be a translation issue between the host CPU and the guest's RISC-V setup.

Other possibilities like 'device' or 'network' don't seem to fit here, as the problem is specific to the CPU and MMU configuration. 'KVM' could also be relevant, but the primary issue seems more about how QEMU translates the host's CPU settings into the target's device tree, which points towards a mistranslation.

So, putting it all together, the bug likely stems from incorrect handling of the source (host) CPU features when generating the target's device tree for KVM. This falls under 'mistranslation'.
</think>

The issue arises due to incorrect semantic mapping from the host CPU to the target RISC-V architecture during boot, which affects the MMU configuration and device tree generation.

**Category: mistranslation**

```