<think>
Okay, so I'm trying to figure out why this QEMU/KVM error is happening when running a nested virtual machine on my Broadwell host. The error message mentions an assertion failure in kvm.c at line 1713, specifically that the return value 'ret' doesn't equal 'n'. From what I understand, this has something to do with setting MSRs (Model-Specific Registers) using KVM.

First, let me look up what the commit mentioned says. The commit by Paolo Bonzini adds an assertion to ensure that all requested MSRs are correctly set via KVM_GET/SET_MSRS. That makes sense because if not all MSRs are being handled properly, it could lead to issues in nested virtualization.

I see that when I run with the previous commit (273c515), the error doesn't occur, and the VM starts as expected. But when I'm on commit 48e1a45, the assertion fails. This suggests that the change introduced by 48e1a45 is causing the problem.

I remember reading that nested virtualization in KVM relies heavily on MSRs to maintain accurate CPU state for the guest. If the host's KVM implementation isn't correctly handling all the necessary MSRs, especially when adding new features or fixing bugs, it can cause these kinds of assertion failures.

So, maybe the problem is that after this commit, QEMU expects more MSRs to be set than what my current KVM setup supports on the Broadwell host. Or perhaps there's a regression in how MSRs are being handled during nested VM execution.

I should check if my KVM version is compatible with this change. The user mentioned they're using qemu-kvm-2.6.2 and kernel 4.8.15, which might be older versions. Maybe newer KVM or QEMU versions handle these MSRs correctly now. Alternatively, there could have been a bug fix in later commits that resolve this issue.

Another thought: perhaps some of the MSRs required by the nested VM aren't properly exposed or supported on Broadwell when using the virtio devices and other configurations as specified in the command line. The configuration includes multiplevirtio devices, such as SCSI, net, and serial ports, which might interact with how MSRs are managed.

I also wonder if there's a way to disable or adjust the MSR handling for this specific VM setup temporarily while waiting for an upstream fix. Maybe by adjusting certain QEMU flags or configurations, I can bypass the problematic assertion or provide the necessary MSRs manually.

But since modifying production code isn't ideal, perhaps the best approach is to look into whether there have been any subsequent fixes to commit 48e1a45 that address this issue. If so, updating to a newer version of QEMU where this problem has been resolved would be the way to go.

Alternatively, if I can't update the software, maybe working around the issue by avoiding nested virtualization or adjusting the VM's hardware configuration to not require as many MSRs might help, but that seems less than ideal for my use case.

In summary, the assertion failure is likely due to a regression introduced in commit 48e1a45 where QEMU now expects all MSRs to be set correctly when running nested VMs on Broadwell. This isn't happening, causing the error. To fix this, I should check if newer versions of QEMU address this issue or look for workarounds that adjust how MSRs are handled during nested VM execution.
</think>

The assertion failure in QEMU is caused by commit 48e1a45, which introduces stricter checks on MSR handling during KVM operations. This change expects all requested MSRs to be set correctly but fails on a Broadwell host with the given setup. 

**Solution:**
To resolve this issue, update your QEMU/KVM to a newer version where this problem has been fixed, or revert to an earlier commit that doesn't introduce the strict MSR checks until compatibility is ensured.