<think>
Alright, let me try to figure out the category for this bug report. The issue is about a PS/2 keyboard returning an incorrect scan code for F7. So, the user mentioned that when using QEMU version 2.1 from Debian Jessie, pressing F7 sends 0x02 instead of the correct 0x83 to the guest.

First, I should recall what each category means. "Mistranslation" refers to incorrect mapping between source and target architectures, usually in user-mode assembly lowering. The bug is about hardware input (keyboard) misreporting a key's scan code. 

Looking at the provided map in hw/input/ps2.c, it seems that the correct values are set for other keys like F1-F6, but F7 isn't mapped correctly. This suggests an issue with how QEMU handles PS/2 keyboard input mapping.

Since the problem is related to hardware devices, specifically the keyboard and its interaction with the guest OS via QEMU's device emulation, it falls under the "device" category. It doesn't involve assembly translation or performance issues but rather incorrect handling of hardware input.
</think>

The bug report describes an issue where the PS/2 keyboard in QEMU is returning an incorrect scan code for the F7 key to the guest operating system. The user observes that instead of receiving 0x83, which they believe is the correct scan code for F7 in scan set 2, the guest receives 0x02. They also note that the `ps2_raw_keycode` array in `hw/input/ps2.c` contains correct values for other keys (e.g., F1-F6) but does not include 0x83 for F7.

Given this information, the issue appears to be related to how QEMU maps keyboard scan codes. Specifically, it involves the PS/2 keyboard device incorrectly mapping the F7 key's scan code. This falls under the "device" category because it pertains to the hardware emulation of the PS/2 keyboard and its interaction with the guest.

**Answer: device**