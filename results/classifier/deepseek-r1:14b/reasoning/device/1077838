<think>
Alright, so I'm trying to classify this bug report for QEMU into one of the given categories. The user provided a detailed scenario where using `qemu-nbd` in read-only mode (-r) taints the device for subsequent uses, even after detaching it with `-d`. They showed that when they try to use the same NBD device again in read-write mode, it fails with an "Operation not permitted" error.

First, I need to understand what's happening here. The user is using `qemu-nbd` to set up block devices for their images. When they run it with `-r`, which stands for read-only mode, and then later try to use the same device without `-r`, it doesn't work as expected.

Looking at the categories provided: mistranslation, assembly, other, device, graphic, socket, network, KVM, boot, vnc, debug, files, permissions, performance, kernel, peripherals, hypervisor.

The issue here seems to be related to how QEMU handles the block devices after they've been used in read-only mode. It's about the state of the device being left in a tainted or incorrect mode even after detachment. So when the user tries to reattach it as read-write, it doesn't work properly.

Now, considering the categories: "device" seems relevant here because it's directly related to the handling of block devices (NBD). The problem isn't about translation issues (mistranslation), nor is it related to performance or network. It's more about how QEMU manages device states and permissions after certain operations.

The user mentioned that after using `-r` once, subsequent uses in read-write mode fail. This suggests a permission issue or some state leftover from the previous operation. So, "device" makes sense because it's about the behavior of the block devices managed by QEMU.
</think>

device