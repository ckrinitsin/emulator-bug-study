semantic: 0.164
other: 0.147
device: 0.111
performance: 0.075
graphic: 0.068
vnc: 0.067
files: 0.064
permissions: 0.061
network: 0.051
socket: 0.049
PID: 0.042
debug: 0.040
boot: 0.039
KVM: 0.022
debug: 0.413
other: 0.147
files: 0.108
performance: 0.060
PID: 0.046
semantic: 0.045
network: 0.043
device: 0.033
socket: 0.021
permissions: 0.019
graphic: 0.019
KVM: 0.017
boot: 0.016
vnc: 0.014

SSE CMP ops with 8bit immediate throw sigill with oversized byte

The SSE comparison ops that use an 8bit immediate as a comparison type selector throws a sigill when the immediate is oversized.

Test op that I found this on is here `66 0f c2 c0 d1          cmppd  xmm0,xmm0,0xd1`
According to the x86-64 documentation only bits [2:0] are used for these ops (and [4:0] for the AVX variant)
Currently qemu just checks if the value is >=8 and will throw a sigill in that case. It instead needs to mask.

I have a small patch that fixes the issue for the SSE variant.




This is an automated cleanup. This bug report has been moved to QEMU's
new bug tracker on gitlab.com and thus gets marked as 'expired' now.
Please continue with the discussion here:

 https://gitlab.com/qemu-project/qemu/-/issues/184


