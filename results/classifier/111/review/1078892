device: 0.155
other: 0.151
boot: 0.133
semantic: 0.130
vnc: 0.087
graphic: 0.078
files: 0.049
debug: 0.038
performance: 0.035
socket: 0.033
permissions: 0.030
PID: 0.029
network: 0.026
KVM: 0.025
debug: 0.510
boot: 0.117
other: 0.074
PID: 0.065
performance: 0.055
files: 0.036
device: 0.035
network: 0.028
semantic: 0.025
socket: 0.020
vnc: 0.011
permissions: 0.010
graphic: 0.007
KVM: 0.006

qemu doesn't general protection fault if there are reserved bits set in page-directory-pointer table entries

While working on implementing 32-bit PAE mode in a custom operating system, which I was testing in QEMU, I noticed that my OS worked correctly, but resulted in a general protection fault when booted on VMware, VirtualBox, or bochs.

According to the Intel Architecture Manual, Volume 3A, Section 4.4.1 "PDPTE Registers", "If any of the PDPTEs sets both the P flag (bit 0) and any reserved bit, the MOV to CR instruction causes a general-protection exception (#GP(0)) and the PDPTEs are not loaded." QEMU does not emulate this behavior.

Triaging old bug tickets ... can you still reproduce this issue with the
latest version of QEMU (version 2.9)?

[Expired for QEMU because there has been no activity for 60 days.]

