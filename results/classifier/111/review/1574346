other: 0.313
semantic: 0.124
device: 0.091
graphic: 0.066
vnc: 0.051
performance: 0.048
permissions: 0.047
files: 0.045
PID: 0.041
debug: 0.039
network: 0.039
socket: 0.036
boot: 0.034
KVM: 0.028
debug: 0.292
other: 0.167
semantic: 0.093
files: 0.088
device: 0.065
network: 0.057
socket: 0.048
performance: 0.045
PID: 0.036
boot: 0.035
permissions: 0.027
vnc: 0.019
graphic: 0.018
KVM: 0.009

TCG: mov to segment register is incorrectly emulated for AMD CPUs

In TCG mode, the effect of:

xorl %eax, %eax
movl %eax, %gs

is to mark the GS segment unusable and set its base to zero.  After doing this, reading MSR_GS_BASE will return zero and using a GS prefix in long mode will treat the GS base as zero.

This is correct for Intel CPUs but is incorrect for AMD CPUs.  On an AMD CPU, writing 0 to %gs using mov, pop, or (I think) lgs will leave the base unchanged.

To make it easier to use TCG to validate behavior on different CPUs, please consider changing the TCG behavior to match actual CPU behavior when emulating an AMD CPU.

The QEMU project is currently considering to move its bug tracking to
another system. For this we need to know which bugs are still valid
and which could be closed already. Thus we are setting older bugs to
"Incomplete" now.

If you still think this bug report here is valid, then please switch
the state back to "New" within the next 60 days, otherwise this report
will be marked as "Expired". Or please mark it as "Fix Released" if
the problem has been solved with a newer version of QEMU already.

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

