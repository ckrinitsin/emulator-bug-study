<think>
Okay, so I'm trying to figure out how to classify this bug report for QEMU. The user is having an issue with the display resolution when using EFI firmware in QEMU on Windows. Specifically, they're setting the mode to 1366x768, but QEMU only uses a width of 1360 instead.

First, I'll read through the bug report again to understand the details. The user is using OVMF-pure-efi.fd and OVMF_VARS-pure-efi.fd from Kraxel's repository. They set the GOP (Graphics Output Protocol) mode to 1366x768, but QEMU shows a window width of 1360. This happens both when choosing the mode in the EFI firmware and after letting the environment run.

The user did some testing and noticed that if they manually adjust the HORZ WIDTH and PIXELS PER SCANLINE to 1360 while using the 1366x768 mode, the display becomes correct. So, the issue seems related to how QEMU or the EDK2 firmware is handling the width value.

They considered a few possibilities:

1. The EDK2 firmware might be sending the wrong width, either by mistake in code or due to some bit manipulation. They looked into QEMU's Windows version and found a typo in a comment but nothing related to the width issue.

2. QEMU or SDL2 (which it uses on Windows) could be truncating the lower three bits of the width, resulting in 1360 instead of 1366. This seems plausible because many other modes have widths where the lower three bits are zero, but 1366 is not one of them.

The user also points out that in QEMU's sdl2-2d.c file, there's a typo in a comment: "Thes are the ones I have tested." which should be "These". That might not directly relate to the bug but shows attention to detail.

So, considering all this, the bug is related to how the width value is handled when setting up the display mode. Since it's about the incorrect mapping of the width value from the firmware to QEMU's display, it falls under the 'mistranslation' category because there's a semantic issue in how the data is processed or passed between different layers (EDK2, QEMU, SDL2).
</think>

The bug report describes an issue where setting a specific resolution results in an incorrect width being used. This suggests a problem with how the resolution value is handled during translation from the firmware to the display setup in QEMU.

**mistranslation**