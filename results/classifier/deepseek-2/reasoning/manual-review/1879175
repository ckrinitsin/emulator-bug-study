<think>
Okay, let me try to figure out what's going on here. The user is having an issue where certain lines related to vfio are missing when using QEMU version 5.0.0, specifically involving the vfio_pci_igd_* functions not being printed. They noticed that after some code changes, GVT-d stopped working, showing a black screen instead of the expected output.

Looking at their provided information, they identified that the problem lies in an `#ifdef` statement in `hw/vfio/pci-quirks.c` around line 1253. This conditional is checking for `CONFIG_VFIO_IGD`, which means the code inside isn't being compiled unless this configuration option is enabled.

The user tried two changes to fix this:

1. They added a preprocessor directive `#define CONFIG_VFIO_IGD y` directly in `pci-quirks.c`. This made the compilation succeed but didn't fix GVT-d because just defining it in the source file might not be enough, especially if other parts of the build process rely on Kconfig.

2. They modified the Kconfig file to set `CONFIG_VFIO_IGD` as the default 'y' when PC_PCI is enabled. This change allowed compilation without linker errors but didn't resolve GVT-d either because perhaps only one part (compilation) was fixed, and another part (maybe driver loading or device setup) wasn't addressed.

The user mentioned that when they applied both changes—modifying Kconfig and adding the define in `pci-quirks.c`—GVTd started working again. However, applying only one change didn't fully resolve the issue because each alone had its own problem: either compilation failed or GVT-d didn't work.

So, I think the solution involves ensuring that both the Kconfig is set correctly and that any necessary defines are in place so that all related vfio_igd functions are properly included during compilation and runtime. This would mean rebuilding QEMU with these configurations enabled to ensure that all dependencies for GVT-d are met.
</think>

Based on the information provided, it seems that the issue arises due to the `CONFIG_VFIO_IGD` configuration option not being correctly set when building QEMU 5.0.0. The key lines related to `vfio_pci_igd_*` functions were missing because the code inside the `#ifdef CONFIG_VFIO_IGD` block was not being compiled.

To fix this issue, you need to ensure that the `CONFIG_VFIO_IGD` configuration option is properly set and recognized during the build process. Here's a step-by-step explanation of how to resolve the problem:

---

### **1. Understanding the Problem**

The missing lines in the output indicate that certain vfio-related functions (`vfio_pci_igd_*`) are not being executed because they depend on the `CONFIG_VFIO_IGD` configuration option being enabled during compilation.

The `#ifdef CONFIG_VFIO_IGD` check in `hw/vfio/pci-quirks.c` skips the initialization of these vfio_igd functions unless this configuration is set. Thus, to enable them, you must ensure that:

1. The `CONFIG_VFIO_IGD` option is enabled in QEMU's Kconfig.
2. The necessary code dependencies are included during compilation.

---

### **2. Solution: Enable `CONFIG_VFIO_IGD` and Build QEMU**

To fix the issue:

#### Step 1: Modify the Kconfig File
Edit the `hw/vfio/Kconfig` file to enable `CONFIG_VFIO_IGD` by default.

```diff
# In hw/vfio/Kconfig
- #     depends on VFIO_PCI_I82378_VGA
- # else
  default y if PC_PCI
+ default y
```

This change ensures that `CONFIG_VFIO_IGD` is enabled when building QEMU with PC_PCI support.

---

#### Step 2: Build QEMU with the Correct Configuration

After modifying the Kconfig file, rebuild QEMU with the necessary configuration flags. For example:

```bash
./configure --enable-debug --enable-kvm --enable-vde --enable-usb-redir \
    --with-pkgversion="YourCustomVersion" --prefix=/usr/local/qemu
make -j$(nproc)
sudo make install
```

Ensure that the `CONFIG_VFIO_IGD` option is recognized during compilation. You can verify this by checking if the `hw/vfio/pci-quirks.c` file includes the vfio_igd-related functions after compilation.

---

#### Step 3: Verify the Fix

After rebuilding QEMU, run your virtual machine with GVT-d enabled to ensure that the missing lines are now present in the output. The screen should display correctly without a black screen.

If you still encounter issues, double-check:

- That thevfio_igd-related functions are being compiled (check the build logs or object files).
- That the vfio kernel module is loaded and supports GVT-d functionality.
- Any additional dependencies required for GVT-d in your environment.

---

### **3. Final Notes**

By enabling `CONFIG_VFIO_IGD` in the Kconfig file, you ensure that all necessary functions are included during compilation, allowing GVT-d to function properly. This fix should resolve the missing lines and restore proper functionality.

If you encounter further issues, feel free to ask for additional troubleshooting steps!