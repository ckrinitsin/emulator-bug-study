<think>
Okay, I need to classify this bug report for QEMU into one of the given categories. Let me read through the problem description carefully.

The issue reported is about QEMU sending excess VNC data to a websocket proxy when the client's network is slow. The user observed that other VNC servers behave correctly by reducing data transmission, but QEMU doesn't and causes the client to get stuck or crash because it can't handle the high data rate.

Looking at the categories provided: mistranslation, assembly lowering, device, graphic, socket, network, KVM, boot, vnc, debug, files, permissions, performance, kernel, peripherals, hypervisor, other. 

The problem is related to VNC data transmission over a network with limited bandwidth. QEMU's behavior under poor network conditions leads to excessive data being sent, causing issues on the client side. This seems directly connected to how QEMU handles VNC connections and manages data flow through the websocket proxy.

Since the issue is about VNC communication and network performance, especially concerning data transmission rates, it falls under the 'network' category. The problem isn't related to translation errors or assembly code but rather to how network traffic is managed during VNC sessions.
</think>

The bug report describes an issue where QEMU sends excessive VNC data over a slow network connection, causing problems for the client. This relates to network performance and data handling during VNC communication.

**network**

```