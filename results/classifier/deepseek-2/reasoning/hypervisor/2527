<think>
Okay, I need to classify this bug report: "bFLT parser doesn't select MMU-less CPU" into one of the given categories for QEMU. The possible categories are mistranslation, assembly, other, device, graphic, socket, network, KVM, boot, vnc, debug, files, permissions, performance, kernel, peripherals, hypervisor.

First, let's understand what the bug is about. bFLT stands for "Berkeley File Layout Tag Trailer," which is related to the way QEMU handles certain types of binaries or images. The parser not selecting an MMU-less CPU suggests that when using a binary with bFLT format, QEMU isn't correctly identifying or setting up the CPU without an MMU (Memory Management Unit).

MMUs are typically found in more advanced CPUs, while simpler systems like those used in some embedded or bare-metal environments might use MMU-less CPUs. In such cases, QEMU needs to configure the virtual machine accordingly.

Now, looking at the categories: 

- Mistranslation is about incorrect mappings from source to target architecture.
- Assembly lowering relates to converting high-level code to assembly.
- The other category is for things that don't fit into specific others.
- Device could be related if it's a hardware device issue, but this seems more CPU-related.
- Graphic, socket, network: these seem unrelated.
- KVM is a hypervisor; maybe relevant because QEMU can act as a KVM hypervisor.
- Boot relates to the boot process, which might involve MMU settings.
- VNC, debug, files, permissions, performance: not directly related here.
- Kernel, peripherals: perhaps, but I'm not sure.
- Hypervisor is another option since QEMU can function as one.

The issue seems to be about CPU configuration during the boot process. The bFLT parser's job might involve setting up the correct CPU type for the target system. If it doesn't select an MMU-less CPU, it's probably a problem with how the parser configures or selects the CPU model, which falls under the hypervisor's responsibilities because KVM in QEMU involves managing virtual CPUs and their features.

Alternatively, "boot" could be relevant since the bug affects the boot process. However, the hypervisor category seems more precise because it deals with the underlying hardware configuration for the VMs, including CPU selection.

So, considering that the MMU configuration is part of how the hypervisor sets up the virtual machine's hardware, I think "hypervisor" is the most appropriate category here.
</think>

hypervisor