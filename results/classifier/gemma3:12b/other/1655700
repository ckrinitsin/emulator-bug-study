
disas/libvixl/vixl/invalset.h: possible dodgy code in binary search ?


[qemu/disas/libvixl/vixl/invalset.h:442]: (style) Array index 'low' is used before limits check.

Source code is

    while (!IsValid(elements[low]) && (low < high)) ++low;

Also:

qemu/disas/libvixl/vixl/invalset.h:450]: (style) Array index 'middle' is used before limits check.

The source code is

   while (!IsValid(elements[high]) && (low < high)) --high;

Mind you, these lines of code look similar but didn't get reported:

    while (!IsValid(elements[middle]) && (middle < high - 1)) ++middle;
    while (!IsValid(elements[middle]) && (low + 1 < middle)) --middle;

Given that binary search is notoriously tricky to get correct and a standard C library routine
I am puzzled as to why the standard library routine didn't get used, with of course a custom
comparison function.