device: 0.861
architecture: 0.805
kernel: 0.805
performance: 0.737
ppc: 0.714
socket: 0.702
graphic: 0.673
network: 0.654
mistranslation: 0.638
boot: 0.637
vnc: 0.621
files: 0.575
semantic: 0.543
assembly: 0.519
arm: 0.518
debug: 0.428
VMM: 0.412
permissions: 0.399
PID: 0.371
KVM: 0.322
i386: 0.322
risc-v: 0.305
x86: 0.297
TCG: 0.234
hypervisor: 0.229
user-level: 0.219
peripherals: 0.218
register: 0.198
virtual: 0.163

MIPS Malta mini-bootloader print function has bad jump instruction

One of the hardcoded bootloader library instructions in the MIPS Malta mini-bootloader's print function is:

stl_raw(p++, 0x08000205);                                     /* j 814 */

Since this function is loaded at 0xbfc00808, this jump jumps to the middle of nowhere. The properly-encoded instruction is:

stl_raw(p++, 0x0bf00205);                                     /* j 814 */

With this patch, the print function behaves as expected.



Looks like this has been finally fixed by this commit here:
http://git.qemu.org/?p=qemu.git;a=commitdiff;h=7f81dbb9a0e89b53

