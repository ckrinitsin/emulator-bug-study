architecture: 0.912
graphic: 0.897
virtual: 0.863
performance: 0.773
device: 0.751
arm: 0.737
ppc: 0.719
kernel: 0.707
semantic: 0.686
VMM: 0.675
KVM: 0.669
files: 0.655
socket: 0.650
debug: 0.645
PID: 0.631
hypervisor: 0.626
vnc: 0.615
network: 0.614
x86: 0.610
risc-v: 0.607
i386: 0.574
permissions: 0.548
boot: 0.541
TCG: 0.482
peripherals: 0.462
register: 0.460
assembly: 0.458
mistranslation: 0.430
user-level: 0.392
--------------------
arm: 0.999
debug: 0.682
hypervisor: 0.329
kernel: 0.246
performance: 0.095
architecture: 0.067
files: 0.066
virtual: 0.064
TCG: 0.055
device: 0.029
assembly: 0.021
PID: 0.019
user-level: 0.019
peripherals: 0.018
register: 0.015
risc-v: 0.014
graphic: 0.012
VMM: 0.012
KVM: 0.011
semantic: 0.007
network: 0.006
mistranslation: 0.005
boot: 0.003
socket: 0.003
permissions: 0.003
vnc: 0.002
ppc: 0.001
x86: 0.001
i386: 0.000

ARM: When 'virsh dump' exports vmcore, specifies --format compression format, virtual machine assert hangs
Description of problem:
**ARM: virsh dump exports vmcore, specifies --format compression format, virtual machine assert hangs**

**why 'virsh dump' page size configured as target page size (64KiB), but 'Implement kvm-steal-time' page size configured as host page size (4KB)?**
Steps to reproduce:
The vm image page size is configured as 64KiB, and the host page size is configured as 4KiB

1.start vm

2.Execute the virsh dump command to export vmcore

Specify the compression format of vmcore, --format (kdump-zlib, kdump-snappy, kdump-lzo)

/usr/bin/virsh dump avocado-vt-vm1 /var/tmp/vm.core --memory-only --format kdump-zlib

/usr/bin/virsh dump avocado-vt-vm1 /var/tmp/vm.core --memory-only --format kdump-lzo

/usr/bin/virsh dump avocado-vt-vm1 /var/tmp/vm.core --memory-only --format kdump-snappy

**expected results**: The vmcore file is successfully exported and the virtual machine is running normally.

**actual results**: The vmcore file is not exported normally, and the virtual machine is shut down abnormally.
Additional information:
qemu log:
![image](/uploads/95df79f1cda2531e00906493cc586cda/image.png)

host page size:
![image](/uploads/1b8f7c6c1c3248b9c68d577105aed65a/image.png)

vm page size:
![image](/uploads/e11f4013d90ce9cd41966c05aefc56e2/image.png)

dump.c: get_next_page assert:
![image](/uploads/aa73fc306ff19d6da4ff86fba6860d94/image.png)

The code for the error assert exit is shown above. Here, it will check whether the memory to be dumped is actually aligned with the termination address. It needs to be aligned with the page size of the virtual machine. You can see through gdb that it is 64KiB.

![image](/uploads/7e60743bea0009b1deb97539750630e6/image.png)

After binary search, it was found that a feature of kvm_steal_time was added to arm in version 5.2. Added the following code:
![image](/uploads/1caf8df4b3599b3c453a11592d0ce033/image.png)
