TCG: 0.846
architecture: 0.742
semantic: 0.735
graphic: 0.664
device: 0.625
performance: 0.607
socket: 0.554
vnc: 0.546
PID: 0.522
peripherals: 0.510
ppc: 0.508
network: 0.485
hypervisor: 0.456
files: 0.441
register: 0.419
risc-v: 0.416
kernel: 0.414
virtual: 0.410
x86: 0.408
user-level: 0.378
assembly: 0.322
VMM: 0.305
permissions: 0.264
i386: 0.259
debug: 0.218
mistranslation: 0.198
arm: 0.192
boot: 0.138
KVM: 0.120
--------------------
assembly: 0.575
TCG: 0.164
debug: 0.097
performance: 0.084
files: 0.081
virtual: 0.060
user-level: 0.053
kernel: 0.028
semantic: 0.025
register: 0.024
VMM: 0.018
device: 0.012
architecture: 0.011
hypervisor: 0.007
peripherals: 0.005
PID: 0.005
KVM: 0.004
risc-v: 0.004
boot: 0.003
x86: 0.003
permissions: 0.002
graphic: 0.001
arm: 0.001
network: 0.001
ppc: 0.001
socket: 0.001
vnc: 0.001
mistranslation: 0.001
i386: 0.001

m68k: fpu: fsave/frestore should be enabled for 68020/68030
Description of problem:
valid 68020/68030 code can use `fsave`/`frestore` instructions to save/restore the state of an external 68881/68882 but currently QEMU only allows these instructions on 68040 and everyone else gets an f-line exception.

I guess something like this to allow frestore/fsave. m68k programmers reference manual says they are 68881/68882/68040 and there don's seem to be any differences.

``` diff
diff --git a/target/m68k/translate.c b/target/m68k/translate.c
index d5d2322329..92dc9d8563 100644
--- a/target/m68k/translate.c
+++ b/target/m68k/translate.c
@@ -5455,7 +5455,7 @@ DISAS_INSN(frestore)
         gen_exception(s, s->base.pc_next, EXCP_PRIVILEGE);
         return;
     }
-    if (m68k_feature(s->env, M68K_FEATURE_M68040)) {
+    if (m68k_feature(s->env, M68K_FEATURE_FPU)) {
         SRC_EA(env, addr, OS_LONG, 0, NULL);
         /* FIXME: check the state frame */
     } else {
@@ -5472,7 +5472,7 @@ DISAS_INSN(fsave)
         return;
     }
 
-    if (m68k_feature(s->env, M68K_FEATURE_M68040)) {
+    if (m68k_feature(s->env, M68K_FEATURE_FPU)) {
         /* always write IDLE */
         TCGv idle = tcg_constant_i32(0x41000000);
         DEST_EA(env, insn, OS_LONG, idle, NULL);
```
