architecture: 0.846
performance: 0.727
device: 0.723
arm: 0.705
files: 0.661
ppc: 0.648
debug: 0.624
user-level: 0.582
semantic: 0.547
kernel: 0.524
register: 0.480
permissions: 0.476
socket: 0.474
PID: 0.458
boot: 0.457
hypervisor: 0.454
graphic: 0.441
network: 0.422
mistranslation: 0.417
peripherals: 0.401
vnc: 0.395
risc-v: 0.374
TCG: 0.332
VMM: 0.309
assembly: 0.305
virtual: 0.296
KVM: 0.192
x86: 0.158
i386: 0.091
--------------------
debug: 0.989
arm: 0.933
user-level: 0.571
hypervisor: 0.259
virtual: 0.054
kernel: 0.029
TCG: 0.022
performance: 0.021
files: 0.016
PID: 0.010
architecture: 0.007
network: 0.004
device: 0.003
semantic: 0.003
register: 0.003
assembly: 0.002
graphic: 0.002
socket: 0.002
vnc: 0.001
peripherals: 0.001
ppc: 0.001
permissions: 0.001
boot: 0.001
risc-v: 0.000
VMM: 0.000
x86: 0.000
mistranslation: 0.000
i386: 0.000
KVM: 0.000

qemu-aarch64 hangs on cptofs during a build of NixOS SD card image

First, thank you for this incredible project.

While following this guide to build my own image of NixOS: https://nixos.wiki/wiki/NixOS_on_ARM#Compiling_through_QEMU on ARM Aarch64.

I encountered a very strange behavior, qemu is correctly used and build most of the binaries until it executes this exact line over qemu: https://github.com/NixOS/nixpkgs/blob/master/nixos/lib/make-ext4-fs.nix#L55

At this step, the qemu process goes to 100 % of CPU, hangs in a certain syscall I don't know which one (according to strace & gdb which has no symbols so breaking and looking the backtrace was useless).

According to iotop, no I/O was done.

And it spent all its time in this syscall during more than 10 hours, which looks anomalous to me.

I attach some of my CPU info:

model		: 142
model name	: Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz
stepping	: 10
microcode	: 0x96
cpu MHz		: 3107.071
cache size	: 8192 KB

I'm using a ThinkPad T480 to perform those builds, I'm uncertain of how to debug further this issue, I discussed this with some people over #nixos-aarch64 and they told me they didn't know how to debug it further too.

I tried all with this package: https://aur.archlinux.org/packages/qemu-arm-static/ — I'm currently compiling qemu-git to see if it happens on upstream too. Will comment when it's done.

Thank you in advance!

Update: compiling qemu upstream & using the latest version didn't change anything.


I don't know if this is an instance of user emulation limitations due to missing syscalls.

The QEMU project is currently considering to move its bug tracking to
another system. For this we need to know which bugs are still valid
and which could be closed already. Thus we are setting older bugs to
"Incomplete" now.

If you still think this bug report here is valid, then please switch
the state back to "New" within the next 60 days, otherwise this report
will be marked as "Expired". Or please mark it as "Fix Released" if
the problem has been solved with a newer version of QEMU already.

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

