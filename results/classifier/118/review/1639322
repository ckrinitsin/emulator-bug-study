user-level: 0.930
graphic: 0.864
performance: 0.667
mistranslation: 0.657
ppc: 0.636
debug: 0.610
semantic: 0.572
device: 0.552
register: 0.521
permissions: 0.515
PID: 0.487
architecture: 0.463
network: 0.456
virtual: 0.431
peripherals: 0.427
files: 0.425
vnc: 0.398
socket: 0.369
TCG: 0.346
x86: 0.309
arm: 0.305
risc-v: 0.302
VMM: 0.255
hypervisor: 0.232
kernel: 0.220
boot: 0.211
i386: 0.206
assembly: 0.150
KVM: 0.102
--------------------
ppc: 0.984
debug: 0.732
user-level: 0.657
TCG: 0.076
files: 0.033
virtual: 0.017
PID: 0.015
device: 0.014
hypervisor: 0.007
performance: 0.005
kernel: 0.005
network: 0.003
peripherals: 0.003
graphic: 0.003
architecture: 0.002
socket: 0.002
semantic: 0.002
boot: 0.002
register: 0.002
x86: 0.001
VMM: 0.001
assembly: 0.001
risc-v: 0.000
permissions: 0.000
arm: 0.000
vnc: 0.000
mistranslation: 0.000
KVM: 0.000
i386: 0.000

pasting into ppc64 serial console kills qemu

- run qemu-system-ppc64
- when X window appears press Ctrl+Alt+3
- paste any text longer than 16 characters


qemu-system-ppc64: /home/abuild/rpmbuild/BUILD/qemu-2.6.1/hw/char/spapr_vty.c:40: vty_receive: Assertion `(dev->in - dev->out) < 16' failed.
Aborted (core dumped)

Broken in SUSE Leap 42.2 and git 4eb28abd52d48657cff6ff45e8dbbbefe4dbb414

What user interface are you using? VNC? SDL? GTK?

This is gtk interface.

However, the function on line 40 os spapr_vty.c looks really insane.

It asserts that it is not given more data to input in a ring buffer than is size of the buffer and then stuffs all the data in regardless of the amount of data already present.

It should probably loop or one of its callers but I did not find a decent comparable piece of code to cut and paste whatever callbacks are needed for the other side to consume the bytes.

OK, seems like you need to compile QEMU with CONFIG_VTE enabled (i.e. with the vte-devel packages installed before running configure) to get copy-n-paste support in the GTK interface, that's why I was initially not able to reproduce this issue.
Anyway, now I can trigger the assert(), too, and I've suggested a patch here:

http://marc.info/?<email address hidden>

FWIW, the crash should be fixed by this commit here:
http://git.qemu.org/?p=qemu.git;a=commitdiff;h=7bacfd7f7289192c83330
(but we still need to fix the gtk side, too, to only send as much characters at once as the receiving side can take)

