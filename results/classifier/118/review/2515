register: 0.898
TCG: 0.892
user-level: 0.890
peripherals: 0.883
virtual: 0.877
assembly: 0.873
debug: 0.867
risc-v: 0.862
architecture: 0.857
arm: 0.855
permissions: 0.849
graphic: 0.840
KVM: 0.838
ppc: 0.838
performance: 0.833
kernel: 0.828
VMM: 0.824
semantic: 0.822
vnc: 0.821
device: 0.811
hypervisor: 0.811
mistranslation: 0.810
PID: 0.809
boot: 0.801
files: 0.765
socket: 0.756
network: 0.656
i386: 0.561
x86: 0.525
--------------------
virtual: 0.922
debug: 0.807
TCG: 0.224
hypervisor: 0.121
kernel: 0.114
user-level: 0.074
VMM: 0.068
PID: 0.046
register: 0.033
files: 0.027
risc-v: 0.021
architecture: 0.018
ppc: 0.015
assembly: 0.015
performance: 0.014
semantic: 0.013
device: 0.013
socket: 0.010
KVM: 0.009
boot: 0.008
network: 0.008
graphic: 0.006
permissions: 0.005
vnc: 0.003
peripherals: 0.003
mistranslation: 0.001
x86: 0.000
arm: 0.000
i386: 0.000

qemu -daemonize crashes on macOS with "NSPlaceholderDate initialize may have been in progress in another thread"
Description of problem:
Context: I build [an open source project](https://tsduck.io/) on several operating systems and architectures. For riscv64, s390x, ppc64, I build in emulated virtual machines. The three emulated OS work correctly when running qemu manually and the project is correctly built.

Now, I want to automate the process in a script: for each target architecture, boot the VM (start qemu as a background process), connect to the VM using ssh, build the software, collect the binaries, shut down the VM.

Starting the same qemu command as used interactively as a background process with `&` does not work and fails immediately, apparently because of the lack of stdin. So, I added option `-daemonize` (and removed `-nographic` because an error message says the two options are incompatible).

Using `-daemonize` instead of `-nographic`, all qemu command immediately fail with the following error:

```
objc[1141]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called.
objc[1141]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called. We cannot safely call it or ignore it in the fork() child process. Crashing instead. Set a breakpoint on objc_initializeAfterForkError to debug.
```
Steps to reproduce:
```
$ qemu-system-riscv64 -machine virt -smp 8 -m 8192 -daemonize \
      -bios fw_jump.bin -kernel u-boot.bin \
      -device virtio-net-device,netdev=net \
      -netdev user,id=net,hostfwd=tcp::2233-:22 \
      -drive file=disk.qcow2,format=qcow2,if=virtio  -device virtio-rng-pci
objc[1141]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called.
objc[1141]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called. We cannot safely call it or ignore it in the fork() child process. Crashing instead. Set a breakpoint on objc_initializeAfterForkError to debug.


$ qemu-system-s390x -machine s390-ccw-virtio -cpu max,zpci=on -smp 8 -m 8192 -daemonize \
      -drive file=disk.qcow2,format=qcow2,if=none,id=drive-virtio-disk0,cache=none \
      -device virtio-blk-ccw,devno=fe.0.0002,drive=drive-virtio-disk0,bootindex=1 \
      -nic user,hostfwd=tcp::2288-:22 
objc[1209]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called.
objc[1209]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called. We cannot safely call it or ignore it in the fork() child process. Crashing instead. Set a breakpoint on objc_initializeAfterForkError to debug.


$ qemu-system-ppc64 -smp 8 -m 8192 -daemonize \
      -drive file=disk.qcow2,format=qcow2 -nic user,hostfwd=tcp::2299-:22
qemu-system-ppc64: warning: TCG doesn't support requested feature, cap-cfpc=workaround
qemu-system-ppc64: warning: TCG doesn't support requested feature, cap-sbbc=workaround
qemu-system-ppc64: warning: TCG doesn't support requested feature, cap-ibs=workaround
qemu-system-ppc64: warning: TCG doesn't support requested feature, cap-ccf-assist=on
objc[1166]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called.
objc[1166]: +[__NSPlaceholderDate initialize] may have been in progress in another thread when fork() was called. We cannot safely call it or ignore it in the fork() child process. Crashing instead. Set a breakpoint on objc_initializeAfterForkError to debug.
```

All the above commands work correctly when using  `-nographic` instead of `-daemonize`. The virtual disks are the same as in the interactive runs, with a fully configured Linux OS (Ubuntu or Debian).
Additional information:
From a [report from here](https://stackoverflow.com/questions/63041445/python-os-high-sierra-nsplaceholderdate-error), I tried to define the environment variable `OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES` before running qemu. The `[__NSPlaceholderDate initialize]` errors disappear but qemu still crashes immediately.
