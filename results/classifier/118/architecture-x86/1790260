x86: 0.893
graphic: 0.849
architecture: 0.828
user-level: 0.717
performance: 0.703
semantic: 0.691
device: 0.654
mistranslation: 0.643
ppc: 0.628
register: 0.590
network: 0.588
permissions: 0.583
debug: 0.565
risc-v: 0.552
files: 0.543
vnc: 0.535
PID: 0.533
kernel: 0.527
VMM: 0.517
peripherals: 0.502
socket: 0.449
hypervisor: 0.430
boot: 0.425
TCG: 0.403
virtual: 0.385
i386: 0.367
KVM: 0.320
assembly: 0.316
arm: 0.310
--------------------
x86: 0.966
user-level: 0.932
i386: 0.694
hypervisor: 0.486
virtual: 0.420
TCG: 0.089
debug: 0.058
kernel: 0.055
files: 0.050
PID: 0.009
risc-v: 0.008
architecture: 0.008
semantic: 0.007
performance: 0.005
network: 0.004
device: 0.003
boot: 0.003
ppc: 0.003
register: 0.003
socket: 0.002
vnc: 0.001
assembly: 0.001
permissions: 0.001
peripherals: 0.001
arm: 0.001
graphic: 0.001
VMM: 0.001
mistranslation: 0.000
KVM: 0.000

binfmt support not working for x86 host and x86_64 guest

this is a problem in the qemu-binfmt-conf.sh script and maybe somewhere else. the version i checked is the current github mirror https://github.com/qemu/qemu/blob/master/scripts/qemu-binfmt-conf.sh

i am running linux mint 19 32bit on a 32bit x86 cpu and i want to run some applications that are only available as x86_64 packages. i use multiarch and qemu and it works for simple applications like cacafire. however i want to run the application natively from the shell without having to use qemu-x86_64 <path>. i also installed the binfmt-support package. when i run update-binfmts --display then an extry for x86_64 is missing and transparent execution is not working. 

the problem seems to be in the qemu-binfmt-conf.sh script. it disables the creation of entries for cpus of the same family. this is not a problem if you are using a 64bit cpu because 32bit binaries run on it natively but it doesnt work in the opposite way. hacking line 310 to

         if [ "$cpu" = "x86_64" ] || [ "$host_family" != "$family" ] ; then

and running it with the --systemd ALL parameter causes a x86_64 config file to be created. it still doesnt work but that might have different causes.

The QEMU project is currently considering to move its bug tracking to
another system. For this we need to know which bugs are still valid
and which could be closed already. Thus we are setting older bugs to
"Incomplete" now.

If you still think this bug report here is valid, then please switch
the state back to "New" within the next 60 days, otherwise this report
will be marked as "Expired". Or please mark it as "Fix Released" if
the problem has been solved with a newer version of QEMU already.

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

