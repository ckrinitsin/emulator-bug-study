architecture: 0.770
device: 0.589
arm: 0.588
kernel: 0.430
files: 0.396
PID: 0.325
vnc: 0.294
semantic: 0.282
socket: 0.279
graphic: 0.263
ppc: 0.263
mistranslation: 0.253
peripherals: 0.216
register: 0.205
boot: 0.203
performance: 0.202
permissions: 0.187
user-level: 0.184
network: 0.169
debug: 0.161
virtual: 0.123
hypervisor: 0.111
TCG: 0.103
risc-v: 0.098
assembly: 0.080
VMM: 0.071
x86: 0.068
i386: 0.039
KVM: 0.023

Attaching SD-Card to specific SD-Bus Sabrelite (ARM)

Currently, I am looking for a method of attaching an sd-card to a specific bus as opposed to defaulting to the first. 

QEMU Version: 5.0.0
Specifically trying to use qemu-system-arm binary


Running an "info qtree" shows the output seen in the attached image. I have attempted multiple different combinations of arguments to attempt to get the sd-card to appear on the FOURTH sd-bus but no luck. The machine type being used is Sabrelite. It should be noted that I was able to PATCH QEMU to achieve the result I expected but I had hoped this functionality was already available and did not require modification to QEMU itself.


For reference, this is the patch that was made to source to allow the card to attach to a specific bus. After the change was made, an sd-card could be attached to a bus with the following flags:

-drive file=sdcard.img,format=raw,id=mycard -device sd-card,drive=mycard,bus=sd-bus.0


diff qemu-5.1.0.orig/hw/sd/sdhci.c qemu-5.1.0/hw/sd/sdhci.c
1311a1312,1314
>     static int index=0;
>     char name[64];
>     sprintf(name, "sd-bus.%d", index++);
1313c1316
<                         TYPE_SDHCI_BUS, DEVICE(s), "sd-bus");
---
>                         TYPE_SDHCI_BUS, DEVICE(s), name);



If there is a way to attach an sd-card to the specific bus that does NOT require this change, I'd appreciate it.



The fsl-imx* SoC devices need to create aliases onto the sd-buses with unique names; see discussion here:


https://lore.kernel.org<email address hidden>/

Patch sent:
https://lists.gnu.org/archive/html/qemu-devel/2020-11/msg05942.html


This is an automated cleanup. This bug report has been moved
to QEMU's new bug tracker on gitlab.com and thus gets marked
as 'expired' now. Please continue with the discussion here:

 https://gitlab.com/qemu-project/qemu/-/issues/54


