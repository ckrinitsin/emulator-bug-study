peripherals: 0.939
graphic: 0.927
arm: 0.861
device: 0.838
virtual: 0.805
architecture: 0.784
hypervisor: 0.769
performance: 0.748
network: 0.748
debug: 0.747
PID: 0.731
semantic: 0.712
user-level: 0.670
x86: 0.626
mistranslation: 0.615
ppc: 0.610
register: 0.550
VMM: 0.544
kernel: 0.534
permissions: 0.533
socket: 0.511
files: 0.504
KVM: 0.490
vnc: 0.443
risc-v: 0.415
boot: 0.403
assembly: 0.394
TCG: 0.288
i386: 0.032

ivshmem: ivshmem-doorbell can't notify the MSI-X interrupt on Arm64 guest
Description of problem:
I init several qemu-kvm VMs on my arm64 host, which is a NVIDIA Xavier board. I want to use qemu's ivshmem-doorbell to build a sync shared memory communition with its MSI-X interrupt mechanism. I init the ivshmem-server and ivshmem-client on the host first, after then init the guests. The visul PCI-e device named "Inter-VM shared memory" can be successfully seen in my guests with command "lspci".
I write a driver for this pci-e device to request and handle the MSI-X interrupts, which init well in the guest and can ring or receive from an interrupt vector on other peerID with the driver's IOCTL interface, the peer that receive vector in my environment is the ivshmem-client. However, when i use the ivshmem-client command "int" to ring my guest , the guest can't receive the msi-x interrupt notification.
Steps to reproduce:
1. init ivshmem-server on the host, with command "ivshmem-server -l 4M -M fg-doorbell -n 8 -F -v".
2. init ivshmem-client on the host, with command "ivshmem-client -v".
3. init the qemu-kvm VM .
4. init the driver with "insmod" in guest to request the msi-x interrupt, while "cat /proc/interrupts" shows the interrupt request successfully!
5. on host, ivshmem-client use command "int 1 0" to ring the guest's interrupt trigger, however ,nothing happened.
Additional information:
I am fully sure that there is no problem about the driver I wrote for the pci-e inter-VM shared memory device, for i has tested that the driver works on my X86 PC, where I deployed qemu-x86 VMs and the driver can work well in X86 guests with the inshmem-doorbell mechanism. The ivshmem-client work on host can notify the guest to trigger the correct msix-x interrupt. 
Therefore, I digged the msi-x interrupt structure and use devmem tool to write the data to the messageAddress manually, which can correctly trigger the msi-x interrupt in my arm64 guest in the Xavier board, meaning the msi-x interrupt is OK in the guest. So I doubt maybe there is any issue on the ivshmem-doorbell mechanism that ring a interrupt vector in the guset of qemu-aarch64.
