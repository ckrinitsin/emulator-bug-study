x86: 0.944
network: 0.855
vnc: 0.852
device: 0.822
socket: 0.798
kernel: 0.794
KVM: 0.774
architecture: 0.763
performance: 0.743
permissions: 0.640
i386: 0.626
PID: 0.617
ppc: 0.585
risc-v: 0.555
hypervisor: 0.552
peripherals: 0.533
semantic: 0.506
files: 0.472
arm: 0.465
VMM: 0.457
register: 0.455
boot: 0.454
user-level: 0.414
mistranslation: 0.385
virtual: 0.316
graphic: 0.306
assembly: 0.304
TCG: 0.285
debug: 0.159

Build-in websocket broken since v2.9.0-rc0

Since upgrading to 2.9.0, the qemu's build-in websocket was no longer available. 

Host: Ubuntu 16.04 LTS
Command-line: /bin/qemu-system-x86_64 -enable-kvm -vnc 0.0.0.0:8,websocket

I have tested the following qemu versions:

master      Fail
2.10.1      Fail
2.9.1       Fail
2.9.0       Fail
2.9.0-rc3   Fail
2.9.0-rc0   Fail

2.8.1.1     Pass
2.7.1       Pass
2.6.2       Pass





Note that we tightened up the websocket server impl to validate HTTP requests more strictly. One key change is that the websockets path is required to be empty, while noVNC will default to appending a path - so make sure you change noVNC to have an empty path. Also until GIT master yesterday, there was a bug that prevented it working if the client requested keep-alive, which I see noVNC now does. So if you try git master today, it ought to work.

Awesome! I cleared the path and tried the latest version, now it works!
BTW, is there any other VNC Web Client that I can choose? or noVNC is the one and only?

Key fixes for client interoperability coming in 2.11  include


6d5d23b00709510d55711661c7ca41408fd9934e io: cope with websock 'Connection' header having multiple values
530ca60c16c83435d4becc9916d74fa43e003815 io: Attempt to send websocket close messages to client
268a53f50de795481dd73ffd0e0c1339ad3dc44b io: Reply to ping frames
01af17fc002414ee1ac0800babfb0edc2bef1a7d io: Ignore websocket PING and PONG frames
3a29640e2cbae9d47b89ffaf98ed358920eb6797 io: Allow empty websocket payload
ff1300e626949fa9850b0f91dc5e8c2cb45b6a88 io: Add support for fragmented websocket binary frames
eefa3d8ef649f9055611361e2201cca49f8c3433 io: Small updates in preparation for websocket changes
33badfd1e3735b877e41939100511c65572be6b9 io: use case insensitive check for Connection & Upgrade websock headers
3a3f8705962c8c8a47a9b981ffd5aab7274ad508 io: include full error message in websocket handshake trace
f69a8bde29354493ff8aea64cc9cb3b531d16337 io: send proper HTTP response for websocket errors


