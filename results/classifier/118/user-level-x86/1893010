x86: 0.935
user-level: 0.930
performance: 0.880
files: 0.878
device: 0.837
ppc: 0.829
semantic: 0.820
architecture: 0.809
network: 0.791
graphic: 0.776
peripherals: 0.769
kernel: 0.753
PID: 0.744
permissions: 0.700
mistranslation: 0.690
register: 0.684
hypervisor: 0.683
i386: 0.682
risc-v: 0.668
debug: 0.660
arm: 0.658
socket: 0.651
boot: 0.625
virtual: 0.619
TCG: 0.607
vnc: 0.580
VMM: 0.576
KVM: 0.491
assembly: 0.370
--------------------
user-level: 0.908
kernel: 0.668
hypervisor: 0.398
ppc: 0.150
virtual: 0.054
debug: 0.053
TCG: 0.037
files: 0.024
PID: 0.020
register: 0.016
device: 0.005
x86: 0.004
semantic: 0.003
VMM: 0.003
network: 0.002
socket: 0.002
architecture: 0.002
performance: 0.002
boot: 0.001
vnc: 0.001
risc-v: 0.001
permissions: 0.001
assembly: 0.000
KVM: 0.000
peripherals: 0.000
graphic: 0.000
mistranslation: 0.000
i386: 0.000
arm: 0.000

qemu linux-user doesn't support OFD fcntl locks

"Open file description locks (non-POSIX)", as they are described in fcntl(2) man page, aren't supported by qemu-user  and attempting to use those results in EINVAL. I'm on Gentoo with latest QEMU version currently available (5.0.0-r2), and trying to emulate ppc64 and s390x on x86_64.

Looking at linux-user/syscall.c, I'm guessing the issue is in (at least) `target_to_host_fcntl_cmd` where switch reaches the default clause as there're no cases for F_OFD_SETLK / F_OFD_SETLKW / F_OFD_GETLK.

The attached patch fixes the issue for me.

New patch version: fix target_to_host_fcntl_cmd mapping, avoid do_fcntl code duplication.

Please check qemu-5.1.0.

This has been fixed by:

  2d92c6827ca0 ("linux-user: implement OFD locks")
  https://git.qemu.org/?p=qemu.git;a=commitdiff;h=2d92c6827ca0

perhaps you can send a patch to the qemu-devel ML to add the strace part.

Thanks, the changes in 5.1.0 seem to work indeed.

> perhaps you can send a patch to the qemu-devel ML to add the strace part

Done.

