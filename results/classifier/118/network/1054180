network: 0.951
virtual: 0.899
performance: 0.869
graphic: 0.835
device: 0.778
files: 0.728
user-level: 0.721
vnc: 0.641
semantic: 0.558
ppc: 0.522
socket: 0.476
hypervisor: 0.418
architecture: 0.394
kernel: 0.340
i386: 0.338
PID: 0.332
debug: 0.312
register: 0.311
x86: 0.310
risc-v: 0.294
peripherals: 0.282
boot: 0.263
mistranslation: 0.225
TCG: 0.198
permissions: 0.176
VMM: 0.161
arm: 0.156
KVM: 0.155
assembly: 0.102

DNS activity in slirp (user networking) mode quickly depletes file descriptors and crashes qemu

Hi, we have encountered quite some trouble with filedescriptor depletion of the qemu process. We have figured out that it can be demonstrated easily by doing a lot of DNS queries inside the VM -- in our real world scenario this is caused by running centos network install with a fast mirror.

This situation is further problematic because qemu can't handle fd depletion very well:
1) if ulimit is 1024 then qemu hangs in infinite loop whenever it tries to open the 1025th fd
2) setting ulimit >1024 does not help that much because qemu uses select and max. fd set size is 1024 per default => qemu crashes because of buffer overflow in select()
3) setting ulimit > 1024 AND recompiling with large enough fd set size AND disabling gcc's fortify source seems to work, but that's really just a hot-fix

The problem can be replicated quite easily by running something like

while :; do echo >/dev/udp/10.0.2.3/53; done

inside a Linux VM -- crash comes very soon.

This problem is present in current qemu (1.2.0) and in earlier as well.

Triaging old bug tickets ... can you still reproduce this problem with the latest version of QEMU (currently v2.9 or a release candidate of 2.10)?

Also could you please provide the exact command line that you use to start QEMU?

[Expired for QEMU because there has been no activity for 60 days.]

