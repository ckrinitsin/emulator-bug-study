i386: 0.866
graphic: 0.733
user-level: 0.716
architecture: 0.645
performance: 0.555
semantic: 0.540
device: 0.503
permissions: 0.417
ppc: 0.390
x86: 0.364
files: 0.351
mistranslation: 0.307
boot: 0.306
PID: 0.289
register: 0.288
arm: 0.271
peripherals: 0.248
network: 0.247
virtual: 0.209
debug: 0.194
socket: 0.193
vnc: 0.176
risc-v: 0.174
TCG: 0.167
hypervisor: 0.141
kernel: 0.110
assembly: 0.092
VMM: 0.075
KVM: 0.036

qemu-i386-user on 32-bit Linux: uncaught target signal 11 

Even though the command I'm trying to run (a wrapper script for qemu-i386-user running rustc, the rust compiler)  produces the expected  compiled output, the build process is interrupted:

qemu: uncaught target signal 11 (Segmentation fault) - core dumped
i686-unknown-linux-gnu/stage0/bin/rustc: line 1:  7474 Segmentation fault      /usr/local/bin/qemu-i386 -cpu qemu32 /home/petevine/stage0/rustc.bin -C target-cpu=pentium2 -L /home/petevine/unpacked/rust-master/i686-unknown-linux-gnu/stage0/lib/rustlib/i686-unknown-linux-gnu/lib/ "$@"
make: *** [i686-unknown-linux-gnu/stage0/lib/rustlib/i686-unknown-linux-gnu/lib/stamp.rustc_back] Error 139

The stamp file is not being created so this could be about forking bash after finishing the wrapper script.

Qemu was compiled from the latest git source.

Hi; thanks for this bug report. Could you provide instructions for how to reproduce this bug, please?


My recollection is fuzzy but it would probably amount to something like this on any platform currently:

- download rust-1.10 beta source https://static.rust-lang.org/dist/rustc-beta-src.tar.gz

- download this stage0 snapshot https://www.dropbox.com/s/01ywl9mwwo6xojw/rust-stage0-2016-04-18-b324fa7-linux-armv7.tar.xz?dl=0

- unpack the stage0 rustc binary to ~/somewhere/bin, renaming it to rustc.bin, and create a wrapper script named rustc in that directory containing:

`/usr/bin/qemu-arm ~/somewhere/rustc.bin "$@"`

In the rustc source directory, start the rust bootstrap process (with LLVM 3.7 or higher installed) issuing the following command:
`./configure --enable-optimize --enable-local-rust --local-rust-root=~/somewhere --llvm-root=/usr`

Followed by `make`.

At the time of the original report, QEMU wasn't able to complete all crates' build commands naturally. (the stamp file had to be created manually to continue)

A simpler way to reproduce would probably be to wrap the regular, installed rustc that way and try running some compilations using cargo. That should be enough to elicit the same problem.

Looking through old bug tickets... can you still reproduce this issue with the latest version of QEMU?

[Expired for QEMU because there has been no activity for 60 days.]

