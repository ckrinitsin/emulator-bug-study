performance: 0.922
register: 0.914
graphic: 0.911
architecture: 0.909
semantic: 0.851
ppc: 0.842
device: 0.824
peripherals: 0.781
mistranslation: 0.777
socket: 0.746
PID: 0.736
vnc: 0.726
network: 0.692
arm: 0.679
risc-v: 0.665
assembly: 0.664
debug: 0.663
VMM: 0.658
permissions: 0.616
hypervisor: 0.613
user-level: 0.565
virtual: 0.563
kernel: 0.557
boot: 0.553
files: 0.549
TCG: 0.505
x86: 0.441
KVM: 0.417
i386: 0.230

SPARC32-bit SDIV of negative divisor gives wrong result
Description of problem:
SDIV of negative divisor gives wrong result because of typo in helper_sdiv(). This is true for QEMU 9.0.0 and earlier.

Place -1 in the Y register and -128 in another reg, then -120 in another register and do SDIV into a result register, instead of the proper value of 1 for the result, the incorrect value of 0 is produced.

There is a typo in target/sparc/helper.c that causes the divisor to be consider unsigned, this patch fixes it:

\*\*\* helper.c.ori Tue Apr 23 16:23:45 2024 --- helper.c Mon Apr 29 20:14:07 2024

---

\*\*\* 121,127 \*\*\*\* return (uint32_t)(b32 \< 0 ? INT32_MAX : INT32_MIN) | (-1ull \<\< 32); }

! a64 /= b; r = a64; if (unlikely(r != a64)) { return (uint32_t)(a64 \< 0 ? INT32_MIN : INT32_MAX) | (-1ull \<\< 32); --- 121,127 ---- return (uint32_t)(b32 \< 0 ? INT32_MAX : INT32_MIN) | (-1ull \<\< 32); }

! a64 /= b32; r = a64; if (unlikely(r != a64)) { return (uint32_t)(a64 \< 0 ? INT32_MIN : INT32_MAX) | (-1ull \<\< 32);
