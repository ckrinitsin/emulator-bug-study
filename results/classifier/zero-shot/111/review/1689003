other: 0.169
semantic: 0.163
device: 0.102
performance: 0.080
graphic: 0.076
PID: 0.059
files: 0.058
debug: 0.056
network: 0.049
permissions: 0.044
vnc: 0.043
socket: 0.038
boot: 0.033
KVM: 0.029
debug: 0.277
other: 0.152
files: 0.097
performance: 0.076
semantic: 0.070
device: 0.065
PID: 0.060
network: 0.056
boot: 0.037
permissions: 0.030
graphic: 0.027
socket: 0.027
vnc: 0.020
KVM: 0.006

USB passthrough should not fail if SET CONFIGURATION fails

QEMU's USB passthrough was not working for my new smartphone.

While analyzing the problem, I found out that a SET CONFIGURATION Request was NACKed by the USB device (probably because a SET CONFIGURATION request was already sent from the host to the device).

So I wrote a simple program to fake a successful call to libusb_set_configuration and did an LD_PRELOAD on this program before starting qemu, and it worked.

Looking at QEMU's code in host-libusb.c, I can see that QEMU does not try to claim the interface if its call to libusb_set_configuration fails.

I think QEMU should try to claim the device anyway even if libusb_set_configuration fails.

I did my tests against QEMU 2.6.2, but as I can see from the source code, this problem should happen on all versions.

The attached simple program, compiled as a library, loaded by LD_PRELOAD before starting QEMU, avoids the problem by faking success of libusb_set_configuration(), as a workaround.

The QEMU project is currently considering to move its bug tracking to another system. For this we need to know which bugs are still valid and which could be closed already. Thus we are setting older bugs to "Incomplete" now.
If you still think this bug report here is valid, then please switch the state back to "New" within the next 60 days, otherwise this report will be marked as "Expired". Thank you and sorry for the inconvenience.

[Expired for QEMU because there has been no activity for 60 days.]

