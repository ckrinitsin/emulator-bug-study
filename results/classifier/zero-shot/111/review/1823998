debug: 0.219
semantic: 0.124
other: 0.106
device: 0.086
boot: 0.071
files: 0.066
performance: 0.060
network: 0.046
PID: 0.045
vnc: 0.044
socket: 0.040
permissions: 0.037
graphic: 0.036
KVM: 0.020
boot: 0.267
debug: 0.147
files: 0.114
other: 0.110
PID: 0.060
network: 0.059
semantic: 0.055
performance: 0.043
device: 0.039
socket: 0.032
permissions: 0.023
vnc: 0.019
graphic: 0.017
KVM: 0.015

qemu-system-aarch64: support kernels bigger than 128MiB

Presently QEMU reserves up to 128MiB of space for an arm64 Linux kernel, placing the initrd following this, and the dtb following the initrd.

This is not sufficient for some debug configurations of the kernel, which can be larger than 128MiB. Depending on the relative size of the kernel Image and unpopulated BSS, the dtb (or kernel) will be clobbered by the other, resulting in a silent boot failure.

Since v3.17, the kernel Image header exposes a field called image_size, which describes the entire size of the kernel (including unpopulated sections such as the BSS) as a 64-bit little-endian value. For kernels prior to v3.17, this field is zero. This is documented at:

https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/arm64/booting.txt?h=v5.0#n68

It would be great if QEMU could take the image_size field into account when placing the initrd and dtb to avoid overlap with the kernel.

I've submitted a patchset which I think should fix this, but if you could test that it actually does handle large images correctly that would be great.

https://<email address hidden>/


Changes now in master, will be in 4.1.


https://git.qemu.org/?p=qemu.git;a=commitdiff;h=5e6dbe1e8cbbe4b6f74

