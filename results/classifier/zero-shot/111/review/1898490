other: 0.086
debug: 0.085
semantic: 0.081
device: 0.080
boot: 0.080
files: 0.074
permissions: 0.073
performance: 0.068
socket: 0.068
PID: 0.067
graphic: 0.064
network: 0.063
vnc: 0.060
KVM: 0.049
KVM: 0.608
debug: 0.057
boot: 0.049
PID: 0.031
device: 0.030
files: 0.027
other: 0.027
graphic: 0.027
network: 0.027
semantic: 0.026
vnc: 0.026
socket: 0.024
permissions: 0.022
performance: 0.019

gtk with virtio and opengl black screen

qemu-system-x86_64 -name manjaro -enable-kvm -cpu host -smp cores=4,threads=1 -M q35 -m 8G -cdrom /mnt/Storage/ISO/manjaro-gnome-20.0.3-minimal-200606-linux56.iso -machine type=pc,accel=kvm -vga virtio -display sdl,gl=on Boots properly and has working 3d acceleration with virgl.

Running qemu-system-x86_64 -name manjaro -enable-kvm -cpu host -smp cores=4,threads=1 -M q35 -m 8G -cdrom /mnt/Storage/ISO/manjaro-gnome-20.0.3-minimal-200606-linux56.iso -machine type=pc,accel=kvm -vga virtio -display gtk,gl=on however, (difference being gtk instead of sdl), the screen is black, and the vm still starts.

System Specs
Gentoo Linux 64bit
Gentoo-Sources 5.8.13 Kernel
Qemu 5.10.0-r1 compiled with USE="aio bzip2 caps curl fdt filecaps gtk jpeg ncurses nls opengl oss pin-upstream-blobs png pulseaudio sdl seccomp slirp spice usb usbredir vhost-net virgl vnc xattr xkb" PYTHON_TARGETS="python3_7" QEMU_SOFTMMU_TARGETS="x86_64" QEMU_USER_TARGETS="x86_64"

Ryzen 7 2700x
Nvidia 1070ti GPU

I can confirm the same issue when using libvirt with opengl.



Hello Christian,

I should have pointed that the log is from the Android system, not Qemu or my host system !

I got the failure message running the following command in an Android shell :

logcat '*:F'

(which means display log entries from all facilities (*), with the Fatal (F) severity)

It seems indeed that Fosshub has a hosting problem with the Android-x86 images, I'll have to report this to the project maintainer.

You seem to experience the same crash as I do. Bootloader OK, the GUI is responsive at the beginning, and it crashes after a variable amount of time.

You're right, the bug #1898490 looks like it could be related, I don't see the virgl=on option, but I suppose it's on by default.

I normally have those messages on my Qemu instance :
gl_version 45 - core profile enabled
GLSL feature level 430
virtio_input_hid_handle_status: unknown type 20
virtio_input_hid_handle_status: unknown type 20

The virtio_input_hid messages don't seem to be a problem, and certainly unrelated to the Android 9.0 crashing problem since at the time I tried with other, non-virtio input devices, I didn't have that message but it was still crashing the same way.

It happens that I have that "stale GL error" from time to time, that almost always corresponds to an app not displaying properly in Android. Generally, quitting and restarting the app solves the problem, but not always, there are cases and Android apps that never worked correctly with virglrenderer, such as Armello.

So, virglrenderer seems less stable with Android (or is it virtio-vga ?). In particular, switching from the surfaceflinger OpenGL display to a VGA, non-OpenGL console display (Alt+F1) never worked correctly (Alt+F7 to go back to the surfaceflinger display).

However, as I said before, it seems to me it shouldn't behave differently depending on which display, GTK or SDL, is used.

Concerning other frontends, I'm not familiar with those since my setup isn't headless : I'm not a server guy, I run the emulator on my laptop, so apart from GTK and SDL, it's not clear to me if I could run something else that would give me 3D acceleration. Moreover, my hardware is more than 6 years old now, and lacks some virtualisation capabilities that could serve as an alternative to virglrenderer.

Anyway virglrenderer is still pre 1.0 so I guess it's the prime suspect after all.

I will upgrade to Groovy next month, I'll keep you informed on that (I may even try Qemu 5.0 before upgrading).

Oops sorry, I misposted, is there any way to remove this ?

I am having the same issue. Tested on Xubuntu 20.10 (qemu 5.0) and ArchLinux (qemu 5.2).

Furthermore, SDL is broken too: In principle I get some output with SDL but its broken and not very usable. After some time (after starting the Desktop Env. - as far as I can tell), the screen also turns black as with GTK.

When redirecting IO to stdio I get the following error message:

## opengl error ##
gl_version 45 - core profile enabled
vrend_renderer_fill_caps: Entering with stale GL error: 1280
GLSL feature level 430


## startup command ##
qemu-system-x86_64 \
-serial stdio \
-m 8G \
-enable-kvm \
-vga virtio \
-display gtk,gl=on \
-machine q35 \
-cpu host \
-bios /usr/share/OVMF/x64/OVMF_CODE.fd \
-boot order=d \
-drive file=test.img,format=raw \
-cdrom /media/os/xubuntu-20.10-desktop-amd64.iso


## hardware of host ##
ryzen 3700x on b450 chipset
geforce 1060 with latest nvidia drivers


When setting "-display gtk,gl=off" things work for GTK and SDL.

## startup command ##
qemu-system-x86_64 \
-serial stdio \
-m 8G \
-enable-kvm \
-vga none -device virtio-vga,virgl=on \
-display sdl,gl=off \
-machine q35 \
-cpu host \
-bios /usr/share/OVMF/x64/OVMF_CODE.fd \
-boot order=d \
-drive file=test.img,format=raw \
-cdrom /media/os/xubuntu-20.10-desktop-amd64.iso

The problem is that Xfwm's built-in compositor and virgl don't play nice together.

Work-around: Boot the VM with virgl=off (on the video device) or gl=off (on the display), run xfwm4-tweaks-settings in the VM, select the "Compositor" tab, and uncheck "Enable display compositing".  Then shut down the VM and re-enable virgl.

picom works with Xfwm and doesn't seem to have the same issues, so if you want a compositor, install/use picom in the VM instead of using Xfwm's built-in compositor: https://wiki.archlinux.org/index.php/Picom

The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting the bug state to "Incomplete" now.

If the bug has already been fixed in the latest upstream version of QEMU,
then please close this ticket as "Fix released".

If it is not fixed yet and you think that this bug report here is still
valid, then you have two options:

1) If you already have an account on gitlab.com, please open a new ticket
for this problem in our new tracker here:

    https://gitlab.com/qemu-project/qemu/-/issues

and then close this ticket here on Launchpad (or let it expire auto-
matically after 60 days). Please mention the URL of this bug ticket on
Launchpad in the new ticket on GitLab.

2) If you don't have an account on gitlab.com and don't intend to get
one, but still would like to keep this ticket opened, then please switch
the state back to "New" or "Confirmed" within the next 60 days (other-
wise it will get closed as "Expired"). We will then eventually migrate
the ticket automatically to the new system (but you won't be the reporter
of the bug in the new system and thus you won't get notified on changes
anymore).

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

