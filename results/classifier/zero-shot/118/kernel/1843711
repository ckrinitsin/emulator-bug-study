kernel: 0.938
device: 0.849
user-level: 0.741
peripherals: 0.650
architecture: 0.644
network: 0.639
socket: 0.601
performance: 0.587
semantic: 0.573
debug: 0.569
PID: 0.532
ppc: 0.517
permissions: 0.511
register: 0.477
graphic: 0.462
files: 0.447
mistranslation: 0.425
boot: 0.412
x86: 0.394
vnc: 0.342
VMM: 0.323
virtual: 0.303
risc-v: 0.291
hypervisor: 0.270
arm: 0.269
i386: 0.252
TCG: 0.221
KVM: 0.200
assembly: 0.187

qemu-xhci device should detect if libusb host supports streams

When using USBÂ passthrough with the qemu-xhci (and nec-usb-xhci), streams are enabled by default, but if the host xHCI controller doesn't support them, it will trigger hard-to-debug UAS guest errors.

This should be possible to detect since the kernel returns ENOSYS (errno 38) when xhci host controller does not support streams:
            libusb: error [do_streams_ioctl] streams-ioctl failed error -1 errno 38
            qemu: libusb_alloc_streams: -99 [OTHER]

Maybe libusb should return a dedicated error instead of LIBUSB_ERROR_OTHER in this case, but qemu does not handle any other error code anyway.

Just trying to enable streams before enabling them in qemu should do it. I don't know if it should be done in hcd-xhci.c, host-libusb.c or elsewhere, but this would be detectable at launch instead of a static option true/false, maybe a ternary with auto would be better.

The QEMU project is currently considering to move its bug tracking to
another system. For this we need to know which bugs are still valid
and which could be closed already. Thus we are setting older bugs to
"Incomplete" now.

If you still think this bug report here is valid, then please switch
the state back to "New" within the next 60 days, otherwise this report
will be marked as "Expired". Or please mark it as "Fix Released" if
the problem has been solved with a newer version of QEMU already.

Thank you and sorry for the inconvenience.


This is a suggestion that would really help anyone using trying to use xhci passthrough on a platform without streams.


This is an automated cleanup. This bug report has been moved to QEMU's
new bug tracker on gitlab.com and thus gets marked as 'expired' now.
Please continue with the discussion here:

 https://gitlab.com/qemu-project/qemu/-/issues/182


