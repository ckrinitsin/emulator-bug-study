assembly: 0.829
device: 0.760
graphic: 0.752
semantic: 0.578
architecture: 0.531
permissions: 0.519
performance: 0.512
socket: 0.454
boot: 0.363
PID: 0.362
mistranslation: 0.360
network: 0.338
i386: 0.333
risc-v: 0.330
vnc: 0.307
register: 0.305
debug: 0.290
ppc: 0.254
VMM: 0.242
x86: 0.242
TCG: 0.238
user-level: 0.235
arm: 0.231
files: 0.210
peripherals: 0.167
kernel: 0.141
virtual: 0.101
hypervisor: 0.097
KVM: 0.091
--------------------
user-level: 0.992
assembly: 0.934
permissions: 0.066
files: 0.047
debug: 0.047
kernel: 0.045
TCG: 0.044
virtual: 0.035
register: 0.032
performance: 0.021
hypervisor: 0.017
device: 0.016
semantic: 0.013
PID: 0.012
VMM: 0.010
risc-v: 0.005
architecture: 0.004
KVM: 0.003
ppc: 0.003
boot: 0.003
graphic: 0.003
peripherals: 0.003
socket: 0.002
network: 0.002
arm: 0.002
i386: 0.002
vnc: 0.001
x86: 0.001
mistranslation: 0.000

allow sifive_e to use more RAM
Description of problem:
For users like me that are still learning RISC bare-metal assembly, searching online you will find many tutorials and examples using sifive_e with Qemu, so it is the easy way to get started.

I quickly ran into crashes with my tests because I did not realize that sifive_e is limited to 16K of RAM.
I realize the 16K limit is hard coded so that it matches the real hardware, but that makes it very hard to run a variety of tests.
Additional information:
My fork of Qemu changes sifive_e to allow 256MB.
https://github.com/panjea/qemu/commit/97cb89d778ebe3407a969b8282e2e7adb4be2971
