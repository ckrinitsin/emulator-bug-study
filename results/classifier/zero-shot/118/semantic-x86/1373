x86: 0.998
semantic: 0.996
assembly: 0.951
architecture: 0.941
graphic: 0.898
i386: 0.835
device: 0.784
vnc: 0.746
mistranslation: 0.642
kernel: 0.593
ppc: 0.573
boot: 0.505
socket: 0.502
debug: 0.488
permissions: 0.472
arm: 0.465
register: 0.422
performance: 0.412
network: 0.373
risc-v: 0.317
files: 0.298
peripherals: 0.217
PID: 0.169
virtual: 0.143
VMM: 0.139
KVM: 0.113
TCG: 0.102
hypervisor: 0.066
user-level: 0.040
--------------------
x86: 1.000
semantic: 0.986
i386: 0.984
assembly: 0.966
debug: 0.271
register: 0.134
files: 0.041
TCG: 0.033
kernel: 0.028
performance: 0.023
user-level: 0.016
architecture: 0.015
virtual: 0.011
PID: 0.009
device: 0.007
peripherals: 0.006
hypervisor: 0.005
boot: 0.004
VMM: 0.004
network: 0.003
socket: 0.003
permissions: 0.003
graphic: 0.003
KVM: 0.002
risc-v: 0.001
vnc: 0.001
ppc: 0.001
mistranslation: 0.000
arm: 0.000

x86 ADOX and ADCX semantic bug
Description of problem:
The result of instruction ADOX and ADCX are different from the CPU. The value of one of EFLAGS is different.
Steps to reproduce:
1. Compile this code
```
void main() {
    asm("push 512; popfq;");
    asm("mov rax, 0xffffffff84fdbf24");
    asm("mov rbx, 0xb197d26043bec15d");
    asm("adox eax, ebx");
}
```
2. Execute and compare the result with the CPU. This problem happens with ADCX, too (with CF).
    - CPU
        - OF = 0
    - QEMU
        - OF = 1
Additional information:
This bug is discovered by research conducted by KAIST SoftSec.
