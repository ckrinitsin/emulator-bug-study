graphic: 0.983
performance: 0.928
semantic: 0.890
architecture: 0.890
PID: 0.877
files: 0.874
device: 0.845
hypervisor: 0.806
debug: 0.779
vnc: 0.777
virtual: 0.771
permissions: 0.717
user-level: 0.712
register: 0.636
ppc: 0.636
socket: 0.616
boot: 0.595
network: 0.586
VMM: 0.570
peripherals: 0.569
kernel: 0.549
risc-v: 0.523
TCG: 0.512
arm: 0.446
i386: 0.421
x86: 0.393
mistranslation: 0.383
KVM: 0.334
assembly: 0.030

Binary emulation of a Solaris-8-compiled dynamically linked C program gives a bus error immediately on startup when running with qemu-sparc
Description of problem:
I am currently trying to use binary emulation to run a dynamically-linked executable C program that was written and compiled on a Solaris 8 VM. However, when I do so, I immediately get a bus error, and I'm not sure what the cause is. Below I'll delineate all of the steps I took to recreate this.
Steps to reproduce:
1. Start Solaris 8 VM (this was done via QEMU, actually, and there are no issues here)
2. Write a simple `.c` program.
3. Compile that program with `/usr/local/bin/gcc`. The name of the program is `binary_emulation`.
4. Test program on the VM to ensure functionality.
5. Stop VM.
6. Mount `.qcow2` on the Linux host so I can easily extract files from it.
7. Copy the entire `/` directory off to `~/binary_emulation/target`
8. Copy `binary_emulation` to a separate directory.
9. `cd` to `.../qemu/build`
10. Run `./qemu-sparc -L ~/binary_emulation/target ~/binary_emulation/binary_emulation`
Additional information:
#
