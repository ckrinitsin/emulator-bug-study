virtual: 0.838
semantic: 0.800
performance: 0.767
graphic: 0.736
architecture: 0.699
device: 0.624
user-level: 0.552
peripherals: 0.518
network: 0.475
debug: 0.425
permissions: 0.415
register: 0.401
mistranslation: 0.384
socket: 0.363
hypervisor: 0.362
vnc: 0.341
kernel: 0.311
files: 0.299
boot: 0.289
ppc: 0.258
risc-v: 0.251
x86: 0.211
i386: 0.210
PID: 0.207
assembly: 0.200
VMM: 0.189
arm: 0.182
TCG: 0.169
KVM: 0.158

virtual console gives strange response to ANSI DSR

With "-serial vc" (which is the default), qemu make strange responses to the ANSI DSR escape sequence (\033[6n) which can confuse guests.

Terminal emulators supporting the ANSI escape sequences usually support the "Device Status Report" escape sequence, \033[6n, to which as a response the terminal injects as input the response \033[n;mR, containing the current cursor position. An application running in the guest can use this escape sequence to, for example, figure out the size of the terminal it is running under, which can be useful as the guest has no other standard way to figure out a "size" for the serial port.

Unfortunately, it seems that qemu when run with "-serial vc" (which appears to be the default), when qemu gets the \033[6n escape sequence on the serial port, it just responds with a single \033, and that's it! This can confuse an application, could concievably assume that a terminal either supports this escape sequence and injects the correct response (\033[n;mR), or doesn't support it and injects absolutely nothing as input - but not something in between.

This caused a problem on one shell implementation on OSv that tried to figure out the terminal's size, and had to work around this unexpected behavior (see https://github.com/cloudius-systems/osv/commit/b79223584be40459861d1c12e1cb67e3e49e2a12).

Looking through old bug tickets... is this still an issue with the latest version of QEMU? Or could we close this ticket nowadays?


The bug still very much exists (I tested qemu 4.2.1):
If you don't use "-serial stdio" (or its newer variants), by default Qemu opens a new black "console" to run the application. It is not clear to me exactly which terminal this console is supposed to emulate, but it does seem to support most ANSI escape sequences I tried. However, it supports the ANSI "DSR" (Device Status Report) escape sequence, ESC [ 6 n (see https://en.wikipedia.org/wiki/ANSI_escape_code), incorrectly, just as I reported in the original issue. This is still true today.

This should be fixed in head-of-git by commit 8eb13bbbac08a, which will be in QEMU 6.0. (The underlying bug is that when the GTK front-end tries to send sequences of more than one byte to a UART, it didn't account for UARTs which don't have a FIFO capable of holding the whole sequence at once.)


