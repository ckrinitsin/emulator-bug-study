user-level: 0.952
device: 0.901
peripherals: 0.879
arm: 0.871
architecture: 0.870
graphic: 0.866
mistranslation: 0.790
hypervisor: 0.750
PID: 0.723
performance: 0.720
permissions: 0.703
files: 0.698
virtual: 0.678
semantic: 0.658
x86: 0.611
register: 0.550
debug: 0.538
network: 0.533
risc-v: 0.532
TCG: 0.521
ppc: 0.511
kernel: 0.503
boot: 0.479
VMM: 0.466
vnc: 0.452
assembly: 0.420
i386: 0.417
socket: 0.354
KVM: 0.351
--------------------
user-level: 0.626
arm: 0.603
debug: 0.075
TCG: 0.061
files: 0.036
virtual: 0.031
semantic: 0.014
PID: 0.013
device: 0.011
risc-v: 0.008
hypervisor: 0.005
socket: 0.004
register: 0.004
VMM: 0.004
graphic: 0.004
network: 0.004
boot: 0.004
permissions: 0.004
vnc: 0.002
kernel: 0.002
peripherals: 0.002
performance: 0.002
ppc: 0.002
architecture: 0.002
x86: 0.002
assembly: 0.001
mistranslation: 0.001
i386: 0.000
KVM: 0.000

[QEMU User-Mode] Mesa Fails To Load RadeonSI Driver When In Docker Image

# System Details
AMD Ryzen 7 3700U
Ubuntu 20.04 Focal Focus

# Dockerfile

FROM arm32v7/debian:bullseye

RUN apt-get update && apt-get install -y mesa-utils

ENTRYPOINT glxgears

# Instructions For Reproduction
1. Install Docker
2. Build Docker Image: docker build --tag mesa-arm-test .
3. Run: docker run -v /tmp/.X11-unix:/tmp/.X11-unix --device /dev/dri:/dev/dri -e "DISPLAY=${DISPLAY}" mesa-arm-test

The Output Is:

amdgpu_device_initialize: amdgpu_query_info(ACCEL_WORKING) failed (-38)
amdgpu: amdgpu_device_initialize failed.
libGL error: failed to create dri screen
libGL error: failed to load driver: radeonsi
libGL error: failed to get magic
libGL error: failed to load driver: radeonsi

It then appears to run using software rendering.

I think you definitely need to provide more information ... how do you run QEMU? Which QEMU version? etc. ... Anyway:

The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting the bug state to "Incomplete" now.

If the bug has already been fixed in the latest upstream version of QEMU,
then please close this ticket as "Fix released".

If it is not fixed yet and you think that this bug report here is still
valid, then you have two options:

1) If you already have an account on gitlab.com, please open a new ticket
for this problem in our new tracker here:

    https://gitlab.com/qemu-project/qemu/-/issues

and then close this ticket here on Launchpad (or let it expire auto-
matically after 60 days). Please mention the URL of this bug ticket on
Launchpad in the new ticket on GitLab.

2) If you don't have an account on gitlab.com and don't intend to get
one, but still would like to keep this ticket opened, then please switch
the state back to "New" or "Confirmed" within the next 60 days (other-
wise it will get closed as "Expired"). We will then eventually migrate
the ticket automatically to the new system (but you won't be the reporter
of the bug in the new system and thus you won't get notified on changes
anymore).

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

