architecture: 0.826
files: 0.749
device: 0.647
semantic: 0.634
performance: 0.630
graphic: 0.544
user-level: 0.540
x86: 0.476
mistranslation: 0.467
socket: 0.435
network: 0.434
permissions: 0.412
register: 0.366
ppc: 0.357
debug: 0.346
boot: 0.344
PID: 0.338
peripherals: 0.337
kernel: 0.333
risc-v: 0.330
vnc: 0.296
virtual: 0.277
hypervisor: 0.277
arm: 0.248
TCG: 0.198
VMM: 0.193
i386: 0.127
KVM: 0.121
assembly: 0.096
--------------------
hypervisor: 0.809
virtual: 0.668
kernel: 0.596
user-level: 0.190
files: 0.074
TCG: 0.029
debug: 0.022
architecture: 0.014
PID: 0.011
semantic: 0.010
register: 0.008
performance: 0.006
KVM: 0.005
network: 0.005
device: 0.004
VMM: 0.004
permissions: 0.002
socket: 0.002
assembly: 0.002
ppc: 0.002
boot: 0.002
peripherals: 0.002
vnc: 0.001
graphic: 0.001
risc-v: 0.001
arm: 0.001
x86: 0.001
mistranslation: 0.000
i386: 0.000

qemu-aarch64 $program  > $file doesn't pipe output to file in 2.12.0

Running qemu-aarch64 $program > $file doesn't pipe anything to $file. The file is created but empty.

qemu-aarch64 --help > $file works, so piping output in my system seems to work.
qemu-x86_64 $program > $file works, too.

I'm running version 2.12.0 build from source with ./configure && make

Output of uname -a:
Linux zhostname>  4.4.0-101-generic #124-Ubuntu SMP Fri Nov 10 18:29:59 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

Running "unbuffer qemu-aarch64 $program > $file" allows to pipe the output.

Is it intentional that I need to disable buffering to allow piping to other processes? If yes, this issue can be closed.

further reading about unbuffer: https://unix.stackexchange.com/questions/25372/turn-off-buffering-in-pipe#25378



No, this should work on qemu-aarch64 the same way as for x86. I just tried redirection to a file with a sample program, and it worked fine for me. Can you provide a test case binary that fails like this, please?


This issue is now marked as invalid, sorry for the trouble.

qemu works just fine. The problem was with my linker configuration, it was using a different dynamic library for aarch64. Switching to a standard development stack solved my problem.

