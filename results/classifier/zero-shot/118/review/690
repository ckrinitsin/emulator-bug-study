architecture: 0.979
x86: 0.946
arm: 0.926
device: 0.851
kernel: 0.849
graphic: 0.838
user-level: 0.824
performance: 0.774
files: 0.767
virtual: 0.734
semantic: 0.720
debug: 0.704
VMM: 0.684
register: 0.675
hypervisor: 0.652
permissions: 0.646
PID: 0.632
risc-v: 0.627
vnc: 0.621
network: 0.605
socket: 0.603
ppc: 0.596
TCG: 0.530
boot: 0.521
peripherals: 0.490
mistranslation: 0.469
assembly: 0.172
KVM: 0.086
i386: 0.011
--------------------
arm: 0.908
TCG: 0.352
debug: 0.169
virtual: 0.135
hypervisor: 0.129
files: 0.078
register: 0.071
user-level: 0.059
performance: 0.022
PID: 0.019
network: 0.016
kernel: 0.015
device: 0.009
semantic: 0.008
socket: 0.008
architecture: 0.007
permissions: 0.004
VMM: 0.004
boot: 0.004
assembly: 0.004
peripherals: 0.002
x86: 0.002
ppc: 0.001
graphic: 0.001
vnc: 0.001
KVM: 0.001
risc-v: 0.001
i386: 0.001
mistranslation: 0.000

32bit qemu-arm can't run GCC due to failure to allocate memory range for guest (Allocating guest commpage error)
Description of problem:
I'm running ARM binaries using 32 bit qemu-arm-static on x86_64 host. Since version 5.1 (include latest 6.1), QEMU cannot run GCC and some other things with an error `Allocating guest commpage: Operation not permitted`. The problem is NOT reproducible on QEMU 5.0, so probably the problem was caused by a [rework of init_guest_space or the following commits](https://gitlab.com/qemu-project/qemu/-/commit/ee94743034bfb443cf246eda4971bdc15d8ee066) a year ago.

Also the problem is not reproducible for all users. It is known that it is reproduced on all Arch Linux host machines and some Debian, and probably depends on some kernel build parameters.

The sysctl `vm.mmap_min_addr` parameter also affects the problem. The error varies depending on its value:
```
[0 ... 53248] - No error at all
[53249 ... 61440] - Cannot allocate memory
[61441 ... 65536 and higher] - Operation not permitted
```
Steps to reproduce:
1. Download and extract attached tarball: [qemu-test-gcc.tgz](/uploads/0031fdf6705183626f646b78a281dd2a/qemu-test-gcc.tgz)
2. `$ make # will build the docker container`
3. `$ make run # will enter the container`
4. Once in the container, run: `# /qemu-arm-static-50 /bin/bash /runme.sh`
Additional information:
A detailed description of the problem and feedback from other users is here: https://bugs.launchpad.net/qemu/+bug/1891748
