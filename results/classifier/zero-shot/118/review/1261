architecture: 0.977
graphic: 0.797
files: 0.784
device: 0.741
user-level: 0.658
semantic: 0.622
mistranslation: 0.592
performance: 0.497
PID: 0.469
network: 0.462
debug: 0.376
socket: 0.376
peripherals: 0.366
ppc: 0.343
vnc: 0.221
TCG: 0.217
virtual: 0.212
arm: 0.195
VMM: 0.189
hypervisor: 0.184
register: 0.171
boot: 0.127
permissions: 0.125
kernel: 0.108
risc-v: 0.092
KVM: 0.063
x86: 0.052
assembly: 0.046
i386: 0.030
--------------------
debug: 0.362
user-level: 0.325
architecture: 0.249
virtual: 0.224
hypervisor: 0.072
kernel: 0.067
TCG: 0.060
register: 0.022
files: 0.018
PID: 0.015
boot: 0.011
assembly: 0.007
semantic: 0.007
device: 0.006
performance: 0.005
VMM: 0.003
peripherals: 0.003
network: 0.002
socket: 0.002
graphic: 0.001
permissions: 0.001
risc-v: 0.001
arm: 0.001
KVM: 0.001
mistranslation: 0.001
vnc: 0.001
ppc: 0.000
x86: 0.000
i386: 0.000

qemu-user syscall 439 (faccessat2) not implemented - loongarch64
Description of problem:
On LoongArch64 architecture faccessat syscall is missing and only faccessat2 is present, but it is not handled in  linux-user/syscall
Steps to reproduce:
1. Launch a simple bash test script (call it test.sh): if [[ -r test.sh ]] ; then echo OK ; else echo ERROR ; fi
2. The result is "ERROR" even if the file "test.sh" exists and it is readeable
3. The correct result should be "OK"
Additional information:
test.sh:
   ```
   if [[ -r test.sh ]] ; then echo OK ; else echo ERROR ; fi
   ```
qemu-loongarch -strace log:
   ```
[...]
12579 statx(255,"",AT_EMPTY_PATH|AT_NO_AUTOMOUNT,STATX_BASIC_STATS,0x0000004000802a50) = 0
12579 lseek(255,0,SEEK_CUR) = 0
12579 read(255,0x2016d490,56) = 56
12579 Unknown syscall 439
12579 write(1,0x20172010,6) = 6
12579 read(255,0x2016d490,56) = 0
12579 rt_sigprocmask(SIG_BLOCK,0x0000004000802b60,0x0000004000802be0) = 0
12579 rt_sigprocmask(SIG_SETMASK,0x0000004000802be0,NULL) = 0
12579 exit_group(0)
   ```
