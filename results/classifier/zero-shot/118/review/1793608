architecture: 0.912
x86: 0.896
user-level: 0.859
files: 0.796
mistranslation: 0.794
graphic: 0.781
semantic: 0.777
performance: 0.776
assembly: 0.747
hypervisor: 0.737
ppc: 0.701
kernel: 0.686
peripherals: 0.668
device: 0.645
permissions: 0.625
debug: 0.611
network: 0.605
socket: 0.600
risc-v: 0.586
register: 0.552
vnc: 0.548
VMM: 0.527
PID: 0.521
TCG: 0.510
virtual: 0.500
arm: 0.487
KVM: 0.477
boot: 0.423
i386: 0.219
--------------------
assembly: 0.648
virtual: 0.401
debug: 0.350
ppc: 0.083
user-level: 0.036
files: 0.031
architecture: 0.018
register: 0.013
TCG: 0.012
semantic: 0.012
kernel: 0.011
PID: 0.010
hypervisor: 0.010
x86: 0.006
performance: 0.004
device: 0.003
socket: 0.002
boot: 0.001
permissions: 0.001
network: 0.001
peripherals: 0.001
graphic: 0.001
risc-v: 0.001
VMM: 0.001
vnc: 0.001
KVM: 0.000
mistranslation: 0.000
i386: 0.000
arm: 0.000

qemu doesn't seem to support lxvwsx for POWER9 target

When running a simple program built for POWER9 on QEMU 3.0.0 in linux-user mode, it crashes with a message: "illegal instruction". It turns out that lxvwsx instruction "Load Word and Splat Indexed" is not supported. If workaround is implemented by issuing two separate instructions (first load then splat) then all tests pass correctly.

Operating system: Ubuntu Mate 16.04.2 64-bit (or Linux Mint 18 64-bit).
Cross-compiler for gcc-powerpc64le-linux-gnu is installed (gcc-5 series).
QEMU 3.0.0 is built from source and installed with: sudo make install

The program in question: https://github.com/VectorChief/UniSIMD-assembler
Turn off the workaround: RT_ELEM_COMPAT_PW9 should be set to 1 in the following file:
https://github.com/VectorChief/UniSIMD-assembler/blob/master/core/config/rtarch_p32_128x1v2.h

Change to the "test" directory and type "make -f simd_make_p64.mk".
powerpc64le-linux-gnu-objdump -d simd_test.p64_32Lp9 > simd_test_p64_32Lp9.txt
Open newly created text file simd_test_p64_32Lp9.txt and search for lxvwsx (in s_test01, ...)
The instruction shows up in objdump correctly.

Small clarification to the bug description above.

Host architecture: x86_64 (AMD64)
Instructions used for building QEMU 3.0.0 from source are here:
https://github.com/VectorChief/UniSIMD-assembler/blob/master/INSTALL

The command line for emulating POWER9 target is below:
qemu-ppc64le -cpu POWER9 simd_test.p64_32Lp9 -c 1

With the workaround for lxvwsx instruction turned off (as described above)
QEMU crashes in s_test08 function of the following common SIMD test file:
https://github.com/VectorChief/UniSIMD-assembler/blob/master/test/simd_test.cpp

A patch has been posted here:
https://lists.gnu.org/archive/html/qemu-devel/2020-11/msg02218.html
("ppc/translate: Implement lxvwsx opcode")

Released with QEMU v5.2.0.

