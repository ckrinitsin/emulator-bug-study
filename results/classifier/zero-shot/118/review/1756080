mistranslation: 0.887
boot: 0.822
arm: 0.794
device: 0.687
architecture: 0.680
kernel: 0.600
semantic: 0.511
graphic: 0.416
files: 0.371
socket: 0.333
register: 0.316
risc-v: 0.299
performance: 0.293
vnc: 0.291
ppc: 0.281
network: 0.261
user-level: 0.255
permissions: 0.253
virtual: 0.227
VMM: 0.214
x86: 0.214
TCG: 0.209
i386: 0.187
PID: 0.168
assembly: 0.166
peripherals: 0.159
hypervisor: 0.133
debug: 0.125
KVM: 0.098
--------------------
arm: 0.997
kernel: 0.997
boot: 0.917
virtual: 0.908
hypervisor: 0.173
semantic: 0.131
architecture: 0.073
register: 0.030
TCG: 0.023
user-level: 0.021
device: 0.014
files: 0.012
debug: 0.009
PID: 0.007
performance: 0.006
assembly: 0.006
socket: 0.004
x86: 0.003
risc-v: 0.003
graphic: 0.003
network: 0.002
permissions: 0.002
peripherals: 0.002
i386: 0.002
mistranslation: 0.001
ppc: 0.001
KVM: 0.001
VMM: 0.001
vnc: 0.000

QEMU does not provide non-Linux kernels with ATAGS structure on ARM targets

This would be a useful feature. Many kernels, particularly hobbyist kernels, have support for ATAGS.

QEMU doesn't care whether the kernel you provide it is Linux or something else. If you pass -kernel something that's not an ELF file, we'll load and boot it using the Linux boot protocol (including ATAGS, potentially). If you pass an ELF file or pass -bios a binary blob, we'll just start it in the way the CPU usually resets, on the assumption it can deal with whatever that is.


