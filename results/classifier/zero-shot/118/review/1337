mistranslation: 0.962
architecture: 0.919
device: 0.785
socket: 0.784
x86: 0.723
network: 0.679
graphic: 0.648
semantic: 0.637
performance: 0.605
PID: 0.534
peripherals: 0.513
files: 0.502
virtual: 0.497
i386: 0.491
user-level: 0.462
permissions: 0.444
VMM: 0.444
boot: 0.422
hypervisor: 0.409
debug: 0.405
register: 0.395
arm: 0.385
risc-v: 0.355
kernel: 0.333
vnc: 0.296
ppc: 0.265
assembly: 0.242
TCG: 0.184
KVM: 0.136
--------------------
hypervisor: 0.938
virtual: 0.753
user-level: 0.705
debug: 0.370
VMM: 0.187
kernel: 0.152
x86: 0.150
PID: 0.065
TCG: 0.064
socket: 0.057
device: 0.056
files: 0.053
register: 0.053
architecture: 0.032
boot: 0.020
network: 0.018
semantic: 0.015
performance: 0.007
i386: 0.006
assembly: 0.006
risc-v: 0.005
KVM: 0.005
ppc: 0.002
peripherals: 0.002
permissions: 0.002
graphic: 0.002
vnc: 0.001
arm: 0.001
mistranslation: 0.001

Incorrect warnings when using vhost without numa
Description of problem:
Part A: Misleading error message. Running the above command for any architecture fails to initialize vhost, and prints the following, incorrect advice
```
qemu-system-mips: Failed initializing vhost-user memory map, consider using -object memory-backend-file share=on
qemu-system-mips: vhost_set_mem_table failed: Invalid argument (22)
qemu-system-mips: Error starting vhost: 22
```

Since the command line already contains `-object memory-backend-file,id=mem1,mem-path=/tmp/mem,size=256M,share=on` this error message should not be printed. For x86_64, this can be resolved by adding `-numa node,memdev=mem0` to the command line. As such, I think this error message should instead guide a user to adding that argument.

Part B: No documented configuration to run vhost-user for machines that don't support numa.
The mips malta machine does not support the `-numa` flag. It is unclear if this means that `vhost` cannot be used with this platform or if a non-numa configuration with a memory-backend-file can be used.
Steps to reproduce:
1. Run `vhost-user-vsock --socket=/tmp/vhost4.socket --uds-path=/tmp/foo` from https://github.com/rust-vmm/vhost-device.
1. Run the above QEMU command
