mistranslation: 0.963
architecture: 0.962
performance: 0.915
semantic: 0.886
graphic: 0.817
user-level: 0.807
device: 0.770
risc-v: 0.757
debug: 0.745
hypervisor: 0.670
PID: 0.661
permissions: 0.647
network: 0.646
peripherals: 0.614
register: 0.591
TCG: 0.589
virtual: 0.589
ppc: 0.579
VMM: 0.570
vnc: 0.567
files: 0.558
socket: 0.540
KVM: 0.539
kernel: 0.530
arm: 0.530
x86: 0.486
boot: 0.473
assembly: 0.440
i386: 0.414
--------------------
hypervisor: 0.190
assembly: 0.133
architecture: 0.049
TCG: 0.043
virtual: 0.042
register: 0.037
performance: 0.030
debug: 0.027
kernel: 0.026
files: 0.017
risc-v: 0.015
user-level: 0.013
PID: 0.008
semantic: 0.008
device: 0.008
vnc: 0.006
boot: 0.006
socket: 0.005
VMM: 0.005
network: 0.005
peripherals: 0.005
mistranslation: 0.005
permissions: 0.004
graphic: 0.003
KVM: 0.001
x86: 0.001
arm: 0.001
i386: 0.001
ppc: 0.001

RISCV64 32-bit AMOs incorrectly simulated

Version: qemu-riscv64 version 4.2.1 (Debian 1:4.2-3ubuntu6.14)

test:
  amomaxu.w a0, a1, (a0)
  ret

int32_t* value = -7;
EXPECT_EQ(-7, test(&value, -11));
EXPECT_EQ(-7, value);  // FAIL, saw -11
EXPECT_EQ(-7, test(&value, -7));
EXPECT_EQ(-7, value);  // FAIL, raw -11
EXPECT_EQ(-7, test(&value, -4));
EXPECT_EQ(-4, value);

test:
  amomax.w a0, a1, (a0)
  ret

int32_t* value = -7;
EXPECT_EQ(-7, test(&value, -11));
EXPECT_EQ(-7, value);
EXPECT_EQ(-7, test(&value, -7));
EXPECT_EQ(-7, value);
EXPECT_EQ(-7, test(&value, -4));
EXPECT_EQ(-4, value);  // FAIL, saw -7

I suspect that trans_amo<op>_w should be using tcg_gen_atomic_fetch_<op>_i32 instead of tcg_gen_atomic_fetch_<op>_tl.

Not as simple as _tl vs _i32.  That suffix should be taking
care of the sign-extension to _tl that happens after the
operation.  The size of the operation should be in the MO_TESL,
which specifies target-endian signed "long" (32-bit).

Will investigate further.

Flushing out the report to something that compiles,
the test case works for me using qemu 5.2.

