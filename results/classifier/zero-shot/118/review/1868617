mistranslation: 0.884
files: 0.835
device: 0.817
user-level: 0.809
semantic: 0.793
performance: 0.763
graphic: 0.753
register: 0.737
ppc: 0.728
kernel: 0.719
socket: 0.717
PID: 0.676
network: 0.671
debug: 0.647
peripherals: 0.646
architecture: 0.634
risc-v: 0.633
VMM: 0.630
permissions: 0.623
boot: 0.582
vnc: 0.577
x86: 0.575
i386: 0.570
hypervisor: 0.562
assembly: 0.561
arm: 0.551
TCG: 0.550
KVM: 0.505
virtual: 0.473
--------------------
virtual: 0.120
TCG: 0.104
x86: 0.077
files: 0.073
hypervisor: 0.031
debug: 0.025
user-level: 0.018
semantic: 0.015
i386: 0.008
network: 0.007
PID: 0.007
device: 0.006
register: 0.005
socket: 0.005
arm: 0.004
ppc: 0.004
risc-v: 0.004
architecture: 0.003
boot: 0.003
VMM: 0.002
performance: 0.002
vnc: 0.002
kernel: 0.002
peripherals: 0.001
permissions: 0.001
assembly: 0.001
graphic: 0.001
mistranslation: 0.001
KVM: 0.000

multiseat: route different spice tablet events to distinct vdagents

docs/multiseat.txt says:

> Note on spice: Spice handles multihead just fine.  But it can't do
> multiseat.  For tablet events the event source is sent to the spice
> agent.  But qemu can't figure it, so it can't do input routing.
> Fixing this needs a new or extended input interface between
> libspice-server and qemu.  For keyboard events it is even worse:  The
> event source isn't included in the spice protocol, so the wire
> protocol must be extended to support this.

I'm not sure exactly what "can't figure it" means, but it looks to me like qemu can't route incoming tablet events from a spice client to distinct vdagent channels.

I think this part of the process can be fixed within qemu.  I've reported https://gitlab.freedesktop.org/spice/spice-gtk/issues/121 to address the issues with the keyboard interface at the protocol level.

Here are two different ways i can think of to potentially solve this (i'm not qemu hacker, feel free to correct me or propose a better solution):

 - the spicevmc chardev's "name" parameter could be used to identify the agent numerically (e.g. "vdagent:1" instead of "vdagent")

 - the -device virtserialport could identify whether it is connected via a multiseat PCI bridge (pci-bridge-seat) and group it with the other monitor from there.

Is one of these approaches preferable?

The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting older bugs to "Incomplete" now.

If you still think this bug report here is valid, then please switch
the state back to "New" within the next 60 days, otherwise this report
will be marked as "Expired". Or please mark it as "Fix Released" if
the problem has been solved with a newer version of QEMU already.

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

