ppc: 0.853
semantic: 0.823
arm: 0.802
graphic: 0.783
architecture: 0.694
user-level: 0.638
vnc: 0.625
device: 0.600
risc-v: 0.586
debug: 0.572
mistranslation: 0.561
performance: 0.511
permissions: 0.481
assembly: 0.417
kernel: 0.407
socket: 0.387
VMM: 0.387
network: 0.379
PID: 0.359
virtual: 0.359
files: 0.306
TCG: 0.306
i386: 0.300
x86: 0.291
boot: 0.290
hypervisor: 0.262
KVM: 0.260
peripherals: 0.244
register: 0.189
--------------------
arm: 0.948
user-level: 0.725
TCG: 0.287
files: 0.069
debug: 0.058
virtual: 0.046
semantic: 0.016
PID: 0.015
register: 0.014
device: 0.009
architecture: 0.007
boot: 0.003
performance: 0.002
socket: 0.002
VMM: 0.002
peripherals: 0.002
network: 0.002
graphic: 0.001
KVM: 0.001
assembly: 0.001
permissions: 0.001
risc-v: 0.001
hypervisor: 0.001
vnc: 0.001
kernel: 0.001
mistranslation: 0.000
ppc: 0.000
x86: 0.000
i386: 0.000

Environment variables are not passed with user-space semihosting
Description of problem:
Environment variables are not passed to the emulated process, either inherited (as I might expect it to work in user-space?) or by specifying the values through the QEMU command-line. Note that setting the environment variable from within the app before calling `getenv` does work, so it isn't just a case of some system no-ops for the platform.
Steps to reproduce:
1. Compile the following program with [ARM embedded toolchain](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads):
```cpp
#include <iostream>
#include <cstdlib>

int main(int argc, char* argv[]) {
	char* env = std::getenv("TEST");
	if (env)
		std::cout << "Env TEST: " << env << "\n";
	else
		std::cout << "Env TEST not set.\n";
	return 0;
}
```

```
$ $CXX --version
arm-none-eabi-g++ (GNU Arm Embedded Toolchain 10-2020-q4-major) 10.2.1 20201103 (release)
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

$ $CXX main.cpp --specs=rdimon.specs -mcpu=cortex-m7
```

2. Run in user-space (semihosted):
```
$ qemu-arm -cpu cortex-m7 -E TEST=val123 ./a.out 
Env TEST not set.
```
