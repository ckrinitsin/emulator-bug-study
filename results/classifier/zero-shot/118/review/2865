architecture: 0.928
TCG: 0.838
assembly: 0.741
mistranslation: 0.694
device: 0.653
graphic: 0.618
kernel: 0.541
ppc: 0.526
PID: 0.473
socket: 0.439
performance: 0.433
vnc: 0.390
risc-v: 0.383
hypervisor: 0.366
network: 0.364
VMM: 0.362
peripherals: 0.357
arm: 0.349
debug: 0.298
x86: 0.281
register: 0.261
boot: 0.235
semantic: 0.210
user-level: 0.198
KVM: 0.187
files: 0.161
permissions: 0.161
i386: 0.152
virtual: 0.126
--------------------
TCG: 0.565
debug: 0.115
register: 0.035
files: 0.031
kernel: 0.016
semantic: 0.008
PID: 0.008
virtual: 0.007
VMM: 0.007
user-level: 0.006
device: 0.005
architecture: 0.004
hypervisor: 0.004
KVM: 0.003
ppc: 0.002
assembly: 0.002
performance: 0.002
graphic: 0.002
peripherals: 0.001
mistranslation: 0.001
risc-v: 0.001
vnc: 0.001
boot: 0.001
network: 0.001
socket: 0.001
arm: 0.001
permissions: 0.001
x86: 0.000
i386: 0.000

loongarch64: wrong implementation of `xvldi` instruction
Description of problem:
Consider this sample program.

```c++
#include <cstdio>
#include <cstdint>
#include <lsxintrin.h>
#include <lasxintrin.h>

void dump_u32(__m256i x) {
    uint32_t tmp[32/4];
    __lasx_xvst(x, tmp, 0);
    putchar('[');
    for (int i=0; i < 32/4; i++) {
        if (i > 0) {
            putchar(' ');
        }

        printf("%08x", tmp[i]);
    }
    puts("]");
}

int main() {
    __m256i const1 = __lasx_xvldi(-3832);
    dump_u32(const1);
}
```

The magic constants here means: replicate in 32-bit words a byte (0x4) shifted left by 8. We should have a vector of words 0x800, and indeed, the program run on a real hardware prints expected:

```
[00000800 00000800 00000800 00000800 00000800 00000800 00000800 00000800]
```

The same program run under Qemu prints:

```
[08000800 00000000 08000800 00000000 08000800 00000000 08000800 00000000]
```
Additional information:
I grabbed the latest sources, it seems there's bug in `target/loongarch/tcg/insn_trans/trans_vec.c.inc`, in function `vldi_get_value`.

```c
    case 1:
        /* data: {2{16'0, imm[7:0], 8'0}} */
        data = (t << 24) | (t << 8);
        break;
```

There should be `(t << (8+32)) | t << 8`.
