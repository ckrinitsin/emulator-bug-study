mistranslation: 0.970
device: 0.785
graphic: 0.726
architecture: 0.713
permissions: 0.686
performance: 0.619
kernel: 0.433
semantic: 0.424
x86: 0.352
network: 0.321
PID: 0.317
vnc: 0.298
risc-v: 0.271
i386: 0.252
debug: 0.237
socket: 0.207
KVM: 0.199
ppc: 0.199
TCG: 0.198
peripherals: 0.189
arm: 0.163
register: 0.163
VMM: 0.160
boot: 0.154
files: 0.125
hypervisor: 0.121
user-level: 0.082
virtual: 0.082
assembly: 0.048
--------------------
assembly: 0.739
debug: 0.598
TCG: 0.151
virtual: 0.122
register: 0.117
semantic: 0.092
kernel: 0.044
user-level: 0.040
hypervisor: 0.035
VMM: 0.028
KVM: 0.024
i386: 0.019
x86: 0.015
PID: 0.014
risc-v: 0.013
performance: 0.010
files: 0.009
architecture: 0.007
device: 0.007
ppc: 0.006
network: 0.004
permissions: 0.003
vnc: 0.003
socket: 0.003
peripherals: 0.001
boot: 0.001
graphic: 0.001
arm: 0.001
mistranslation: 0.001

Throws a #GP when it should throw a #SS
Description of problem:
When stacks are switched as part of a 64-bit mode privilege-level change (resulting from an interrupt), IA-32e mode loads only an inner-level RSP from the TSS. If the value of rsp from tss is a non-canonical form. It will trigger #SS. But when I test it in qemu it throws #GP instead of #SS
Steps to reproduce:
In order to confirm that it is the #SS triggered by the non-canonical address, We can verify on a real machine.  
1. Set the value of the current core's `TSS.IST7` to the the non-canonical address.
2. Set the `ist` field of the interrupt 4 (Overflow Exception) descriptor to 7.
3. Execute the `INT 4` instruction in Ring 3 and it will be taken over by the #SS handler.

Repeat the above steps in qemu this exception will be taken over by #GP
Additional information:

