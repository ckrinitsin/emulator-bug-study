mistranslation: 0.888
semantic: 0.815
graphic: 0.705
device: 0.702
socket: 0.666
user-level: 0.620
debug: 0.601
register: 0.599
ppc: 0.570
files: 0.554
performance: 0.550
kernel: 0.545
architecture: 0.526
PID: 0.515
vnc: 0.487
boot: 0.449
arm: 0.441
assembly: 0.423
virtual: 0.420
risc-v: 0.417
hypervisor: 0.416
x86: 0.411
network: 0.391
i386: 0.387
VMM: 0.375
TCG: 0.368
permissions: 0.365
peripherals: 0.298
KVM: 0.293
--------------------
virtual: 0.267
x86: 0.099
files: 0.047
TCG: 0.045
debug: 0.040
semantic: 0.027
hypervisor: 0.023
user-level: 0.017
i386: 0.008
PID: 0.006
register: 0.005
VMM: 0.005
performance: 0.005
ppc: 0.004
kernel: 0.003
graphic: 0.003
network: 0.003
device: 0.003
socket: 0.002
arm: 0.002
boot: 0.002
risc-v: 0.002
architecture: 0.001
vnc: 0.001
peripherals: 0.001
KVM: 0.001
assembly: 0.001
mistranslation: 0.001
permissions: 0.000

unsupported screen resolution crashes sdl-qemu

if the (windows) guest sets a screen resolution that the SDL backend does not support,
qemu does an exit(1).
with this fix, the the resolution is still wrong (only part of the desktop is displayed),
but qemu keeps running and the guest can auto-revert the video mode:

ui/sdl.c:do_sdl_resize()
    SDL_Surface * tmp_screen;
    tmp_screen = SDL_SetVideoMode(width, height, bpp, flags);
    if (!tmp_screen) {
//      fprintf(stderr, "Could not open SDL display (%dx%dx%d): %s\n", width, 
//              height, bpp, SDL_GetError());
//      exit(1);
    } else {
        real_screen = tmp_screen;
    }

Sorry, a little confusion what's the problem you want to solve?

its in the first sentence. let me rephrase: the (windows) guest can select some screen resolution which SDL cannot
provide. what happens is that qemu quits without giving the quest a chance to shut down. thats like having a monitor
that crashes windows when it doesnt support the video mode.

Yes, it is a bug. It should go back to the previous setting if the new screen resolution falied.
I will send a patch later. 

Thanks.

Patch posted:

http://patchwork.ozlabs.org/patch/270084/

this patch does solve the problem

Patch has been included here a while ago already:
http://git.qemu.org/?p=qemu.git;a=commitdiff;h=898ae2846de4dcb1
... so this ticket could now be marked as fixed.

