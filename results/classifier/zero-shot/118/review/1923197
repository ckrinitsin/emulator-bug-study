semantic: 0.907
debug: 0.904
register: 0.895
permissions: 0.884
mistranslation: 0.879
arm: 0.864
user-level: 0.862
assembly: 0.855
PID: 0.853
hypervisor: 0.849
socket: 0.832
peripherals: 0.824
VMM: 0.815
device: 0.813
performance: 0.808
graphic: 0.805
ppc: 0.804
files: 0.803
risc-v: 0.800
architecture: 0.795
KVM: 0.794
virtual: 0.792
vnc: 0.737
TCG: 0.735
boot: 0.724
network: 0.710
kernel: 0.708
x86: 0.596
i386: 0.482
--------------------
risc-v: 0.843
assembly: 0.830
debug: 0.128
architecture: 0.034
TCG: 0.032
ppc: 0.026
hypervisor: 0.025
semantic: 0.020
register: 0.017
VMM: 0.016
KVM: 0.010
device: 0.010
PID: 0.009
virtual: 0.009
files: 0.009
socket: 0.005
vnc: 0.005
kernel: 0.004
performance: 0.004
user-level: 0.004
peripherals: 0.003
permissions: 0.003
network: 0.002
boot: 0.002
mistranslation: 0.001
graphic: 0.001
arm: 0.000
i386: 0.000
x86: 0.000

RISC-V priviledged instruction error

Hello when performing an MRET with MPP set to something else than 0b11 in MSTATUS, 'Invalid Instruction' exception will be triggered. The problem appeared in code after version 5.2.0.

<pre>
  # setup interrupt handling for monitor mode
  la t0, entry_loop
  la t1, entry_trap
  li t2, 0x888
  li t3, 0x1880 # MPP in MSTATUS selects to which mode to return & MPIE selects if to enable interrupts after MRET
  csrw mepc, t0
  csrw mtvec, t1
  csrs mie, t2
  csrs mstatus, t3

  # if supervisor mode not supported, then loop forever
  csrr t0, misa
  li t1, 0x40000
  and t2, t1, t0
  beqz t2, 1f

  # setup interrupt i& exception delegation for supervisor mode
  li t0, 0xc0000000 # 3 GiB (entry address of supervisor)
  li t1, 0x1000
  #li t2, 0x300 # bit 8 & 9 is for ecall from user & supervisor mode
  #li t3, 0x222
  csrw mepc, t0
  csrc mstatus, t1
  #csrs medeleg, t2
  #csrs mideleg, t3

  # pass mhartid as first parameter to supervisor
  csrr a0, mhartid

1:
  mret
</pre>

I'm guessing that this is a bug in your guest as it hasn't configured PMP regions.

From the RISC-V spec:

"
If no PMP entry matches an M-mode access, the access succeeds. If no PMP entry matches an
S-mode or U-mode access, but at least one PMP entry is implemented, the access fails.
"

Confusingly implemented here means implemented in hardware, not just configured.

You can check this by reverting this QEMU commit:

commit d102f19a2085ac931cb998e6153b73248cca49f1
Author: Atish Patra <email address hidden>
Date:   Wed Dec 23 11:25:53 2020 -0800

    target/riscv/pmp: Raise exception if no PMP entry is configured
    
    As per the privilege specification, any access from S/U mode should fail
    if no pmp region is configured.
    
    Signed-off-by: Atish Patra <email address hidden>
    Reviewed-by: Alistair Francis <email address hidden>
    Message-id: <email address hidden>
    Signed-off-by: Alistair Francis <email address hidden>


Hello Francis,

I'll configure PMP than do the test again. Sorry I hadn't understood what
changed between version 5.2 and 6.0-rc2, since my code worked before.

Best regards,
Teodori Serge

On Thu, 15 Apr 2021, 06:15 Alistair Francis, <email address hidden>
wrote:

> I'm guessing that this is a bug in your guest as it hasn't configured
> PMP regions.
>
> >From the RISC-V spec:
>
> "
> If no PMP entry matches an M-mode access, the access succeeds. If no PMP
> entry matches an
> S-mode or U-mode access, but at least one PMP entry is implemented, the
> access fails.
> "
>
> Confusingly implemented here means implemented in hardware, not just
> configured.
>
> ** Changed in: qemu
>        Status: Confirmed => Invalid
>
> --
> You received this bug notification because you are subscribed to the bug
> report.
> https://bugs.launchpad.net/bugs/1923197
>
> Title:
>   RISC-V priviledged instruction error
>
> To manage notifications about this bug go to:
> https://bugs.launchpad.net/qemu/+bug/1923197/+subscriptions
>


We fixed a bug to make QEMU act more like hardware, which now means that PMP must be configured in M-mode.

Hello Francis,

Yes thank you. I added code to setup a basic PMP and it works now. Thank
you and best regards,

Teodori Serge

On Sun, 18 Apr 2021, 05:55 Alistair Francis, <email address hidden>
wrote:

> We fixed a bug to make QEMU act more like hardware, which now means that
> PMP must be configured in M-mode.
>
> --
> You received this bug notification because you are subscribed to the bug
> report.
> https://bugs.launchpad.net/bugs/1923197
>
> Title:
>   RISC-V priviledged instruction error
>
> To manage notifications about this bug go to:
> https://bugs.launchpad.net/qemu/+bug/1923197/+subscriptions
>


