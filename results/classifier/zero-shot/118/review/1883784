assembly: 0.972
architecture: 0.946
ppc: 0.940
performance: 0.917
graphic: 0.881
user-level: 0.819
semantic: 0.818
risc-v: 0.760
peripherals: 0.747
files: 0.736
permissions: 0.724
device: 0.696
TCG: 0.659
register: 0.655
PID: 0.654
mistranslation: 0.631
VMM: 0.627
network: 0.625
hypervisor: 0.601
kernel: 0.584
KVM: 0.570
debug: 0.566
vnc: 0.551
arm: 0.536
boot: 0.516
x86: 0.495
i386: 0.490
socket: 0.469
virtual: 0.406
--------------------
ppc: 0.475
hypervisor: 0.077
virtual: 0.066
TCG: 0.045
files: 0.042
user-level: 0.032
debug: 0.028
semantic: 0.013
assembly: 0.012
PID: 0.012
performance: 0.007
kernel: 0.007
network: 0.007
device: 0.005
boot: 0.005
architecture: 0.004
register: 0.004
risc-v: 0.003
peripherals: 0.002
arm: 0.002
vnc: 0.002
socket: 0.002
permissions: 0.002
graphic: 0.001
VMM: 0.001
x86: 0.001
mistranslation: 0.001
KVM: 0.000
i386: 0.000

[ppc64le] qemu behavior differs from ppc64le hardware

I have some code which passes my test suite on PPC64LE hardware when compiled with GCC 10, but the saem binary fails with both qemu-ppc64le 4.2 (on Fedora 32) and qemu-ppc64le-static 5.0.0 (Debian testing).

I'm not getting any errors about illegal instructions or anything, like that; the results are just silently different on qemu.

I've generated a reduced test case, which is attached along with the binaries (both are the same code, one is just statically linked).  They should execute successufully on PPC64LE hardware, but on qemu they hit a __builtin_abort (because the computed value doesn't match the expected value).

Without being familiar with PPC assembly I'm not sure what else I can do, but if there is anything please let me know.



Did you try to run it in a qemu-system-ppc64 guest?
It would help to know if it is a tcg or a linux-user bug.

I just ran the provided binaries on a qemu-system-ppc64 version 5.0-5 from Debian Bullseye and they also aborted there

The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting older bugs to "Incomplete" now.

If the bug has already been fixed in the latest upstream version of QEMU,
then please close this ticket as "Fix released".

If it is not fixed yet and you think that this bug report here is still
valid, then you have two options:

1) If you already have an account on gitlab.com, please open a new ticket
for this problem in our new tracker here:

    https://gitlab.com/qemu-project/qemu/-/issues

and then close this ticket here on Launchpad (or let it expire auto-
matically after 60 days). Please mention the URL of this bug ticket on
Launchpad in the new ticket on GitLab.

2) If you don't have an account on gitlab.com and don't intend to get
one, but still would like to keep this ticket opened, then please switch
the state back to "New" within the next 60 days (otherwise it will get
closed as "Expired"). We will then eventually migrate the ticket auto-
matically to the new system (but you won't be the reporter of the bug
in the new system and thus won't get notified on changes anymore).

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

