mistranslation: 0.969
ppc: 0.898
architecture: 0.840
graphic: 0.838
device: 0.835
semantic: 0.817
performance: 0.809
permissions: 0.709
i386: 0.697
kernel: 0.686
socket: 0.651
boot: 0.648
files: 0.634
network: 0.632
register: 0.632
vnc: 0.619
user-level: 0.611
x86: 0.609
arm: 0.592
PID: 0.575
peripherals: 0.571
risc-v: 0.545
debug: 0.541
assembly: 0.503
VMM: 0.490
TCG: 0.484
hypervisor: 0.464
KVM: 0.448
virtual: 0.384
--------------------
x86: 0.522
semantic: 0.287
i386: 0.118
VMM: 0.058
TCG: 0.053
virtual: 0.035
register: 0.030
network: 0.025
files: 0.025
debug: 0.018
PID: 0.017
boot: 0.013
kernel: 0.012
device: 0.010
socket: 0.009
architecture: 0.007
user-level: 0.007
performance: 0.006
hypervisor: 0.006
KVM: 0.004
assembly: 0.004
vnc: 0.003
graphic: 0.001
mistranslation: 0.001
permissions: 0.001
ppc: 0.001
peripherals: 0.001
risc-v: 0.001
arm: 0.000

Possibly inaccurate statement in PC Platform Docs

The documentation at:

http://wiki.qemu.org/Documentation/Platforms/PC

Contains the statement that the processor, after reset, executes code starting from address 0xFFFFF, corresponding to the last byte of the single megabyte of memory in the old 8086 address range.

From my recollection of working in the microcomputer industry in the late 1980's, execution actually starts in real mode at the start of the last 16 bytes of addressable memory, at 0xFFFF0.  Think about it - if it's the last byte there's no room for an address operand to accompany a 1-byte opcode.

Oh, and if I recall correctly, on the 80286 and 80386 and 80486, on reset the amount of addressable memory was 16MiB, 4GiB and 4GiB respectively, and IBM made the choice to map the BIOS ROMs to both the top of addressable memory and at the top of the first MiB.  The CPU's themselves always reset to near the top of their address range, and the BIOS writers promptly jumped back down to somewhere near the top of the first MiB.


As far as I can see, the wording on the page only says that the BIOS ends at address 0xFFFFF, not that it starts execution at exactly that address. So I think that page is ok.

OK, I just read the text again, and the sentences before the one with the 0xfffff indeed sounded like the the start address was at the last byte. I've reworded the text now a little bit so that it should be more accurate.

