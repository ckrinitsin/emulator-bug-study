user-level: 0.902
permissions: 0.881
risc-v: 0.877
vnc: 0.864
ppc: 0.855
VMM: 0.850
hypervisor: 0.840
semantic: 0.836
TCG: 0.829
device: 0.828
register: 0.828
virtual: 0.818
mistranslation: 0.816
peripherals: 0.807
KVM: 0.801
x86: 0.799
boot: 0.796
graphic: 0.791
performance: 0.786
debug: 0.780
assembly: 0.776
PID: 0.773
architecture: 0.772
socket: 0.755
files: 0.739
arm: 0.734
network: 0.725
kernel: 0.691
i386: 0.560
--------------------
ppc: 0.761
x86: 0.719
kernel: 0.697
virtual: 0.572
PID: 0.136
hypervisor: 0.105
debug: 0.081
performance: 0.074
architecture: 0.073
user-level: 0.071
socket: 0.047
files: 0.037
boot: 0.032
register: 0.028
device: 0.012
semantic: 0.009
network: 0.005
TCG: 0.004
assembly: 0.003
peripherals: 0.003
vnc: 0.003
permissions: 0.002
graphic: 0.002
VMM: 0.002
risc-v: 0.001
KVM: 0.001
mistranslation: 0.001
i386: 0.000
arm: 0.000

QEMU-SYSTEM-PPC64 Regression QEMU-4.0.0

I have been using QEMU-SYSTEM-PPC64 v3.1.0 to run CentOS7 PPC emulated system. It stopped working when I upgraded to QEMU-4.0.0 . I downgraded back to QEMU-3.1.0 and it started working again. The problem is that my CentOS7 image will not boot up udner QEMU-4.0.0, but works fine under QEMU-3.1.0.

I have an QCOW2 image available at https://www.mediafire.com/file/d8dda05ro85whn1/linux-centos7-ppc64.qcow2/file . NOTE: It is 15GB. Kind of large.

I run it as follows:

   qemu-system-ppc64 \
      -name "CENTOS7-PPC64" \
      -cpu POWER7 -machine pseries \
      -m 4096 \
      -netdev bridge,id=netbr0,br=br0 \
      -device e1000,netdev=netbr0,mac=52:54:3c:13:21:33 \
      -hda "./linux-centos7-ppc64.qcow2" \
      -monitor stdio

HOST: I am using Manjaro Linux on an Intel i7 machine with the QEMU packages installed via the package manager of the distribution.

[jsantiago@jlsws0 ~]$ uname -a
Linux jlsws0.haivision.com 4.19.42-1-MANJARO #1 SMP PREEMPT Fri May 10 20:52:43 UTC 2019 x86_64 GNU/Linux

jsantiago@jlsws0 ~]$ cpuinfo 
Intel(R) processor family information utility, Version 2019 Update 3 Build 20190214 (id: b645a4a54)
Copyright (C) 2005-2019 Intel Corporation.  All rights reserved.

=====  Processor composition  =====
Processor name    : Intel(R) Core(TM) i7-6700K  
Packages(sockets) : 1
Cores             : 4
Processors(CPUs)  : 8
Cores per package : 4
Threads per core  : 2

=====  Processor identification  =====
Processor	Thread Id.	Core Id.	Package Id.
0       	0   		0   		0   
1       	0   		1   		0   
2       	0   		2   		0   
3       	0   		3   		0   
4       	1   		0   		0   
5       	1   		1   		0   
6       	1   		2   		0   
7       	1   		3   		0   
=====  Placement on packages  =====
Package Id.	Core Id.	Processors
0   		0,1,2,3		(0,4)(1,5)(2,6)(3,7)

=====  Cache sharing  =====
Cache	Size		Processors
L1	32  KB		(0,4)(1,5)(2,6)(3,7)
L2	256 KB		(0,4)(1,5)(2,6)(3,7)
L3	8   MB		(0,1,2,3,4,5,6,7)

I suspect that this may be related to the VSR register conversion. Can you try applying all of the patches below on top of 4.0 to see if they resolve the issue?

https://lists.gnu.org/archive/html/qemu-devel/2019-05/msg01254.html
https://lists.gnu.org/archive/html/qemu-devel/2019-05/msg01256.html
https://lists.gnu.org/archive/html/qemu-devel/2019-05/msg01257.html
https://lists.gnu.org/archive/html/qemu-devel/2019-05/msg01260.html


I applied the four patches you indicated and the image boots up and runs. Everything seems to be working now. Thank You.

I also have a regression issue between 3.1.0 and 4.0.0 (actually latest git) on qemu-system-ppc64 but it involves an AIX guest instead (fail to boot). Should I open a new ticket or hop on this one ?

David has already queued the patches in his ppc-for-4.1 branch at https://github.com/dgibson/qemu/commits/ppc-for-4.1 so they will get merged soon. If you're working with git then I'd try testing the queued branch first and see if that resolves the issue.

Once the patches have been applied to master we'll add a CC to the stable list so the fixes will be included in the next 4.0 update.

Same thing here using https://github.com/dgibson/qemu/commits/ppc-for-4.1 ... It might be a completely different problem (athough it looks like a MMU problem).

Is this fixed now? Can we mark as fix committed?

It is fixed with the 4.1.0 release. Thank you.

