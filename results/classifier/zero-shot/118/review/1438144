mistranslation: 0.884
device: 0.760
semantic: 0.744
user-level: 0.660
performance: 0.653
network: 0.649
graphic: 0.623
kernel: 0.607
architecture: 0.580
permissions: 0.563
socket: 0.557
files: 0.550
ppc: 0.495
register: 0.472
vnc: 0.471
hypervisor: 0.419
debug: 0.393
peripherals: 0.386
risc-v: 0.359
boot: 0.351
VMM: 0.340
i386: 0.316
arm: 0.312
x86: 0.294
assembly: 0.251
PID: 0.235
virtual: 0.225
KVM: 0.220
TCG: 0.194
--------------------
x86: 0.621
files: 0.517
register: 0.281
i386: 0.244
architecture: 0.173
arm: 0.105
semantic: 0.097
hypervisor: 0.086
virtual: 0.052
kernel: 0.052
TCG: 0.043
user-level: 0.034
ppc: 0.019
device: 0.016
debug: 0.016
VMM: 0.016
PID: 0.008
assembly: 0.008
risc-v: 0.008
performance: 0.005
peripherals: 0.003
network: 0.003
socket: 0.002
boot: 0.002
KVM: 0.001
vnc: 0.001
graphic: 0.001
permissions: 0.000
mistranslation: 0.000

Page sizes are not interpreted correctly for E500/E500MC

http://cache.freescale.com/files/32bit/doc/ref_manual/E500CORERM.pdf - see 2.12.5.2 MAS Register 1 (MAS1), p. 2-41
http://cache.freescale.com/files/32bit/doc/ref_manual/E500MCRM.pdf - see 2.16.6.2 MAS Register 1 (MAS1), p. 2-54

According to these documents, variable page size for TLB1 is computed as 4K ** TSIZE.

However, QEMU always treats it as if it was 1K << TSIZE, even if options like "-cpu e500mc" are supplied to qemu.

This is not a bug.  MMU v2 (implemented in e6500) extended the TSIZE field so that 1K <<
TSIZE is correct.  The extension was on the LSB side so that it works
fine as long as the low bit of the new TSIZE (which is reserved on
e500v2/mc) is zero.


You're absolutely right. Sorry for bothering. 

