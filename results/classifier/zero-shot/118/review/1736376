mistranslation: 0.802
device: 0.522
ppc: 0.514
graphic: 0.481
semantic: 0.478
network: 0.462
files: 0.416
register: 0.371
vnc: 0.368
risc-v: 0.347
architecture: 0.340
socket: 0.326
kernel: 0.279
i386: 0.270
performance: 0.263
VMM: 0.256
PID: 0.255
boot: 0.240
virtual: 0.215
permissions: 0.211
peripherals: 0.209
x86: 0.196
debug: 0.172
TCG: 0.171
hypervisor: 0.160
user-level: 0.157
arm: 0.156
assembly: 0.116
KVM: 0.024
--------------------
files: 0.921
kernel: 0.914
hypervisor: 0.866
debug: 0.192
virtual: 0.093
x86: 0.067
device: 0.047
user-level: 0.044
TCG: 0.035
risc-v: 0.033
VMM: 0.026
register: 0.024
ppc: 0.016
network: 0.013
arm: 0.012
i386: 0.010
architecture: 0.009
semantic: 0.007
socket: 0.004
KVM: 0.004
peripherals: 0.003
assembly: 0.003
vnc: 0.003
performance: 0.003
boot: 0.002
PID: 0.002
graphic: 0.001
permissions: 0.001
mistranslation: 0.000

CVE-2017-7471 repeated?

In the hw/9pfs/9p-proxy.c file I can see the following which is changed because of CVE-2017-7471 in the hw/9pfs/9p-local.c. I might be wrong but I guess that should be changed as well. 

if(dir_path){
v9fs_path_sprintf(target,"%s/%s",dir_path->data,name);
}
else{
v9fs_path_sprintf(target,"%s",name);
}

When using the proxy backend, all accesses to the host filesystem are handled by an external process running in a chroot() jail. No need to bother about paths in this case.

CVE-2017-7471 is only applicable to the local backend, because accesses are handled by QEMU directly in this case.


