semantic: 0.907
register: 0.815
architecture: 0.758
device: 0.743
ppc: 0.626
mistranslation: 0.625
arm: 0.587
peripherals: 0.587
performance: 0.582
socket: 0.577
kernel: 0.543
graphic: 0.511
vnc: 0.458
user-level: 0.456
hypervisor: 0.437
network: 0.436
PID: 0.400
permissions: 0.384
assembly: 0.371
risc-v: 0.352
virtual: 0.340
x86: 0.329
files: 0.311
debug: 0.290
boot: 0.283
i386: 0.278
TCG: 0.264
VMM: 0.255
KVM: 0.225
--------------------
arm: 0.936
register: 0.776
peripherals: 0.269
kernel: 0.115
performance: 0.110
architecture: 0.082
debug: 0.056
assembly: 0.050
device: 0.029
network: 0.026
semantic: 0.024
user-level: 0.023
files: 0.022
TCG: 0.013
virtual: 0.013
hypervisor: 0.013
PID: 0.012
VMM: 0.012
socket: 0.007
risc-v: 0.006
vnc: 0.005
boot: 0.005
permissions: 0.003
x86: 0.003
KVM: 0.003
i386: 0.002
ppc: 0.002
mistranslation: 0.001
graphic: 0.001

PL050 KMIDATA register does not reset

static uint32_t pl050_read(void *opaque, target_phys_addr_t offset){
  ...
   case 2: /* KMIDATA */
        if (s->pending)
            s->last = ps2_read_data(s->dev);
        return s->last;
}

When the receive queue is empty (s->pending is false), is the KMIDATA register supposed to be reset to 0x00? In the current implementation,  the  KMIDATA  does not reverse its value after interrupt is lowered.

On 26 July 2015 at 19:16, T-T Yu <email address hidden> wrote:
> Public bug reported:
>
> static uint32_t pl050_read(void *opaque, target_phys_addr_t offset){
>   ...
>    case 2: /* KMIDATA */
>         if (s->pending)
>             s->last = ps2_read_data(s->dev);
>         return s->last;
> }
>
> When the receive queue is empty (s->pending is false), is the KMIDATA
> register supposed to be reset to 0x00? In the current implementation,
> the  KMIDATA  does not reverse its value after interrupt is lowered.

The documentation for the PL050:
http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.ddi0143c/i1014040.html

just says that when KMIDATA is read you get the value in the
receive data register. The implication is that if you read
it multiple times you'll just continue to read the same
value it holds until the keyboard sends further data to be
clocked into the register.

Are you saying that real hardware behaves differently?

thanks
-- PMM


Yes. In our pl050 keyboard controller, the KMIDATA is reset once the receive queue is empty. 

Looking through old bug tickets... is this still an issue with the latest version of QEMU? Or could we close this ticket nowadays?


[Expired for QEMU because there has been no activity for 60 days.]

