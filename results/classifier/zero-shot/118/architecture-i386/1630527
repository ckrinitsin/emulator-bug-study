i386: 0.985
architecture: 0.922
device: 0.911
x86: 0.864
files: 0.697
socket: 0.624
graphic: 0.600
ppc: 0.591
arm: 0.553
debug: 0.530
vnc: 0.484
PID: 0.482
kernel: 0.470
network: 0.468
semantic: 0.433
permissions: 0.383
boot: 0.371
TCG: 0.360
register: 0.355
risc-v: 0.352
assembly: 0.352
performance: 0.345
hypervisor: 0.338
VMM: 0.271
mistranslation: 0.224
KVM: 0.112
virtual: 0.109
user-level: 0.104
peripherals: 0.073
--------------------
i386: 0.999
x86: 0.996
debug: 0.495
files: 0.177
TCG: 0.098
hypervisor: 0.082
kernel: 0.059
device: 0.037
architecture: 0.032
register: 0.025
PID: 0.011
VMM: 0.011
virtual: 0.011
semantic: 0.011
boot: 0.008
user-level: 0.008
assembly: 0.006
peripherals: 0.006
performance: 0.005
KVM: 0.005
risc-v: 0.004
network: 0.003
graphic: 0.002
ppc: 0.002
socket: 0.002
vnc: 0.001
permissions: 0.001
mistranslation: 0.000
arm: 0.000

qemu/hw/i386/amd_iommu.c:188: possible bad shift ?

qemu/hw/i386/amd_iommu.c:188]: (error) Shifting 32-bit value by 64 bits is undefined behaviour

Source code is

    uint64_t mask = ((1 << length) - 1) << bitpos;

Maybe better code

    uint64_t mask = ((1ULL << length) - 1) << bitpos;

Thanks for reporting this bug! Looks like this has already been fixed by this commit here:
http://git.qemu.org/?p=qemu.git;a=commitdiff;h=1d5b128cbeeab638f772e


Released with v2.8

