graphic: 0.179
device: 0.132
mistranslation: 0.132
semantic: 0.125
network: 0.085
architecture: 0.075
arm: 0.059
kernel: 0.053
socket: 0.052
virtual: 0.048
vnc: 0.048
ppc: 0.046
PID: 0.043
assembly: 0.031
performance: 0.029
risc-v: 0.027
permissions: 0.027
register: 0.026
files: 0.024
debug: 0.024
VMM: 0.023
hypervisor: 0.021
TCG: 0.018
user-level: 0.018
x86: 0.017
peripherals: 0.011
KVM: 0.010
boot: 0.008
i386: 0.006

"qemu-img resize -f qcow2" produces broken disk images
Description of problem:
The documentation of `qemu-img` at
<https://www.qemu.org/docs/master/tools/qemu-img.html>
makes it sound like `qemu-img resize` supports various image formats
(raw, qcow2, etc.) in the same way.

But it doesn't. While `qemu-img resize -f raw` works as expected,
`qemu-img resize -f qcow2` produces broken disk images.
Steps to reproduce:
```
$ wget http://nycdn.netbsd.org/pub/NetBSD-daily/netbsd-9/latest/evbarm-aarch64/binary/gzimg/arm64.img.gz
$ gunzip arm64.img
```

First resize, then convert:
```
$ cp arm64.img arm64-rc.img
$ qemu-img resize -f raw arm64-rc.img 10G
$ qemu-img convert -f raw -O qcow2 arm64-rc.img arm64-rc.qcow2
$ rm -f arm64-rc.img
```

First convert, then resize:
```
$ qemu-img convert -f raw -O qcow2 arm64.img arm64-cr.qcow2
$ qemu-img resize -f qcow2 arm64-cr.qcow2 10G
```

Attach to a VM in VirtualBox (as an additional SATA disk) and start that VM.

arm64-rc.qcow2 =>
`# fdisk /dev/sdb` => it has two partitions.

arm64-cr.qcow2 =>
`# fdisk /dev/sdb` => it has no partitions!
And the VM cannot be cleanly shut down. I had to manually kill the VirtualBoxVM
process.
Additional information:

