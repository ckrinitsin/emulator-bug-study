mistranslation: 0.920
semantic: 0.716
graphic: 0.516
device: 0.344
architecture: 0.304
performance: 0.258
i386: 0.242
x86: 0.226
user-level: 0.217
virtual: 0.195
hypervisor: 0.191
permissions: 0.171
debug: 0.123
register: 0.107
boot: 0.104
network: 0.101
vnc: 0.068
PID: 0.062
peripherals: 0.048
kernel: 0.046
assembly: 0.046
ppc: 0.044
arm: 0.044
risc-v: 0.041
VMM: 0.034
TCG: 0.032
files: 0.028
socket: 0.025
KVM: 0.018
--------------------
virtual: 0.901
user-level: 0.897
hypervisor: 0.409
semantic: 0.114
x86: 0.068
TCG: 0.050
register: 0.022
kernel: 0.010
performance: 0.010
socket: 0.006
files: 0.005
PID: 0.004
i386: 0.004
ppc: 0.004
debug: 0.004
architecture: 0.003
device: 0.002
network: 0.002
permissions: 0.001
boot: 0.001
assembly: 0.001
VMM: 0.001
arm: 0.001
risc-v: 0.001
graphic: 0.001
mistranslation: 0.000
vnc: 0.000
peripherals: 0.000
KVM: 0.000

[REQUEST] SHARING MEMORY WITH HOST

Instead of a preallocated memory heap I would like for QEMU to share memory using shm. 

Example: Instead of using 16gb out of 32gb of ram to run Windows 10, there would be no option to allocate it, but to share the hosts resources; ie giving the host full access to the entire ram stack


I'm not a great programmer but I'm pretty sure QEMU's team could find this useful

Sorry, but I have a hard to to imagine what you exactly mean here. Do you mean a possibility for one application in the guest and one in the host to share a piece of memory? Or do you mean that the operating systems in the host and guest should somehow share the memory (why?)? Or do you just look for a possibility to avoid that the guest has a lot of memory allocated to it when it does not need it? In the latter case, there is already virtio-balloon, so you should have a look at the virtio drivers if you need something like this.

[Expired for QEMU because there has been no activity for 60 days.]

