instruction: 0.957
graphic: 0.951
semantic: 0.950
device: 0.949
socket: 0.944
boot: 0.942
other: 0.939
assembly: 0.933
vnc: 0.919
mistranslation: 0.917
network: 0.902
KVM: 0.885

Segmentation fault if started without -enable-kvm parameter

I start qemu (Linux) from the same USB memory stick on several computers. Up to and including qemu 0.12.5, I could use or not use qemu's "-enable-kvm" command line parameter as appropriate for the hardware, and qemu would run. In contrast, qemu 0.13.0 and 0.14.0 segfault if started without "-enable-kvm". I get a black window appearing for fractions of a second, disappearing immediately, and then the error message "Segmentation fault".

Hardware: Pentium 4, and Core 2 Duo.
Command line: either "qemu" or "qemu -enable-kvm" (after manually loading the kvm-intel module on the Core 2 Duo).
Reproducible: always.

It is a bit weird that www.qemu.org tells me to report my bugs on launchpad, but replies to my bug report then appear ONLY on the developer mailing list. How shall a lowly end-user know that he must look there, too?

Anyway. On the developer mailing list, Markus Armbruster (Mon, 21 Feb 2011 09:00:25 +0100) requested:

> Stack backtrace, please!

When recompiling qemu 0.14.0 with "--enable-debug" for that purpose I also played a bit with the CFLAGS. It turns out that qemu segfaults when compiled with "-Os" in the CFLAGS, but not when compiled without "-O<whatever>" in the CFLAGS. The GCC version is 4.5.2. 

I have now probably lost the audience. But nevermind, here is the stack backtrace from qemu compiled with "-Os":

root [~/sandbox] gdb qemu
GNU gdb (GDB) 7.2
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-pc-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /usr/bin/qemu...done.
(gdb) r
Starting program: /usr/bin/qemu 
[Thread debugging using libthread_db enabled]

Program received signal SIGSEGV, Segmentation fault.
raise_interrupt (intno=13, is_int=0, error_code=8, next_eip_addend=0)
    at /root/sandbox/stage4/qemu-0.14.0/target-i386/op_helper.c:1340
1340	    env->exception_index = intno;
(gdb) bt
#0  raise_interrupt (intno=13, is_int=0, error_code=8, next_eip_addend=0)
    at /root/sandbox/stage4/qemu-0.14.0/target-i386/op_helper.c:1340
#1  0x08146e13 in raise_exception_err (exception_index=13, error_code=8)
    at /root/sandbox/stage4/qemu-0.14.0/target-i386/op_helper.c:1351
#2  0xda9abe00 in ?? ()
#3  0x00000000 in ?? ()
(gdb) 


and for comparison, the stack backtrace after compiling qemu with no CFLAGS at all:

root [~/sandbox] gdb qemu
GNU gdb (GDB) 7.2
Copyright (C) 2010 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i686-pc-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /usr/bin/qemu...done.
(gdb) r
Starting program: /usr/bin/qemu 
[Thread debugging using libthread_db enabled]

Program exited normally.
(gdb) bt
No stack.
(gdb) 


The problem reported above was the same up to and including qemu 0.15.0. Meanwhile I found this on the LinuxFromScratch (LFS) bug tracker:

  "Glibc-2.14 causes segfaults in SDL", http://wiki.linuxfromscratch.org/lfs/ticket/2920

After applying their patch to GLIBC, qemu finally works again on the Pentium 4. As far as I am concerned, this bug report can now be closed.


Closing bug according to comment #2

