mistranslation: 0.703
graphic: 0.629
semantic: 0.548
device: 0.521
other: 0.517
instruction: 0.503
boot: 0.457
KVM: 0.340
vnc: 0.317
network: 0.306
socket: 0.239
assembly: 0.197

microcode version stays 0x1 even if -cpu host is used

The microcode version of my host cpu has the following version:

grep microcode /proc/cpuinfo | head -1
microcode       : 0x3d

while trying to run ESXi in an nested VM, the boot bailed out with
error message that at least microcode version 0x19 is needed. It 
seems they have introduced such a check on certain CPU types.

The VM in question is using the "host-passthrough" option in libvirt
and the qemu command line reads as this:

21172 ?        Sl     0:09 /usr/libexec/qemu-kvm -name guest=hpe-env-client1,debug-threads=on -S -object secret,id=masterKey0,format=raw,file=/var/lib/libvirt/qemu/domain-33-hpe-env-client1/master-key.aes -machine pc-i440fx-rhel7.6.0,accel=kvm,usb=off,dump-guest-core=off -cpu host <rest stripped>

Running a regular Linux VM with `host-passthrough` shows that the
microcode version is still reported as 0x1.

Within the VM:

[root@hpe-env-client1 ~]# cat /proc/cpuinfo 
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 63
model name      : Intel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz
stepping        : 2
microcode       : 0x1
cpu MHz         : 2397.222


My impression is qemu should copy the hosts microcode version in this case?

Running Qemu von RHEl8 beta here.

[root@3parserver ~]# /usr/libexec/qemu-kvm --version
QEMU emulator version 2.12.0 (qemu-kvm-2.12.0-41.el8+2104+3e32e6f8)

The QEMU project is currently considering to move its bug tracking to another system. For this we need to know which bugs are still valid and which could be closed already. Thus we are setting older bugs to "Incomplete" now.
If you still think this bug report here is valid, then please switch the state back to "New" within the next 60 days, otherwise this report will be marked as "Expired". Or mark it as "Fix Released" if the problem has been solved with a newer version of QEMU already. Thank you and sorry for the inconvenience.

This is fixed in 5.2.

