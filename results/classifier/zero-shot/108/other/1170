other: 0.827
debug: 0.798
permissions: 0.784
KVM: 0.773
graphic: 0.754
device: 0.752
semantic: 0.746
vnc: 0.733
network: 0.730
PID: 0.716
performance: 0.707
boot: 0.706
socket: 0.702
files: 0.691

Unable to compile in Ubuntu 22.04, at compiling linux-user_arm_nwfpe_double_cpdo.c.o
Description of problem:
Compiling of QEMU 7.1.0-rc3 stops here for me:
```
[7172/9855] Compiling C object libqemu-armeb-linux-user.fa.p/linux-user_arm_nwfpe_double_cpdo.c.o
FAILED: libqemu-armeb-linux-user.fa.p/linux-user_arm_nwfpe_double_cpdo.c.o 
cc -m64 -mcx16 -Ilibqemu-armeb-linux-user.fa.p -I. -I.. -Itarget/arm -I../target/arm -I../common-user/host/x86_64 -I../linux-user/include/host/x86_64 -I../linux-user/include -Ilinux-user -I../linux-user -Ilinux-user/arm -I../linux-user/arm -Iqapi -Itrace -Iui -Iui/shader -I/usr/include/capstone -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -fdiagnostics-color=auto -Wall -Winvalid-pch -std=gnu11 -O2 -g -isystem /home/andrea/Downloads/qemu-7.1.0-rc3/linux-headers -isystem linux-headers -iquote . -iquote /home/andrea/Downloads/qemu-7.1.0-rc3 -iquote /home/andrea/Downloads/qemu-7.1.0-rc3/include -iquote /home/andrea/Downloads/qemu-7.1.0-rc3/tcg/i386 -pthread -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -Wstrict-prototypes -Wredundant-decls -Wundef -Wwrite-strings -Wmissing-prototypes -fno-strict-aliasing -fno-common -fwrapv -Wold-style-declaration -Wold-style-definition -Wtype-limits -Wformat-security -Wformat-y2k -Winit-self -Wignored-qualifiers -Wempty-body -Wnested-externs -Wendif-labels -Wexpansion-to-defined -Wimplicit-fallthrough=2 -Wno-missing-include-dirs -Wno-shift-negative-value -Wno-psabi -fstack-protector-strong -fPIE -isystem../linux-headers -isystemlinux-headers -DNEED_CPU_H '-DCONFIG_TARGET="armeb-linux-user-config-target.h"' '-DCONFIG_DEVICES="armeb-linux-user-config-devices.h"' -MD -MQ libqemu-armeb-linux-user.fa.p/linux-user_arm_nwfpe_double_cpdo.c.o -MF libqemu-armeb-linux-user.fa.p/linux-user_arm_nwfpe_double_cpdo.c.o.d -o libqemu-armeb-linux-user.fa.p/linux-user_arm_nwfpe_double_cpdo.c.o -c ../linux-user/arm/nwfpe/double_cpdo.c
during RTL pass: expand
../linux-user/arm/nwfpe/double_cpdo.c: In function ‘DoubleCPDO’:
../linux-user/arm/nwfpe/double_cpdo.c:232:1: internal compiler error: Segmentation fault
  232 | }
      | ^
0x7fe5b824251f ???
	./signal/../sysdeps/unix/sysv/linux/x86_64/libc_sigaction.c:0
0x7fe5b8229d8f __libc_start_call_main
	../sysdeps/nptl/libc_start_call_main.h:58
0x7fe5b8229e3f __libc_start_main_impl
	../csu/libc-start.c:392
Please submit a full bug report,
with preprocessed source if appropriate.
Please include the complete backtrace with any bug report.
See <file:///usr/share/doc/gcc-11/README.Bugs> for instructions.
ninja: build stopped: subcommand failed.
make[1]: *** [Makefile:162: run-ninja] Error 1
make[1]: Leaving directory '/home/andrea/Downloads/qemu-7.1.0-rc3/build'
make: *** [GNUmakefile:11: all] Error 2
```

Configure Output:
[Configure_Output.txt](/uploads/40055846573b79cc2817d5cb338e18c1/Configure_Output.txt)

Compiles on 7.0.0.
Steps to reproduce:
1. Run 'sudo apt purge qemu-kvm qemu-utils libvirt-daemon-system libvirt-clients bridge-utils virt-manager ovmf'
2. Run 'sudo apt-get install git libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev ninja-build' ([Wiki](https://wiki.qemu.org/Hosts/Linux))
3. Additional Packages:
```
sudo apt-get install git-email
sudo apt-get install libaio-dev libbluetooth-dev libcapstone-dev libbrlapi-dev libbz2-dev
sudo apt-get install libcap-ng-dev libcurl4-gnutls-dev libgtk-3-dev
sudo apt-get install libibverbs-dev libjpeg8-dev libncurses5-dev libnuma-dev
sudo apt-get install librbd-dev librdmacm-dev
sudo apt-get install libsasl2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh-dev
sudo apt-get install libvde-dev libvdeplug-dev libvte-2.91-dev libxen-dev liblzo2-dev
sudo apt-get install valgrind xfslibs-dev 

sudo apt-get install libnfs-dev libiscsi-dev
```
4. Build instructions for QEMU:
```
wget https://download.qemu.org/qemu-7.1.0-rc3.tar.xz
tar xvJf qemu-7.1.0-rc3.tar.xz
cd qemu-7.1.0-rc3
./configure
make
```
