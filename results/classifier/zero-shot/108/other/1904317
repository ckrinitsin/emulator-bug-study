graphic: 0.841
other: 0.830
device: 0.819
semantic: 0.812
permissions: 0.806
network: 0.800
socket: 0.792
PID: 0.791
performance: 0.780
debug: 0.763
KVM: 0.748
boot: 0.706
vnc: 0.704
files: 0.701

cpu feature selection is not affected to guest 's cpuid with whpx

On windows with -accel whpx, "-cpu" is ignored without any messages.
Guest recognizes features as same as host's.

Confirmed on v5.2.0-rc1.

I suggest qemu may do,

- Warn with incompatible -cpu options were given.
- Enhance cpuid handling.

Background:
I was investigated mmio and block copy issue in Linux kernel.
I met a problem that Linux went ill for touching mmio with whpx. (not with tcg)
I suspect erms(enhanced rep movs) might trigger.
I tried to mask erms on qemu with -feature,erms, but it was ineffective.

At last, I disabled erms manually, to tweak whpx-all.c to mask erms in cpuid.

FYI, qemu with whpx from/to mmio, "rep movsb" does byte access regardless of erms.
Linux kernel tends to choose not "rep movsq" but "rep movsb" with erms.

Cc'ing Sunil (WHPX maintainer).

On 11/15/20 10:06 AM, Takumi Nakamura wrote:
> Public bug reported:
> 
> On windows with -accel whpx, "-cpu" is ignored without any messages.
> Guest recognizes features as same as host's.
> 
> Confirmed on v5.2.0-rc1.
> 
> I suggest qemu may do,
> 
> - Warn with incompatible -cpu options were given.
> - Enhance cpuid handling.
> 
> Background:
> I was investigated mmio and block copy issue in Linux kernel.
> I met a problem that Linux went ill for touching mmio with whpx. (not with tcg)
> I suspect erms(enhanced rep movs) might trigger.
> I tried to mask erms on qemu with -feature,erms, but it was ineffective.
> 
> At last, I disabled erms manually, to tweak whpx-all.c to mask erms in
> cpuid.
> 
> FYI, qemu with whpx from/to mmio, "rep movsb" does byte access regardless of erms.
> Linux kernel tends to choose not "rep movsq" but "rep movsb" with erms.
> 
> ** Affects: qemu
>      Importance: Undecided
>          Status: New
> 



The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting the bug state to "Incomplete" now.

If the bug has already been fixed in the latest upstream version of QEMU,
then please close this ticket as "Fix released".

If it is not fixed yet and you think that this bug report here is still
valid, then you have two options:

1) If you already have an account on gitlab.com, please open a new ticket
for this problem in our new tracker here:

    https://gitlab.com/qemu-project/qemu/-/issues

and then close this ticket here on Launchpad (or let it expire auto-
matically after 60 days). Please mention the URL of this bug ticket on
Launchpad in the new ticket on GitLab.

2) If you don't have an account on gitlab.com and don't intend to get
one, but still would like to keep this ticket opened, then please switch
the state back to "New" or "Confirmed" within the next 60 days (other-
wise it will get closed as "Expired"). We will then eventually migrate
the ticket automatically to the new system (but you won't be the reporter
of the bug in the new system and thus you won't get notified on changes
anymore).

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

