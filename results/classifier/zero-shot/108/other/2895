graphic: 0.729
performance: 0.646
debug: 0.521
device: 0.435
files: 0.274
semantic: 0.240
vnc: 0.199
PID: 0.187
socket: 0.158
boot: 0.157
network: 0.135
permissions: 0.064
other: 0.030
KVM: 0.023

qemu-system-aarch64: Error: r = HV_BAD_ARGUMENT (0xfae94003, at ../target/arm/hvf/hvf.c:2259)
Description of problem:
When I launch a Linux guest in QEMU with `-accel hvf` + `-gdb "tcp::1234"`, and I try to debug the kernel with `lldb`, QEMU crashes with the following report:

```
qemu-system-aarch64: Error: r = HV_BAD_ARGUMENT (0xfae94003, at ../target/arm/hvf/hvf.c:2259)
```
Steps to reproduce:
1. Run QEMU with `-accel hvf` + `-gdb "tcp::1234"` and a custom kernel (`-kernel Image`)
2. Try to attach using `lldb vmlinux` + `(lldb) gdb-remote 1234`
Additional information:
Debugging QEMU I see the crash is due to the `cpu->accel->fd` file descriptor being `0`:

```
warning: qemu-system-aarch64 was compiled with optimization - stepping may behave oddly; variables may not be available.
frame #4: 0x00000001003dd24c qemu-system-aarch64`hvf_arch_update_guest_debug [inlined] hvf_put_guest_debug_registers(cpu=0x0000000158118000) at hvf.c:2259:9 [opt]
   2256     for (i = 0; i < max_hw_bps; i++) {
   2257         r = hv_vcpu_set_sys_reg(cpu->accel->fd, dbgbcr_regs[i],
   2258                                 env->cp15.dbgbcr[i]);
-> 2259         assert_hvf_ok(r);
   2260         r = hv_vcpu_set_sys_reg(cpu->accel->fd, dbgbvr_regs[i],
   2261                                 env->cp15.dbgbvr[i]);
   2262         assert_hvf_ok(r);
(lldb) print cpu->accel->fd
(hvf_vcpuid) 0
(lldb) print dbgbcr_regs[i]
(const uint16_t) 32773
(lldb) print env->cp15.dbgbcr[i]
(uint64_t) 480
```
