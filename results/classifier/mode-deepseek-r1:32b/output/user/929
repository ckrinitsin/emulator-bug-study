

qemu-user syscall clone fails
Description of problem:
This seems very similar to the issue reported here (https://bugs.launchpad.net/qemu/+bug/1926996). When attempting to perform the clone syscall, an error of -1 is returned where I would expect it to succeed. Running the same executable outside of qemu works as expected.
Steps to reproduce:
1. gcc clone.c
2. qemu-x86_64 a.out
Additional information:
I've tried building with gcc, zig cc, and clang and the output of each works fine when running natively, but running under qemu fails. I originally discovered it when cross compiling to riscv64 but it doesn't seem to be limited to that architecture.

```
// clone.c

#include <linux/sched.h>
#include <sched.h>
#include <sys/syscall.h>
#include <unistd.h>
#include <stdio.h>

int main(void) {

  long pid = syscall( SYS_clone, 0, 0, 0, 0, 0 );

  if (pid < 0) {
    printf( "error %ld\n", pid );
  } else if (pid == 0) {
    printf( "child %ld\n", pid );
  } else {
    printf( "parent %ld\n", pid );
  }

  return 0;
}
```
