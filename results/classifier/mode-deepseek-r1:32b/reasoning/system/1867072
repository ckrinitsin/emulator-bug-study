<think>
Okay, I need to classify this bug report as either 'user-mode' or 'system-mode'. The issue is about the FAR_EL1 register in ARM where tag bits are not being set correctly during data aborts or watchpoints. 

FAR_EL1 is an exception address register used when an exception occurs, such as a data abort. It captures the faulting address. The problem is that even though address tagging is enabled, the tag bits in FAR_EL1 are always cleared.

I remember that ARM Exception Level 1 (EL1) is typically associated with system mode or hypervisor mode in some architectures. EL1 handles exceptions and has higher privileges compared to user-mode which is usually at EL0.

The issue affects how exceptions are handled regarding address tagging, which seems like a low-level feature, likely related to memory management and exception handlingâ€”things that the OS or kernel manages. So this would fall under system operations rather than user applications.

Also, considering QEMU is involved, which emulates hardware and deals with lower-level aspects of the system, it's more aligned with system-mode functions.

So putting it together, this bug relates to how exceptions are processed at a higher privilege level, affecting system operations. Therefore, it's a 'system' mode issue.
</think>

The bug report pertains to an issue with exception handling and address tagging in ARM architecture, specifically involving the FAR_EL1 register which operates at Exception Level 1 (EL1). Since EL1 is associated with higher privileges and is typically used by the operating system kernel or hypervisors for managing exceptions and memory, this issue falls under system-mode operations.

system