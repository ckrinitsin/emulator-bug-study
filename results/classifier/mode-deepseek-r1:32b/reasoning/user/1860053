<think>
Okay, I'm trying to classify this bug report as either user-mode or system-mode related. Let me break it down.

The issue occurs when running a Go application compiled for ppc64le using QEMU's user-mode emulator inside Docker on an AMD64 host provided by Travis CI. The problem is that time functions like NewTicker and Sleep aren't working correctly—specifically, they can't handle granularities smaller than one second.

From the report, it seems Go switched to using vDSO for clock_gettime() in version 1.12 on PowerPC64 architectures. This suggests that the issue is with how QEMU's user-mode emulator handles vDSO calls, particularly clock_gettime(). The fact that it works correctly on actual hardware but not in emulation points towards an issue within the emulator.

The symptoms—like all sleep durations being rounded up to a second—hint at a problem with the timing functions. This could mean that the nanoseconds part of the time is being lost when using vDSO, which isn't the case when making syscalls directly. Since vDSO calls are handled in user space without switching to kernel mode, it's likely an issue within QEMU's emulation of these calls.

Since this is about how the emulator handles specific system calls and their implementations (like vDSO), it falls under user-mode because user-mode emulators handle executing binaries from different architectures on a host OS. System-mode would involve things like hardware emulation, devices, or higher-level privileges, which isn't mentioned here.
</think>

user