<think>
Okay, so I'm looking at this bug report about the instruction 'denbcdq' misbehaving in QEMU. The user provided some test cases where they're running a program on native ppc64le and under QEMU emulation. 

In the native environment, when they run './test-denbcdq', they get certain outputs, but when they run it under QEMU with '-cpu power9', the results are different. It seems like the denbcdq instruction isn't working as expected in QEMU.

The user mentioned that they're confused about endianness and whether the helper function 'helper_denbcdq' is getting the right data, pointing to parts of the code where gen_fprp_ptr is used. They suspect this might be related to how floating-point register pairs are handled.

Now, I need to classify this bug as either 'user-mode' or 'system-mode'. User-mode issues usually relate to how applications run under the emulator, like incorrect instruction execution. System-mode involves lower-level stuff like device emulation, interrupts, and OS interactions.

Since denbcdq is a PowerPC instruction used for decimal operations on floating-point registers, this seems more about how QEMU emulates that specific instruction in userland processes. The test cases don't involve system calls or device drivers but rather application-level code execution. Therefore, it's likely a user-mode issue.
</think>

user