<think>
Okay, so I'm trying to figure out whether this QEMU issue is a user-mode problem or system-mode. Let me start by understanding the problem description.

The user is running two VMs on a Rock Pi 5B, which uses an aarch64 host. One VM is x86-64 using TCG (which I think stands for Tiny Code Generator), and the other is aarch64 using KVM. They're noticing that when they run stress-ng in the x86-64 guest with 8 vCPUs, only one core on the host is maxed out at 100%. But when they do the same test with the aarch64 guest using KVM, all physical cores are utilized. They've also provided some screenshots showing CPU usage.

From what I remember, QEMU can run in different modes: user-mode and system-mode. User-mode is where QEMU emulates a full system but runs as a regular process on the host OS. System-mode uses KVM for hardware acceleration, which allows it to leverage virtualization extensions of the CPU, making it faster.

In this case, the x86-64 guest isn't using KVM because maybe the Rock Pi doesn't support running x86 guests under KVM (since it's an aarch64 host). So QEMU falls back to TCG for emulation. But when they set up multiple vCPUs in this TCG-based VM, only one CPU on the host is maxed out.

I think about how QEMU handles multi-threading with TCG. Maybe TCG isn't designed to use multiple threads effectively, especially when emulating a different architecture. So even though you configure 8 vCPUs, the emulation can't spread across multiple host cores because of some limitation in TCG or how it's implemented on aarch64.

In contrast, KVM-based VMs (like the aarch64 one) can utilize multiple cores because KVM is designed to handle this, using hardware virtualization features that allow each vCPU to run on separate physical cores efficiently.

So the issue seems specific to TCG and how it handles multi-threading for non-native architectures. Since TCG runs in user-mode (as a process), maybe there's a limitation in how it schedules or uses multiple threads when emulating a different architecture. That would mean the problem is related to user-mode QEMU.

I should also consider if this is a known issue. Maybe TCG doesn't support multi-threaded execution for x86-64 guests on aarch64 hosts, which would make sense given that it's more of an emulation layer rather than hardware-accelerated virtualization. So the problem is likely within user-mode QEMU because it can't utilize multiple cores efficiently when emulating a different architecture.
</think>

user