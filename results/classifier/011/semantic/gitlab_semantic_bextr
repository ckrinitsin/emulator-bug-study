semantic: 0.694
graphic: 0.050
device: 0.049
debug: 0.048
other: 0.028
permissions: 0.024
vnc: 0.021
boot: 0.016
PID: 0.015
performance: 0.014
socket: 0.014
files: 0.013
network: 0.010
KVM: 0.005
semantic: 0.759
debug: 0.145
other: 0.020
files: 0.017
performance: 0.012
PID: 0.009
device: 0.008
network: 0.007
permissions: 0.004
socket: 0.004
KVM: 0.004
graphic: 0.004
boot: 0.004
vnc: 0.003

x86 BEXTR semantic bug
Description of problem
The result of instruction BEXTR is different with from the CPU. The value of destination register is different. I think QEMU does not consider the operand size limit.

Steps to reproduce

Compile this code

void main() {
    asm("mov rax, 0x17b3693f77fb6e9");
    asm("mov rbx, 0x8f635a775ad3b9b4");
    asm("mov rcx, 0xb717b75da9983018");
    asm("bextr eax, ebx, ecx");
}

Execute and compare the result with the CPU.

CPU
RAX = 0x5a

QEMU
RAX = 0x635a775a

Additional information
This bug is discovered by research conducted by KAIST SoftSec.
