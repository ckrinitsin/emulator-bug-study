instruction: 0.914
mistranslation: 0.764
graphic: 0.736
device: 0.679
other: 0.555
semantic: 0.442
network: 0.323
assembly: 0.286
socket: 0.242
boot: 0.214
vnc: 0.198
KVM: 0.114

incorrect handling of [r32] address (long mode)

while executing in Long Mode (x86-64) instructions such as

mov eax,[r15d]

end up executing as

mov eax,[r15]

according to x86 programmer manuals the behavior of using the Address-Size override (in long mode) is supposed to ignore the high 32bits of the register. I use this fact in my operating system to reduce register usage (the high 32 bits of r15 holds other data). consequently a general protection exception occurs since the memory address isn't "canonical". this error doesn't always appear since the high 32 bits might not be zero in those conditions.

You are correct about what the instruction is supposed to do. That said the behaviour you describe is not reproducible. Which version of QEMU are you using? Could you please send a testcase?

[Expired for QEMU because there has been no activity for 60 days.]

