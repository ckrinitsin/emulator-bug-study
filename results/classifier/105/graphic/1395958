graphic: 0.923
device: 0.825
instruction: 0.798
semantic: 0.633
network: 0.523
mistranslation: 0.466
vnc: 0.449
socket: 0.436
boot: 0.435
other: 0.416
assembly: 0.208
KVM: 0.092

boost managed_shared_memory segment on arm emulator crashes

The following code segment crashes when run:

#include <boost/interprocess/managed_shared_memory.hpp>
#include <boost/interprocess/allocators/allocator.hpp>
#include <boost/interprocess/containers/map.hpp>
#include <boost/interprocess/containers/vector.hpp>
#include <boost/interprocess/containers/string.hpp>

using namespace boost::interprocess;

int main(int argc, char** argv)
{
    namespace bi = boost::interprocess;
    const char* name = "foobar";
    bi::shared_memory_object::remove(name);
    bi::managed_shared_memory segment(bi::create_only, name, 10 * 1024);
}

using qemu-arm-static
qemu-arm version 1.5.0 (Debian 1.5.0-2013.06+git74+20130802+ef1b0ae-3linaroprecise1), Copyright (c) 2003-2008 Fabrice Bellard


Any idea?

 uname -a
Linux ratin-dev 2.6.32 #25~precise1-Ubuntu SMP Thu Jan 30 17:39:31 UTC 2014 armv7l armv7l armv7l GNU/Linux



remote GDB (via local host )
QEMU: Terminated via GDBstub
root@ratin-dev:/usr/local/bin# qemu-arm-static -g 1234 /usr/local/bin/test
terminate called after throwing an instance of 'boost::interprocess::interprocess_exception'
  what():  Function not implemented


(gdb) 
14	    bi::managed_shared_memory segment(bi::create_only, name, 10 * 1024);
(gdb) 

Program received signal SIGABRT, Aborted.
0xf661d706 in ?? () from /lib/arm-linux-gnueabihf/libc.so.6
(gdb) quit


This test case works OK for me with current QEMU head-of-git, so I think we've fixed this bug (it was probably a missing-syscall, guessing from the "function not implemented" text in the exception.)


