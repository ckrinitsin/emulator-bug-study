instruction: 0.784
graphic: 0.587
device: 0.569
vnc: 0.526
network: 0.423
semantic: 0.395
socket: 0.363
boot: 0.320
KVM: 0.249
mistranslation: 0.200
assembly: 0.167
other: 0.162

Performance improvement when using "QEMU_FLATTEN" with softfloat type conversions

Attached below is a matrix multiplication program for double data
types. The program performs the casting operation "(double)rand()"
when generating random numbers.

This operation calls the integer to float softfloat conversion
function "int32_to_float_64".

Adding the "QEMU_FLATTEN" attribute to the function definition
decreases the instructions per call of the function by about 63%.

Attached are before and after performance screenshots from
KCachegrind.







Confirmed, although "65% decrease" is on 0.44% of the total
execution for this test case, so the decrease isn't actually
noticeable.

Nevertheless, it's a simple enough change.


This is an automated cleanup. This bug report has been moved to QEMU's
new bug tracker on gitlab.com and thus gets marked as 'expired' now.
Please continue with the discussion here:

 https://gitlab.com/qemu-project/qemu/-/issues/134


