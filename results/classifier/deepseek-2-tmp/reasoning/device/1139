<think>
Alright, so I'm trying to figure out how to classify this bug report. The user is talking about using QEMU's drive-backup command with NBD (Network Block Device) in two different ways and noticing a significant performance difference.

First, they exported an image via NBD from another server and used it for backup. They noticed a warning message about the target block device not providing information about the block size, which defaulted to 65536 bytes. The backup speed was around 30MBps.

Then, they tried exporting the same image via NBD to a local /dev/nbd0 device on their QEMU host. This time, there was no warning, and the backup speed increased to about 100MBps, limited by network speeds but much faster than before.

The user's main question is how to achieve the higher performance without connecting through a network device, essentially using a local NBD device for faster backups.

Looking at the categories provided: mistranslation, assembly, other, device, graphic, socket, network, KVM, boot, vnc, debug, files, permissions, performance, kernel, peripherals, hypervisor.

The issue seems related to block devices and their handling during backup. The problem is about the performance difference when using NBD over a network versus locally. This likely involves how QEMU interacts with block devices, specifically NBD, which falls under 'device' category. Since it's not directly about translation errors or assembly issues but more about device behavior and performance, I think 'device' is the right category.
</think>

The issue relates to block device handling and performance when using NBD, particularly in how QEMU interacts with local versus remote devices. This falls under the 'device' category.

**device**