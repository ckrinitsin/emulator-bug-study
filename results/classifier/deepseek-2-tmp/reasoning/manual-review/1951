<think>
Okay, so I'm trying to run QEMU on my system without using sudo because I don't like running things as root unless necessary. But when I do, I get these error messages about libusbDetachKernelDriver returning -3 with an ACCESS error. Then it tries to check if the kernel driver is active and gets NOT_FOUND errors multiple times. 

When I run QEMU as root using sudo, the errors change a bit but it seems to work because the devices attach properly. The output shows that the USB devices are recognized correctly, like the PlutoSDR and the Mass Storage device. So why does this only work when I'm running as root?

I remember reading an issue on libusb's GitHub where someone mentioned similar problems with QEMU builds not having proper entitlements. Maybe QEMU needs certain permissions or capabilities to access USB devices without being run as root.

So, what can I do here? Well, the user suggested that QEMU should at least inform users that they need sudo privileges. But ideally, QEMU shouldn't require running as root at all. How can that be achieved?

I think there are a few possibilities:

1. **Running QEMU with sudo**: This works but isn't ideal for security reasons.

2. **Using PolicyKit or polkit**: Maybe setting up rules so that non-root users can access certain USB devices without needing full sudo privileges.

3. **Building QEMU with proper entitlements**: If the issue is with how QEMU is built, maybe compiling it from source with the necessary permissions could help.

4. **Adjusting udev rules**: Perhaps modifying udev to allow my user account to access specific USB devices without being root.

I'm not sure which approach is best. I should probably look into PolicyKit because it's designed for fine-grained permission control. Maybe I can set up a rule where QEMU is allowed to access the USB devices without needing root privileges.

Alternatively, if building from source is an option, maybe there are specific configure flags or steps that need to be taken to include necessary libraries or entitlements so that QEMU doesn't require sudo for USB device access.

Another thought: Maybe the USB drivers in QEMU aren't properly handling non-root users. Perhaps adding a capability like CAP_SYS_ADMIN or something similar could allow it to detach kernel drivers without needing full root privileges.

I should also check if my system has any specific policies regarding USB device access. For example, some distributions might restrict USB device access to prevent unauthorized usage, which would require policy changes to allow QEMU to function properly.

In summary, I need to figure out why running as non-root doesn't work and how to fix it. It seems like the issue is with QEMU's permissions when not run as root, so exploring PolicyKit or adjusting udev rules might be the way to go.
</think>

To resolve the issue of running QEMU without sudo while accessing USB devices, follow these steps:

1. **Understand the Problem**: The errors indicate that QEMU lacks sufficient permissions when not run as root. Running as root works because it bypasses user权限 restrictions.

2. **Option 1: Use PolicyKit**:
   - Install PolicyKit if not already installed.
   - Create a `.polkit` file to grant non-root users the ability to access USB devices for QEMU.
     ```bash
     polkit policy --add /usr/share/polkit/rules.d/50-qemu.rules
     ```
   - The rule might look like:
     ```xml
     <rules>
       <rule match="SystemGroup=system.slice; Name=qemu-system-aarch64" prefix="/org/freedesktop/PolicyKit1/actions/com.example qemu">
         <description>Run QEMU as non-root</description>
         <message>Authentication is required to run QEMU as non-root</message>
         <icon_name>Utilities-other-sudo</icon_name>
         <permissions>
           <allow>
             <action>org.freedesktop.PolicyKit1.AuthenticateAsRoot</action>
             <allow/>
           </allow>
         </permissions>
       </rule>
     </rules>
     ```
   - Restart the session or log out and back in for changes to take effect.

3. **Option 2: Adjust Udev Rules**:
   - Modify udev rules to allow your user account access to specific USB devices.
     ```bash
     sudo nano /etc/udev/rules.d/99-usb-permissions.rules
     ```
   - Add rules like:
     ```udevrules
     # For Analog Devices PlutoSDR
     ACTION=="add", ATTRS{manufacturer}=="Analog Devices, Inc.", GROUP="users", MODE="0664"
     
     # For Mass Storage devices
     ACTION=="add", SUBSYSTEM=="usb", KERNEL=="sd*|usb-storage*", GROUP="users", MODE="0664"
     ```
   - Reload udev rules:
     ```bash
     sudo udevadm control --reload-rules && sudo udevadm trigger
     ```

4. **Option 3: Build QEMU with Proper Entitlements**:
   - If building from source, ensure that the build includes necessary capabilities.
   - Configure QEMU to include USB device access without requiring root.

5. **Testing**:
   - After implementing one of the options, try running QEMU again as a non-root user to see if the errors persist or if it works correctly now.

By implementing one of these solutions, you should be able to run QEMU without needing sudo while maintaining proper permissions for USB device access.