<think>
Alright, I'm trying to figure out why my QEMU isn't working properly when I run certain systems. So, from what I understand, Luigi had issues with running emulated machines like i386 or old-world Macs on his G5 quad and p5020 machine using QEMU without KVM enabled. But when he used KVM, it worked fine. That suggests that the problem might be related to whether QEMU is using hardware virtualization (KVM) or just emulating everything in software.

He mentioned that with all softmmu systems like i386-softmmu, the issue occurs, but when using something like ppc64 with KVM, it doesn't. So maybe the problem isn't with QEMU itself but how the host is handling the emulation without KVM.

Looking back at his messages, he tried different QEMU versions. He found that 2.6.2 works without issues, but later versions like 2.7.x had problems. That makes me think that something changed between these versions that introduced a regression when running in software mode.

He also mentioned that the problem was with all emulated systems except those using KVM. So perhaps there's a bug in QEMU 2.6.0 or later that causes this behavior when not using KVM. The error message he received about executing code outside RAM or ROM suggests that the guest OS is trying to run code it shouldn't, which might point to issues in how the emulator handles certain instructions or memory accesses.

I think I should check if there are any known issues between these versions related to emulation without KVM. Maybe a change in how QEMU initializes or handles the CPU modes could be causing this. It's also possible that there was a regression introduced when optimizing or refactoring parts of the code.

He tried using bisect to find where the issue started, but ended up with a UI merge commit which might not be relevant. That makes me wonder if the problem isn't directly in the emulated machine code but perhaps elsewhere in QEMU's initialization process.

I should also consider whether there are any missing or misconfigured components when running without KVM. For example, ensuring that all necessary drivers or modules are loaded properly. Or maybe there's a dependency on certain host features that aren't being met when not using KVM.

In summary, the issue seems to stem from QEMU versions 2.6.0 and above in software-only mode failing to run emulated machines correctly, while older versions like 2.6.2 work fine. This points towards a regression introduced after 2.6.2 that affects how certain emulated systems are handled without hardware virtualization support.
</think>

The issue you're experiencing is likely due to a regression in QEMU between version 2.6.2 and later versions when running in software-only mode (without KVM). Here's a concise breakdown:

1. **Problem Identification**: The problem occurs with emulated systems like i386 or old-world Macs on your G5 quad and p5020 machine when using QEMU without KVM, but works fine with KVM enabled.

2. **Version Impact**: QEMU versions 2.6.0 and above (including 2.7.x) exhibit this issue in software mode, while version 2.6.2 runs correctly. This suggests a regression was introduced after 2.6.2.

3. **Potential Causes**:
   - Changes in how QEMU initializes or handles CPU modes.
   - Issues with memory management or instruction handling specific to certain emulated systems.

4. **Solution**:
   - Use QEMU version 2.6.2 for reliable operation without KVM.
   - If you need a newer version, consider checking out specific commits from the git repository to identify the exact point where the regression occurred and apply necessary patches.

By using the confirmed working version (2.6.2) or investigating the changes between versions to pinpoint the issue, you can resolve the problem effectively.