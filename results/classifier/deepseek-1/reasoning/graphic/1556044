<think>
Okay, so I need to classify this bug report about Redox GUI hanging with 100% CPU on ARM when using QEMU. Let me read through the details carefully.

The user mentioned that booting into Redox OS CLI works fine with qemu-system-i386, but starting the GUI causes it to hang and use all the CPU. They suspect it's related to mouse detection. The issue is specific to ARM, as the same image runs smoothly on x86.

Looking at the possible categories: assembly, device, graphic, network, etc. Since the problem is with the graphical interface, "graphic" seems relevant. The GUI using 100% CPU could be due to issues in how QEMU handles graphics or mouse input under ARM.

I don't think it's a mistranslation because that usually relates to incorrect semantic mapping in user-mode assembly. It doesn't seem like an assembly lowering issue either. Performance is a factor, but the primary issue is with the graphical interface not handling resources correctly.

So, considering all this, the category should be "graphic."
</think>

graphic