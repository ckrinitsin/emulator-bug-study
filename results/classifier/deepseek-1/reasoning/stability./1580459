<think>
Alright, so I'm trying to figure out why my host system is locking up when I shut down a Windows 10 guest VM that's using passthrough with an Nvidia GPU. From what I've read in the forums and some guides, there seems to be a common issue where enabling MSI (Message Signaled Interrupts) on certain devices can help prevent this lockup. But I'm not entirely sure why this is happening or how to fix it properly.

First off, I know that PCIe devices can use either Line-Interrupt Mode or MSI for generating interrupts. MSI is supposed to be more efficient because it allows the CPU to process multiple interrupts in a single cycle, reducing latency and improving performance. However, when I'm using passthrough with a GPU, especially for tasks like gaming or mining, which are resource-intensive, maybe the way the guest OS handles these interrupts causes issues when releasing control back to the host.

I remember reading that vfio-pci, which is used for device passthrough in KVM, disables MSI by default for some devices. That might be why my GPU is using Line-Interrupt Mode, leading to problems during shutdown or high load. If I can force all MSI-capable devices to use MSI instead of the default Line-Interrupt Mode, maybe that would prevent the lockup.

But how do I check if my devices are using MSI or not? The lspci command seems useful here. By running `lspci -v`, I can see the interrupt modes for each device. For example, if it shows "MSI: Enable-", that means MSI is enabled. But some users have mentioned that after setting up VFIO and Windows 10 as the guest, they noticed that their devices revert to Line-Interrupt Mode when not in use.

Wait, so even though I set them to use MSI, maybe under certain conditions, like when the device isn't actively used by the VM, it reverts? That could explain why after a long time or during shutdown, the host locks up. It's because the GPU goes back to Line-Interrupt Mode, which causes issues when releasing control.

I also read that Windows updates can sometimes revert these changes. So even if I enable MSI in the guest OS, an update might turn it off again. That means I need to regularly check and re-enable MSI in the registry, which sounds cumbersome but necessary.

Another point is about the NVIDIA drivers. Updating them might disable MSI as well. If I don't keep my drivers updated, I could be missing out on bug fixes that might resolve this issue. But then again, if updates break the MSI setting, it's a catch-22 situation.

I'm thinking of trying to force all devices to use MSI. How can I do that? Maybe through the vfio configuration in the host OS or by modifying the guest's settings. There are some guides online about editing the VFIO configuration files to enable MSI by default for certain devices.

Also, if lspci shows that the GPU is in Line-Interrupt Mode when not used by the VM, maybe I can tweak the vfio-pci module parameters in the kernel to keep them in MSI mode regardless of usage. But I'm not sure what those parameters are or how effective they might be.

Another thought: since some users have resolved this issue by switching their GPU to MSI mode within the guest OS, perhaps that's a more direct solution. Maybe there's a setting in Windows or through NVIDIA Control Panel that forces the GPU to use MSI instead of Line-Interrupts even when idle.

I should also consider if my hardware is up-to-date. My host has an AMD RX580 and the guest uses an Nvidia GTX1070. I wonder if newer drivers or firmware updates could have fixed this issue. It might be worth checking for any available updates on both the host and guest sides.

Lastly, backing up my system before making these changes is crucial. If something goes wrong, I don't want to end up with a non-bootable system. Maybe using a live USB or an external drive as a recovery option would be a good idea.

In summary, I need to:
1. Check the current interrupt mode of my GPU and other devices.
2. Force them to use MSI if possible, either through host configuration or guest settings.
3. Ensure that updates don't revert these changes by regularly checking and reapplying settings if necessary.
4. Keep all drivers and firmware updated to the latest versions.

I'll start by running `lspci -v` to see which devices are using what mode. If my GPU is in Line-Interrupt Mode, I'll look into enabling MSI either through vfio-pci settings or within Windows. Also, I'll make sure to check for any driver updates and perhaps disable automatic driver reinstalls that might revert the changes.
</think>

To resolve the host lockup issue when shutting down a Windows 10 guest with an Nvidia GPU passthrough, follow these steps:

### Step-by-Step Explanation:

1. **Check Current Interrupt Mode:**
   - Open a terminal or command prompt and run `lspci -v` to list all PCIe devices.
   - Identify the GPU (or other relevant devices) under the "Kernel driver" section. Look for lines like "Capabilities: [75] MSI: Enable-" which indicate if MSI is enabled.

2. **Enable MSI in Host Configuration:**
   - If your GPU uses Line-Interrupt Mode, you need to force it to use MSI.
   - Edit the VFIO configuration file to enable MSI by default:
     ```bash
     sudo nano /etc/vfio/passthrough.conf
     ```
     Add or modify the relevant device section with `msi=1`.

3. **Set PCIe Link Power Management:**
   - Ensure that PCIe devices do not enter low power states, which can cause issues during wake-up:
     ```bash
     echo "pcie_link_state" >> /etc/modules-load.d/vfio.conf
     ```

4. **Modify Kernel Parameters (Optional):**
   - Add the following parameters to `/etc/sysfs.conf` or directly via `sysfsutils` to manage device states:
     ```bash
     echo "pci=msi" > /proc/device-tree/
     ```

5. **Enable MSI in Guest OS:**
   - In the Windows guest, ensure that the GPU is configured to use MSI. This can be done through the NVIDIA Control Panel or by editing registry settings if necessary.

6. **Update Drivers and Firmware:**
   - Install the latest NVIDIA drivers on both the host and guest systems.
   - Update the host's firmware and BIOS to ensure compatibility and stability.

7. **Prevent Driver Reversions:**
   - In Windows, disable automatic driver updates for the GPU or regularly check and reapply MSI settings after updates.

8. **Test and Verify:**
   - After making these changes, restart your VM and test by shutting it down normally.
   - Monitor the system behavior to ensure no lockups occur during shutdown or under load.

### Final Answer:
By ensuring that all relevant PCIe devices use MSI mode in both the host and guest configurations, you can prevent the host from locking up when the guest VM is shut down. This involves checking device modes, modifying configuration files, and keeping drivers updated. Regular monitoring and adjustments may be necessary to maintain stability.