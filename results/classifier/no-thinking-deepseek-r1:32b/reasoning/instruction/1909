The problem occurs during the execution of a test program under QEMU 8.0.0 when using the `--coverage` option. The segfault is traced to an attempt to increment a gcov counter, specifically at address `0x4fe9d0`, which corresponds to `__llvm_gcov_ctr.5`. The instruction causing the issue is `str x8, [x9, #2512]`, where `$x8` holds the value 1 and `$x9` points to `0x4fe9d0 - 2512 = 0x4fe9d0 - 0x9c0 = 0x4f40d0`. The memory at this address is mapped but appears uninitialized.

When running the same test program under QEMU 6.2.0, it does not segfault at this point, though a different segfault occurs later due to a bug in the test program itself.

This issue seems related to how QEMU handles certain memory operations or instructions when coverage instrumentation is enabled. The difference between versions suggests that a change in QEMU's handling of such operations might have introduced the regression.

Given the context provided, the most likely category for this bug is **instruction** since it involves an instruction execution causing a segfault during program runtime.

instruction