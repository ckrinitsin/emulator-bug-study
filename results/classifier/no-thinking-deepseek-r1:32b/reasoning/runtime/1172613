The issue appears to be related to how QEMU handles the dynamic linker and shared libraries on different architectures. Specifically, it seems that certain architectures (like powerpc64 and sparc64) are not correctly locating or loading the required shared libraries when running programs under QEMU.

Upon closer inspection:

- For **powerpc64**, specifying the linker explicitly with `--library-path` works but without it, there's an error.
- For **sparc64**, the program crashes with a segmentation fault unless the correct linker path is provided.

This suggests that the problem lies in how QEMU sets up the environment for these architectures during runtime. It doesn't automatically find the necessary libraries and requires manual intervention to specify their paths, unlike the **armhf** case where it works correctly after specifying `--library-path`.

Since this issue affects the runtime execution of programs by failing to locate required shared libraries without user干预, it falls under:

runtime