The problem is related to how attributes are applied in C++. The `G_NORETURN` macro expands to `[[noreturn]]`, which is an attribute specifier. In C++, attribute specifiers must appear in specific positions, typically before the return type or after certain keywords like `extern`. Placing `extern` after `G_NORETURN` causes a syntax error because it's not valid for the attribute to come after the storage class specifier.

To fix this, you should switch the order of `extern` and `G_NORETURN`, placing the attribute before `extern`.

This issue is related to **instruction** as it involves incorrect usage of language features leading to compilation errors.