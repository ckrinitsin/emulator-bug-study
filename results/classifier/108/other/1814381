other: 0.864
debug: 0.859
permissions: 0.858
semantic: 0.854
socket: 0.851
network: 0.845
device: 0.842
graphic: 0.842
KVM: 0.839
performance: 0.837
vnc: 0.837
PID: 0.815
boot: 0.806
files: 0.796

qemu can't resolve ::1 when no network is available

I'm not sure if this is a qemu thing or a getaddrinfo/glibc thing, or
even just something about my laptop.  However we have a test failure
in nbdkit which only occurs when my laptop is not connected to wifi or
other networking.  It boils down to:

  $ qemu-img info --image-opts "file.driver=nbd,file.host=::1,file.port=1234"
  qemu-img: Could not open 'file.driver=nbd,file.host=::1,file.port=1234': addre
ss resolution failed for ::1:1234: Address family for hostname not supported

In a successful case it should connect to a local NBD server on port
1234, but if you don't have that you will see:

  qemu-img: Could not open 'file.driver=nbd,file.host=::1,file.port=1234': Faile
d to connect socket: Connection refused

I can ‘ping6 ::1’ fine.

It also works if I replace ‘::1’ with ‘localhost6’.

My /etc/hosts contains:

127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

ping6 output when the network is not connected:

$ ping6 ::1
PING ::1(::1) 56 data bytes
64 bytes from ::1: icmp_seq=1 ttl=64 time=0.082 ms
64 bytes from ::1: icmp_seq=2 ttl=64 time=0.092 ms
64 bytes from ::1: icmp_seq=3 ttl=64 time=0.089 ms
^C
--- ::1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 55ms
rtt min/avg/max/mdev = 0.082/0.087/0.092/0.011 ms


ip output when the network is not connected:

$ ip a show scope host
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: enp0s31f6: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
    link/ether e8:6a:64:5d:2c:66 brd ff:ff:ff:ff:ff:ff
3: wlp61s0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc mq state DOWN group default qlen 1000
    link/ether 1e:2b:b1:0c:99:ef brd ff:ff:ff:ff:ff:ff
5: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc fq_codel master virbr0 state DOWN group default qlen 1000
    link/ether 52:54:00:72:04:db brd ff:ff:ff:ff:ff:ff


The logic in util/qemu-sockets.c is very complicated, containing workarounds
for all sorts of broken/obsolete GAI implementations, so it's hard to tell
what's going on there.

The QEMU project is currently considering to move its bug tracking to another system. For this we need to know which bugs are still valid and which could be closed already. Thus we are setting older bugs to "Incomplete" now.
If you still think this bug report here is valid, then please switch the state back to "New" within the next 60 days, otherwise this report will be marked as "Expired". Or mark it as "Fix Released" if the problem has been solved with a newer version of QEMU already. Thank you and sorry for the inconvenience.

[Expired for QEMU because there has been no activity for 60 days.]

