device: 0.799
performance: 0.663
network: 0.623
vnc: 0.598
PID: 0.530
socket: 0.510
files: 0.464
semantic: 0.449
permissions: 0.428
graphic: 0.427
boot: 0.402
debug: 0.387
other: 0.300
KVM: 0.247

Sparc: fdtox/fqtox instructions incorrectly select destination register
Description of problem:
This bug report is mostly for informational purposes as I will be posting a fix for the bug.

The `fdtox` and `fqtox` instructions incorrectly select the destination register when the destination register is higher than `f31`.
Steps to reproduce:
1. Install Sparc cross compiler `gcc-12-sparc64-linux-gnu`(in Debian)
2. Compile the test program using `sparc64-linux-gnu-gcc-12 -m64 -o test_program -static test_program.c`
3. Run the test program using `qemu-sparc64-static ./test_program`
4. Expected output is 60. Prints 0 instead.
Additional information:
Test program to test the issue:

```c
#include <stdio.h>

int main(int argc, char** argv) {
    long long truncated = 0;
    __asm__("fdtox %0,%%f32\n\t" :: "f"(60.0));
    __asm__("fmovd %%f32,%0\n\t" : "=f"(truncated));
    printf("%lld\n", truncated);
    return 0;
}
```

The issue is caused by the commit 0bba7572d4. Where certain changes were made in the way destination registers are selected(moving the DFPREG/QFPREG to decodetree).
