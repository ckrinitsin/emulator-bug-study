permissions: 0.836
KVM: 0.732
vnc: 0.730
other: 0.718
debug: 0.700
performance: 0.692
semantic: 0.691
socket: 0.684
boot: 0.670
network: 0.663
graphic: 0.652
device: 0.633
PID: 0.623
files: 0.561

Ubuntu18.04:POWER9:DD2.2 - Unable to start a KVM guest with default machine type(pseries-bionic) complaining "KVM implementation does not support Transactional Memory, try cap-htm=off" (kvm)

== Comment: #0 - Satheesh Rajendran <email address hidden> - 2018-02-23 08:31:06 ==
---Problem Description---
libvirt unable to start a KVM guest complaining about cap-htm machine property to be off

Host Env:
# lscpu
Architecture:        ppc64le
Byte Order:          Little Endian
CPU(s):              160
On-line CPU(s) list: 0-159
Thread(s) per core:  4
Core(s) per socket:  20
Socket(s):           2
NUMA node(s):        2
Model:               2.2 (pvr 004e 1202)
Model name:          POWER9 (raw), altivec supported
CPU max MHz:         3800.0000
CPU min MHz:         2166.0000
L1d cache:           32K
L1i cache:           32K
L2 cache:            512K
L3 cache:            10240K
NUMA node0 CPU(s):   0-79
NUMA node8 CPU(s):   80-159

ii  qemu-kvm                                      1:2.11+dfsg-1ubuntu2                 ppc64el      QEMU Full virtualization on x86 hardware

ii  libvirt-bin                                   4.0.0-1ubuntu3                       ppc64el      programs for the libvirt library

# lsmcode
Version of System Firmware : 
 Product Name          : OpenPOWER Firmware
 Product Version       : open-power-SUPERMICRO-P9DSU-V1.03-20180205-imp
 Product Extra         : 	occ-577915f
 Product Extra         : 	skiboot-v5.9-240-g081882690163-pcbedce4
 Product Extra         : 	petitboot-v1.6.6-p019c87e
 Product Extra         : 	sbe-095e608
 Product Extra         : 	machine-xml-fb5f933
 Product Extra         : 	hostboot-9bfb201
 Product Extra         : 	linux-4.14.13-openpower1-p78d7eee


 
Contact Information = <email address hidden> 
 
---uname output---
4.15.0-10-generic
 
Machine Type = power9 boston 2.2 (pvr 004e 1202) 
 
---Debugger---
A debugger is not configured
 
---Steps to Reproduce---
 1. Boot a guest from libvirt with default pseries machine type or pseries-bionic

/usr/bin/virt-install --connect=qemu:///system --hvm --accelerate --name 'virt-tests-vm1' --machine pseries --memory=32768 --vcpu=32,sockets=1,cores=32,threads=1 --import --nographics --serial pty --memballoon model=virtio --controller type=scsi,model=virtio-scsi --disk path=/var/lib/libvirt/images/workspace/runAvocadoFVTTest/avocado-fvt-wrapper/data/avocado-vt/images/ubuntu-18.04-ppc64le.qcow2,bus=scsi,size=10,format=qcow2 --network=bridge=virbr0,model=virtio,mac=52:54:00:77:78:79 --noautoconsole
WARNING  No operating system detected, VM performance may suffer. Specify an OS with --os-variant for optimal results.

Starting install...
ERROR    internal error: process exited while connecting to monitor: ,id=scsi0-0-0-0,bootindex=1 -netdev tap,fd=24,id=hostnet0,vhost=on,vhostfd=26 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:77:78:79,bus=pci.0,addr=0x1 -chardev pty,id=charserial0 -device spapr-vty,chardev=charserial0,id=serial0,reg=0x30000000 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x4 -msg timestamp=on
2018-02-23T14:21:11.081809Z qemu-system-ppc64: KVM implementation does not support Transactional Memory, try cap-htm=off
Domain installation does not appear to have been successful.
If it was, you can restart your domain by running:
  virsh --connect qemu:///system start virt-tests-vm1
otherwise, please restart your installation.

2. Fails to boot..

Note: if we specify machine type as pseries=2.12 it boots fine like below

/usr/bin/virt-install --connect=qemu:///system --hvm --accelerate --name 'virt-tests-vm1' --machine pseries-2.12 --memory=32768 --vcpu=32,sockets=1,cores=32,threads=1 --import --nographics --serial pty --memballoon model=virtio --controller type=scsi,model=virtio-scsi --disk path=/var/lib/libvirt/images/workspace/runAvocadoFVTTest/avocado-fvt-wrapper/data/avocado-vt/images/ubuntu-18.04-ppc64le.qcow2,bus=scsi,size=10,format=qcow2 --network=bridge=virbr0,model=virtio,mac=52:54:00:77:78:79 --noautoconsole
WARNING  No operating system detected, VM performance may suffer. Specify an OS with --os-variant for optimal results.

qemu-cmd line:

libvirt+   4283      1 99 09:26 ?        00:00:38 qemu-system-ppc64 -enable-kvm -name guest=virt-tests-vm1,debug-threads=on -S -object secret,id=masterKey0,format=raw,file=/var/lib/libvirt/qemu/domain-4-virt-tests-vm1/master-key.aes -machine pseries-2.12,accel=kvm,usb=off,dump-guest-core=off -m 32768 -realtime mlock=off -smp 32,sockets=1,cores=32,threads=1 -uuid 108ac2b5-e8b2-4399-a925-a707e8020871 -display none -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/domain-4-virt-tests-vm1/monitor.sock,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc -no-shutdown -boot strict=on -device qemu-xhci,id=usb,bus=pci.0,addr=0x3 -device virtio-scsi-pci,id=scsi0,bus=pci.0,addr=0x2 -drive file=/var/lib/libvirt/images/workspace/runAvocadoFVTTest/avocado-fvt-wrapper/data/avocado-vt/images/ubuntu-18.04-ppc64le.qcow2,format=qcow2,if=none,id=drive-scsi0-0-0-0 -device scsi-hd,bus=scsi0.0,channel=0,scsi-id=0,lun=0,drive=drive-scsi0-0-0-0,id=scsi0-0-0-0,bootindex=1 -netdev tap,fd=24,id=hostnet0,vhost=on,vhostfd=26 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:77:78:79,bus=pci.0,addr=0x1 -chardev pty,id=charserial0 -device spapr-vty,chardev=charserial0,id=serial0,reg=0x30000000 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x4 -msg timestamp=on

 
Userspace tool common name: ii  libvirt-bin                                   4.0.0-1ubuntu3                       ppc64el      programs for the libvirt library 
 
The userspace tool has the following bit modes: both 

Userspace rpm: ii  libvirt-bin                                   4.0.0-1ubuntu3                       ppc64el      programs for the libvirt library 

Userspace tool obtained from project website:  na 
 
*Additional Instructions for <email address hidden>: 
-Post a private note with access information to the machine that the bug is occuring on.
-Attach ltrace and strace of userspace application.

== Comment: #1 - Satheesh Rajendran <email address hidden> - 2018-02-23 08:35:17 ==
vm qemu log for failed and passed cases:

Failed:(pseries-bionic)
2018-02-23 14:21:10.806+0000: starting up libvirt version: 4.0.0, package: 1ubuntu3 (Christian Ehrhardt <email address hidden> Mon, 19 Feb 2018 14:18:44 +0100), qemu version: 2.11.1(Debian 1:2.11+dfsg-1ubuntu2), hostname: ltc-boston8.aus.stglabs.ibm.com
LC_ALL=C PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin QEMU_AUDIO_DRV=none /usr/bin/kvm -name guest=virt-tests-vm1,debug-threads=on -S -object secret,id=masterKey0,format=raw,file=/var/lib/libvirt/qemu/domain-3-virt-tests-vm1/master-key.aes -machine pseries-bionic,accel=kvm,usb=off,dump-guest-core=off -m 32768 -realtime mlock=off -smp 32,sockets=1,cores=32,threads=1 -uuid 36c37d3b-fb24-4350-94f9-3271b257f75c -display none -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/domain-3-virt-tests-vm1/monitor.sock,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc -no-shutdown -boot strict=on -device qemu-xhci,id=usb,bus=pci.0,addr=0x3 -device virtio-scsi-pci,id=scsi0,bus=pci.0,addr=0x2 -drive file=/var/lib/libvirt/images/workspace/runAvocadoFVTTest/avocado-fvt-wrapper/data/avocado-vt/images/ubuntu-18.04-ppc64le.qcow2,format=qcow2,if=none,id=drive-scsi0-0-0-0 -device scsi-hd,bus=scsi0.0,channel=0,scsi-id=0,lun=0,drive=drive-scsi0-0-0-0,id=scsi0-0-0-0,bootindex=1 -netdev tap,fd=24,id=hostnet0,vhost=on,vhostfd=26 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:77:78:79,bus=pci.0,addr=0x1 -chardev pty,id=charserial0 -device spapr-vty,chardev=charserial0,id=serial0,reg=0x30000000 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x4 -msg timestamp=on
2018-02-23T14:21:10.909242Z qemu-system-ppc64: -chardev pty,id=charserial0: char device redirected to /dev/pts/1 (label charserial0)
2018-02-23T14:21:11.081809Z qemu-system-ppc64: KVM implementation does not support Transactional Memory, try cap-htm=off
2018-02-23 14:21:18.857+0000: shutting down, reason=failed


Passed:(pseries-2.12)
2018-02-23 14:26:07.047+0000: starting up libvirt version: 4.0.0, package: 1ubuntu3 (Christian Ehrhardt <email address hidden> Mon, 19 Feb 2018 14:18:44 +0100), qemu version: 2.11.1(Debian 1:2.11+dfsg-1ubuntu2), hostname: ltc-boston8.aus.stglabs.ibm.com
LC_ALL=C PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin QEMU_AUDIO_DRV=none /usr/bin/kvm -name guest=virt-tests-vm1,debug-threads=on -S -object secret,id=masterKey0,format=raw,file=/var/lib/libvirt/qemu/domain-4-virt-tests-vm1/master-key.aes -machine pseries-2.12,accel=kvm,usb=off,dump-guest-core=off -m 32768 -realtime mlock=off -smp 32,sockets=1,cores=32,threads=1 -uuid 108ac2b5-e8b2-4399-a925-a707e8020871 -display none -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/domain-4-virt-tests-vm1/monitor.sock,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc -no-shutdown -boot strict=on -device qemu-xhci,id=usb,bus=pci.0,addr=0x3 -device virtio-scsi-pci,id=scsi0,bus=pci.0,addr=0x2 -drive file=/var/lib/libvirt/images/workspace/runAvocadoFVTTest/avocado-fvt-wrapper/data/avocado-vt/images/ubuntu-18.04-ppc64le.qcow2,format=qcow2,if=none,id=drive-scsi0-0-0-0 -device scsi-hd,bus=scsi0.0,channel=0,scsi-id=0,lun=0,drive=drive-scsi0-0-0-0,id=scsi0-0-0-0,bootindex=1 -netdev tap,fd=24,id=hostnet0,vhost=on,vhostfd=26 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:77:78:79,bus=pci.0,addr=0x1 -chardev pty,id=charserial0 -device spapr-vty,chardev=charserial0,id=serial0,reg=0x30000000 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x4 -msg timestamp=on
2018-02-23T14:26:07.116991Z qemu-system-ppc64: -chardev pty,id=charserial0: char device redirected to /dev/pts/1 (label charserial0)

Regards,
-Satheesh

== Comment: #8 - VIPIN K. PARASHAR <email address hidden> - 2018-02-25 23:38:29 ==
Starting install...
ERROR    internal error: process exited while connecting to monitor: ,id=scsi0-0-0-0,bootindex=1 -netdev tap,fd=24,id=hostnet0,vhost=on,vhostfd=26 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:77:78:79,bus=pci.0,addr=0x1 -chardev pty,id=charserial0 -device spapr-vty,chardev=charserial0,id=serial0,reg=0x30000000 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x4 -msg timestamp=on
2018-02-23T14:21:11.081809Z qemu-system-ppc64: KVM implementation does not support Transactional Memory, try cap-htm=off
Domain installation does not appear to have been successful.
If it was, you can restart your domain by running:
  virsh --connect qemu:///system start virt-tests-vm1
otherwise, please restart your installation.

As per above message, qemu is reporting TM to be not supported by KVM on this hardware
and thus recommending to turn off cap-htm.

== Comment: #12 - Suraj Jitindar Singh <email address hidden> - 2018-02-26 23:35:02 ==
I don't know what a pseries-bionic is, there is no reference to it upstream.

What you are seeing is expected behaviour as far as I can tell. POWER9 currently does not support HTM for a guest and thus it must not be turned on, otherwise qemu will fail to start.

HTM can be disabled from the qemu command line by setting cap-htm=off, as stated in the the error message. The pseries-2.12 machine type has htm disabled by default and thus with that machine type there is no requirement to set cap-htm=off on the command line to get qemu to start.

So depending on what machine pseries-bionic is based on it will be required to disable htm on the command line (with cap-htm=off) if it is not disabled by default for the machine.

== Comment: #13 - Satheesh Rajendran <email address hidden> - 2018-02-27 00:05:12 ==
Had a chat with Suraj and here is the summary

1. Currently Power9 DD2.2(host kernel) does not support HTM, so guest should be booted with cap-htm=off, looks like host kernel patch rework in progress--> Initial patch, https://www.spinics.net/lists/kvm-ppc/msg13378.html
2. Libvirt does not know about this cap-htm yet and currently it does not set any default values?
3. pseries-2.12 does have cap-htm=off by default but not the older machine types, so we see the guest is booting from libvirt with pseries-2.12
4. Once 1 is fixed, we can boot cap-htm=on, I guess by that time pseries-2.12 to be changed to cap-htm=on bydefault.

---> 3. Immediate fix can be Canonical defaults their machine type(pseries-bioic) to pseries-2.12...
---> Future 1 and 4 to be addressed, not sure about 2?

Needs a mirror to Canonical to address this.

Regards,
-Satheesh

Hi, the long description in this bug is a little confusing. Some of the comments appear to suggest that the required support is not yet upstream.

Could the reporter confirm whether there any current upstream patches that require backporting urgently (the bug is marked as critical)?

Or whether further upstream work is required before backporting should begin.

Thanks, Andy.


Hi,
Thanks Andrew - I agree in general.
The following is based on the assumption that the linked discussion (kernel change) is not upstream yet.
Any clarification on that will help thou.

OTOH I want to start the discussion on the options we have early on.

I have seen the pseries-2.12 changes in the qemu 2.11.1 stable release (didn't like them).
Especially for things like those that you mentioned "... I guess by that time pseries-2.12 to be changed to cap-htm=on by default" is the reason I can't pick a 2.12 type until 2.12 is final and released.

We never can allow a case where pseries-2.12 != pseries-2.12 (for migrations and such).

So at the moment the default pseries-bionic is based on 2.11 being the usual default of qemu 2.11 and the one that is meant to be (and stay) stable.

So on the proposed change "3. Immediate fix can be Canonical defaults their machine type(pseries-bioic) to pseries-2.12" I'm reluctant to do so, as:
  - only pseries would be 2.12
  - there is a high chance we end up with 2.12 != 2.12 down the road


Suggestion #1:
If you (=IBM as the authoritative entity for Power) decide that you want htm to be off in the 2.11 machine type in the Ubuntu 18.04 (=Bionic) release we can do that (as Bionic is not released yet we can still change it).

But that would stay for the entire time of the Bionic release.
So pseries-bionic (the default) => pseries-2.11 (+htm off) will be the default until year 2023

Once (if) the host kernel at some point supports htm properly you can surely change the 2.12 type upstream, we would pick that up and later releases will default to a htm on case then.
Also people could run Bionic (which sets htm=off by default then) and run if needed with a htm=on override.

But even all that would mean that e.g. a new qemu from the Ubuntu cloud archive in a year, would fail the same on a 18.04 base kernel.

The real fix is to get that host support upstream (kernel) and get it in the Ubuntu kernel prior to the release of 18.04 - is that a realistic timeline, when do you expect this gets upstream?

I hope those clarifications helped to see why I think just choosing the 2.12 type is no option.

Thereby Counter-proposing:
1. in qemu we can make default pseries-bionic => pseries-2.11 (+htm off) if you want.
   That makes things safe to use for now, but OTOH htm an opt-in feature on Ubuntu 18.04
   That would stay that way for the support time of 18.04
OR
2. You get the kernel fix upstream asap and Ubuntu integrates before release of 18.04
   Then qemu/libvirt as is would work on P9 DD 2.2+
   (until that happens you can test with an override to set htm=off)


But any decision between #1/#2 depends very much on:
- the expected timeline of your kernel changes
- your preferenc in regard to the htm feature
So it is up to you to clarify on that as Andrew pointed out.

------- Comment From <email address hidden> 2018-02-27 22:50 EDT-------
1.
If it's decided thatwe want to default to cap-htm=off, then that can be achieved by adding:
```smc->default_caps.caps[SPAPR_CAP_HTM] = SPAPR_CAP_OFF;```
to the spapr-bionic machine class init

2.
What is the timeframe we are talking about here, a week/a month? It's hard to give a firm timeframe on the patches going upstream

For 1. I mostly agree, the default is currently off in code and in 2.11 there is this for backwards compatability:
  smc->default_caps.caps[SPAPR_CAP_HTM] = SPAPR_CAP_ON;

We would have to
- Moving that "keep the old default" entry to 2.10 (to cover <=2.10)
  spapr_machine_2_10_class_options
   smc->default_caps.caps[SPAPR_CAP_HTM] = SPAPR_CAP_ON;
- And we would set it explicit off in 2.11 (which is what pseries-bionic refers to)
  spapr_machine_2_11_class_options
   smc->default_caps.caps[SPAPR_CAP_HTM] = SPAPR_CAP_OFF;
- 2.12 we would not change IMHO, that might become whatever it becomes with 2.12 development


For #2 - this is a bug fix so it does not fall under the Feature Freeze (tomorrow).
But I don't know how much lead time the kernel team needs.
Given that kernel fixes are involved this clearly needs a kernel task for them to know about - adding ...

@Kernel - please read the context - what is the last date you'd need to have this commit upstream by IBM to be able to pick it and still be in the initial 18.04 release kernel (not in -updates)?

@IBM - how about this approach:
A) We switch the default to HTM=off in qemu "now" (as soon as you ack this) to be safe
B) If you get the kernel fixes upstream fast enough for the kernel Team to pick up in time:
  B1) a fixed kernel will be pushed (before 18.04 release)
  B2) we unroll this change in qemu (before 18.04 release)

That way we would surely have something that "works" by default via (A) and if (B) is in time we can switch back to "working but with HTM enabled".
And if (B) is too late we will keep HTM disabled in the 2.11/Bionic machine type.

------- Comment From <email address hidden> 2018-03-01 00:00 EDT-------
*** Bug 165240 has been marked as a duplicate of this bug. ***

------- Comment From <email address hidden> 2018-03-01 01:22 EDT-------
Seems like the best option in my opinion

Sorry, but to be sure is that a clear "yes please disable HTM by default in qemu on ppc64el for Ubuntu 18.04" ?

Status changed to 'Confirmed' because the bug affects multiple users.

------- Comment From <email address hidden> 2018-03-01 10:42 EDT-------
@paelzer yes, that is us agreeing with your plan
>A) We switch the default to HTM=off in qemu "now" (as soon as you ack this) to be safe
>B) If you get the kernel fixes upstream fast enough for the kernel Team to pick up in time:
>...

Sorry for the delay.

------- Comment From <email address hidden> 2018-03-01 12:41 EDT-------
(In reply to comment #27)
> @paelzer yes, that is us agreeing with your plan

Does it mean that we are not going to have HTM support on KVM guests, even in POWER8?

------- Comment From <email address hidden> 2018-03-01 13:17 EDT-------
(In reply to comment #28)
> (In reply to comment #27)
> > @paelzer yes, that is us agreeing with your plan
>
> Does it mean that we are not going to have HTM support on KVM guests, even
> in POWER8?

you would use the 2.10 machine type for that, right?

------- Comment From <email address hidden> 2018-03-01 15:07 EDT-------
(In reply to comment #29)
> (In reply to comment #28)
> > (In reply to comment #27)
> > > @paelzer yes, that is us agreeing with your plan
> >
> > Does it mean that we are not going to have HTM support on KVM guests, even
> > in POWER8?
>
> you would use the 2.10 machine type for that, right?
Right. This is about the new machine type.

To the mini-discussion above - yes it would be default off on P8 as well then.
But by selecting an older machine type, or - even better - using the new type but with cap-htm=on

Starting the fix in qemu early next week then (the one outlined as (A) in comment #4.


FYI: There is bug 1753826 which postponed the release/testing of this one a bit.
Currently in rebuild/test together.

Fix pushed to bionic proposed, I'll track migration after it built and some time for the tests have passed.

BTW - tests on P8 are already good on my side, and since the request from IBM came fro P9 I have to assume it will be good there. But e.g. cross release migration X->B and such I had tested explicitly to be sure.

That said, please be aware that this will be a remaining "itch" for you at the current solution.
If somebody had guests on pre-Xenial it will have HTM enabled by default.
If those users migrate to a P9 system on Bionic they will still carry the feature of HTM being enabled and run into the issue, but there is nothing we can do about it other than getting your kernel fix completed and integrated. But I thought I make you aware to be sure.

This bug was fixed in the package qemu - 1:2.11+dfsg-1ubuntu4

---------------
qemu (1:2.11+dfsg-1ubuntu4) bionic; urgency=medium

  * d/p/ubuntu/define-ubuntu-machine-types.patch: Disable HTM feature for
    ppc64el in spapr to let the defaults not fail on Power9 HW (LP: #1752026).
  * d/p/ubuntu/lp1753826-memfd-fix-configure-test.patch: fix FTBFS with newer
    versions of glibc >=2.27 (LP: #1753826)

 -- Christian Ehrhardt <email address hidden>  Mon, 05 Mar 2018 16:43:01 +0100

------- Comment From <email address hidden> 2018-03-13 12:52 EDT-------
Paul's RFC patch to kernel, https://www.spinics.net/lists/kvm/msg165629.html

Patch posted to lkml, but not yet accepted upstream.

------- Comment From <email address hidden> 2018-03-20 16:38 EDT-------
I went to https://www.spinics.net/lists/kvm/msg165629.html but it only has source code change for the problem.

Can Linux team build a patch against Ubuntu 18.04 kernel 4.15.0-12-generic for test team to install.  Thanks

------- Comment From <email address hidden> 2018-03-21 07:12 EDT-------
The latest version of the patches has been posted and is available at https://patchwork.ozlabs.org/project/kvm-ppc/list/?series=35017. I will add a note when the series has been put in a maintainer's tree.

------- Comment From <email address hidden> 2018-03-21 12:20 EDT-------
Gustavo, would you please add this patch to the Ubuntu kernel you created with the trap/HMI patches?

------- Comment From <email address hidden> 2018-03-22 15:48 EDT-------
- Today, I setup Ubuntu KVM on my Boston system using Ubuntu 18.04 daily build below

http://cdimages.ubuntu.com/ubuntu-server/daily/current/

- With today build, it no longer has the Transaction Memory error when start up a KVM guest. So the fix in this LTCbug mhave made it into Ubuntu daily build.

------- Comment From <email address hidden> 2018-03-23 01:53 EDT-------
(In reply to comment #43)
> - Today, I setup Ubuntu KVM on my Boston system using Ubuntu 18.04 daily
> build below
>
>    http://cdimages.ubuntu.com/ubuntu-server/daily/current/
>
> - With today build, it no longer has the Transaction Memory error when start
> up a KVM guest. So the fix in this LTCbug mhave made it into Ubuntu daily
> build.

(In reply to comment #43)
> - Today, I setup Ubuntu KVM on my Boston system using Ubuntu 18.04 daily
> build below
>
>    http://cdimages.ubuntu.com/ubuntu-server/daily/current/
>
> - With today build, it no longer has the Transaction Memory error when start
> up a KVM guest. So the fix in this LTCbug mhave made it into Ubuntu daily
> build.

Hi Nguyen,

Pauls patch(https://patchwork.ozlabs.org/project/kvm-ppc/list/?series=35017) yet to get merged in linux master as of now{f36b7534b833 (HEAD -> master, upstream/master) Merge branch 'akpm' (patches from Andrew)}

Does ubuntu daily kernel include custom patches?

If it does not include custom patches and one reason why you do not hit the issue now, coz qemu disable cap-htm by default temporarily till the above kernel patches included, check if that is the case.

you can confirm the TM patches are included by explicitly start qemu-kvm command with cap-htm=on

Regards,
-Satheesh.

------- Comment From <email address hidden> 2018-04-02 19:22 EDT-------
The patches that make it possible to use HTM in guests running on POWER9 processors are now in the PowerPC kernel maintainer tree and will be requested to get merged into kernel 4.17:

681c617b7c42 KVM: PPC: Book3S HV: Work around TEXASR bug in fake suspend state
87a11bb6a7f7 KVM: PPC: Book3S HV: Work around XER[SO] bug in fake suspend mode
4bb3c7a0208f KVM: PPC: Book3S HV: Work around transactional memory bugs in POWER9
7672691a08c8 powerpc/powernv: Provide a way to force a core into SMT4 mode
b5af4f279323 powerpc: Add CPU feature bits for TM bug workarounds on POWER9 v2.2
9bbf0b576d32 powerpc: Free up CPU feature bits on 64-bit machines
dd0efb3f11cc powerpc: Book E: Remove unused CPU_FTR_L2CSR bit
c0d64cf9fefd powerpc: Use feature bit for RTC presence rather than timebase presence

Fom Paul Mackerras: for a backport, we can probably avoid the feature bit rework, I hope, and just find two free CPU feature bits. If there aren't 2 free feature bits then let me know, we might be able to scavenge some that are only used on Book E or something.

Since the kernel team is now investigating the integration of the kernel patches into bionic (the kernel bits are already Fix Committed), we should plan to get the temporary workaround again removed from qemu-kvm.
It's hard to time it in a way that the kernel changes are rolled-out and the qemu workaround got removed at the same time.
So this could lead to a short time of the qemu mitigation being reverted, but the kernel not yet being released, which would make you need the cap-htm=0ff workaround. But that way it would be much safer that both changes are available prior to the release of 18.04 Bionic.
Hence the question (to IBM) is if it would be okay to plan ahead and to get the qemu changes reverted back now?

------- Comment From <email address hidden> 2018-04-04 04:18 EDT-------
(In reply to comment #48)
> Since the kernel team is now investigating the integration of the kernel
> patches into bionic (the kernel bits are already Fix Committed), we should
> plan to get the temporary workaround again removed from qemu-kvm.
> It's hard to time it in a way that the kernel changes are rolled-out and the
> qemu workaround got removed at the same time.
> So this could lead to a short time of the qemu mitigation being reverted,
> but the kernel not yet being released, which would make you need the
> cap-htm=0ff workaround. But that way it would be much safer that both
> changes are available prior to the release of 18.04 Bionic.
> Hence the question (to IBM) is if it would be okay to plan ahead and to get
> the qemu changes reverted back now?

Yes, we need the qemu workaround to be removed. I see all required kernel patches are in master-next of bionic. Understand that both of these cannot be timed.. but having qemu changes revert today.. would we get updated kernel and qemu in tomorrows daily build? just wanted to understand what would be time window..

It's not possible to turn around a kernel that quickly. I intend to get a kernel with the fix uploaded bionic-proposed today, but it takes a few days at minimum to get it built, tested, and promoted to the -release pocket.

@Seth - that is fine, for the Kernel we only need to rely on "will be out before Bionic release" and that looks good - don't feel pushed.
The updates were about asking IBM "If we assume the kernel fixes will be there, should we remove the qemu mitigation (as we can't remove it after Bionic release date)".

------- Comment From <email address hidden> 2018-04-04 08:50 EDT-------
Hi Frank,

First of all, thanks for caring about this bug and accepting the out-of-the-tree patches.

You are right, the motivation to include this patchset is to re-enable the HTM in the KVM guests. So, we just need to schedule the fixes on both side.

Here are some assumptions I have:

1) If you need to revert the qemu-kvm "HTM off" patches right now, We can survive, since we have a internal kernel that contains the fix, and we can use this custom kernel in the mean time. Not a big deal.

2) On the other side, I understand that the Final Freeze for Ubuntu will be in April 19th, so, we still have some time to release qemu, how long can we wait without affecting the time to we spend testing this package?

3) Releasing the fixed kernel prior to the fixed qemu package would be better than the other way around.

4) Can't we fix fix qemu now and keep it in the proposed until the kernel is released?

Thanks!

------- Comment From <email address hidden> 2018-04-04 08:55 EDT-------
One other possibility could be to have the changes going into the kernel and, then, remove the workaround from QEMU. QEMU with the workaround should continue to work with the kernel with the proper changes. HTM will be disabled in the guests, which would not be needed anymore, but would not block a VM from running.

Anyway, I am OK either way. We need to make progress here and I understand this came in late. We need to have the fixes in the kernel and the workaround out of QEMU. If that means we will have a broken QEMU for few days, that would be OK. We can continue our tests with previous versions of kernel and QEMU until everything is settled in bionic repositories or disable HTM by hand when running tests.

@Breno - I agree to #3 but since we have no hard ETA on the kernel I want to avoid punting qemu to the very last few days. History told me that always something happens/blocks and if we would miss GA we can't SRu to keep the final pseries-bionic type in sync.

For #4 there is no good "keep in proposed" for the current Dev release.

I discussed with lagarcia and JFH on IRC once more:
...
[15:02] <lagarcia_> cpaelzer, I am OK with that. TBH, we can live with QEMU removing the workaround now or after the kernel has been changed.
[15:05] <cpaelzer> there was a bug update by breno 3 minutes ago
[15:05] * cpaelzer is reading
[15:06] <cpaelzer> oh I see, and your comment - mirrored both at once
[15:06] <cpaelzer> my concern is that if anything comes up late
[15:06] <cpaelzer> we might end up with the qemu change not reverted
[15:07] <cpaelzer> as after release it becomes an issue
[15:07] <cpaelzer> and will no more be removable
[15:07] <cpaelzer> for consistency of the pseries-bionic type
[15:07] <jfh1> cpaelzer, lagarcia: ah - just saw the ticket update and a reply from Breno ...
[15:08] <cpaelzer> jfh1: do we have anything like an expected date by the kernel Team?
[15:08] <cpaelzer> I'd not want to wait with qemu later than end of this week TBH
[15:08] <cpaelzer> history teached me not to try changing things last minute
[15:08] <jfh1> cpaelzer: I agree - there is always the option to pin a package to prevent it from getting updated
[15:09] <jfh1> that can be an option for those guys who still need to KVM on P9 ...
[15:09] <cpaelzer> jfh1: lagarcia_: so are we agreeing that I'll revert the avoidance in qemu now considering the various constraints?
[15:09] * cpaelzer is +1
[15:10] <jfh1> I think so ...
[15:12] <lagarcia_> cpaelzer, yep
[15:13] <lagarcia_> cpaelzer, when the patches reach bionic kernel, everything should work out of the box. Meanwhile, we can implement the workaround by hand.


With all that said, I'm including the revert of the current mitigation from the next qemu upload.

Revert will be hanlded via bug 1761175

@ lagarcia and Breno:
People/tester who still need the patched qemu can prevent that from being upgraded by pinning it aka marking it as hold (https://help.ubuntu.com/community/PinningHowto).
Even in case of an accidental upgrade - it's easy to go again back to that version.

------- Comment From <email address hidden> 2018-04-10 06:53 EDT-------
We have got the qemu build with htm-on today [April 10th]. Now we are able to start compat mode guests with htm-on.. apart from bug 166570 things look good. We can close this one.

This bug was fixed in the package linux - 4.15.0-15.16

---------------
linux (4.15.0-15.16) bionic; urgency=medium

  * linux: 4.15.0-15.16 -proposed tracker (LP: #1761177)

  * FFe: Enable configuring resume offset via sysfs (LP: #1760106)
    - PM / hibernate: Make passing hibernate offsets more friendly

  * /dev/bcache/by-uuid links not created after reboot (LP: #1729145)
    - SAUCE: (no-up) bcache: decouple emitting a cached_dev CHANGE uevent

  * Ubuntu18.04:POWER9:DD2.2 - Unable to start a KVM guest with default machine
    type(pseries-bionic) complaining "KVM implementation does not support
    Transactional Memory, try cap-htm=off" (kvm) (LP: #1752026)
    - powerpc: Use feature bit for RTC presence rather than timebase presence
    - powerpc: Book E: Remove unused CPU_FTR_L2CSR bit
    - powerpc: Free up CPU feature bits on 64-bit machines
    - powerpc: Add CPU feature bits for TM bug workarounds on POWER9 v2.2
    - powerpc/powernv: Provide a way to force a core into SMT4 mode
    - KVM: PPC: Book3S HV: Work around transactional memory bugs in POWER9
    - KVM: PPC: Book3S HV: Work around XER[SO] bug in fake suspend mode
    - KVM: PPC: Book3S HV: Work around TEXASR bug in fake suspend state

  * Important Kernel fixes to be backported for Power9 (kvm) (LP: #1758910)
    - powerpc/mm: Fixup tlbie vs store ordering issue on POWER9

  * Ubuntu 18.04 - IO Hang on some namespaces when running HTX with 16
    namespaces  (Bolt / NVMe) (LP: #1757497)
    - powerpc/64s: Fix lost pending interrupt due to race causing lost update to
      irq_happened

  * fwts-efi-runtime-dkms 18.03.00-0ubuntu1: fwts-efi-runtime-dkms kernel module
    failed to build (LP: #1760876)
    - [Packaging] include the retpoline extractor in the headers

linux (4.15.0-14.15) bionic; urgency=medium

  * linux: 4.15.0-14.15 -proposed tracker (LP: #1760678)

  * [Bionic] mlx4 ETH - mlnx_qos failed when set some TC to vendor
    (LP: #1758662)
    - net/mlx4_en: Change default QoS settings

  * AT_BASE_PLATFORM in AUXV is absent on kernels available on Ubuntu 17.10
    (LP: #1759312)
    - powerpc/64s: Fix NULL AT_BASE_PLATFORM when using DT CPU features

  * Bionic update to 4.15.15 stable release (LP: #1760585)
    - net: dsa: Fix dsa_is_user_port() test inversion
    - openvswitch: meter: fix the incorrect calculation of max delta_t
    - qed: Fix MPA unalign flow in case header is split across two packets.
    - tcp: purge write queue upon aborting the connection
    - qed: Fix non TCP packets should be dropped on iWARP ll2 connection
    - sysfs: symlink: export sysfs_create_link_nowarn()
    - net: phy: relax error checking when creating sysfs link netdev->phydev
    - devlink: Remove redundant free on error path
    - macvlan: filter out unsupported feature flags
    - net: ipv6: keep sk status consistent after datagram connect failure
    - ipv6: old_dport should be a __be16 in __ip6_datagram_connect()
    - ipv6: sr: fix NULL pointer dereference when setting encap source address
    - ipv6: sr: fix scheduling in RCU when creating seg6 lwtunnel state
    - mlxsw: spectrum_buffers: Set a minimum quota for CPU port traffic
    - net: phy: Tell caller result of phy_change()
    - ipv6: Reflect MTU changes on PMTU of exceptions for MTU-less routes
    - net sched actions: return explicit error when tunnel_key mode is not
      specified
    - ppp: avoid loop in xmit recursion detection code
    - rhashtable: Fix rhlist duplicates insertion
    - test_rhashtable: add test case for rhltable with duplicate objects
    - kcm: lock lower socket in kcm_attach
    - sch_netem: fix skb leak in netem_enqueue()
    - ieee802154: 6lowpan: fix possible NULL deref in lowpan_device_event()
    - net: use skb_to_full_sk() in skb_update_prio()
    - net: Fix hlist corruptions in inet_evict_bucket()
    - s390/qeth: free netdevice when removing a card
    - s390/qeth: when thread completes, wake up all waiters
    - s390/qeth: lock read device while queueing next buffer
    - s390/qeth: on channel error, reject further cmd requests
    - soc/fsl/qbman: fix issue in qman_delete_cgr_safe()
    - dpaa_eth: fix error in dpaa_remove()
    - dpaa_eth: remove duplicate initialization
    - dpaa_eth: increment the RX dropped counter when needed
    - dpaa_eth: remove duplicate increment of the tx_errors counter
    - dccp: check sk for closed state in dccp_sendmsg()
    - ipv6: fix access to non-linear packet in ndisc_fill_redirect_hdr_option()
    - l2tp: do not accept arbitrary sockets
    - net: ethernet: arc: Fix a potential memory leak if an optional regulator is
      deferred
    - net: ethernet: ti: cpsw: add check for in-band mode setting with RGMII PHY
      interface
    - net: fec: Fix unbalanced PM runtime calls
    - net/iucv: Free memory obtained by kzalloc
    - netlink: avoid a double skb free in genlmsg_mcast()
    - net: Only honor ifindex in IP_PKTINFO if non-0
    - net: systemport: Rewrite __bcm_sysport_tx_reclaim()
    - qede: Fix qedr link update
    - skbuff: Fix not waking applications when errors are enqueued
    - team: Fix double free in error path
    - Linux 4.15.15

  * Ubuntu 18.04 [ WSP DD2.2 with stop4 and stop5 enabled ]: kdump fails to
    capture dump when smt=2 or off. (LP: #1758206)
    - powerpc/crash: Remove the test for cpu_online in the IPI callback
    - powernv/kdump: Fix cases where the kdump kernel can get HMI's
    - powerpc/kdump: Fix powernv build break when KEXEC_CORE=n

  * [Intel Ubuntu 18.04 Bug] Null pointer dereference, when disconnecting RAID
    rebuild target (LP: #1759279)
    - md: document lifetime of internal rdev pointer.

  * [Feature]Crystal Ridge:add support for the platform capabilities NFIT sub-
    table in ACPI 6.2A (LP: #1730829)
    - ACPICA: ACPI 6.0A: Changes to the NFIT ACPI table
    - acpi: nfit: Add support for detect platform CPU cache flush on power loss
    - acpi: nfit: add persistent memory control flag for nd_region
    - libnvdimm: expose platform persistence attribute for nd_region
    - libnvdimm: re-enable deep flush for pmem devices via fsync()
    - libnvdimm, nfit: fix persistence domain reporting

  * Allow multiple mounts of zfs datasets (LP: #1759848)
    - SAUCE: Allow mounting datasets more than once (LP: #1759848)

  * Update Aquantia driver to fix various issues (LP: #1759303)
    - net: aquantia: Eliminate AQ_DIMOF, replace with ARRAY_SIZE
    - net: aquantia: Cleanup status flags accesses
    - net: aquantia: Cleanup hardware access modules
    - net: aquantia: Remove duplicate hardware descriptors declarations
    - net: aquantia: Add const qualifiers for hardware ops tables
    - net: aquantia: Simplify dependencies between pci modules
    - net: aquantia: Eliminate aq_nic structure abstraction
    - net: aquantia: Fix register definitions to linux style
    - net: aquantia: Prepend hw access functions declarations with prefix
    - net: aquantia: Fix internal stats calculation on rx
    - net: aquantia: Introduce new device ids and constants
    - net: aquantia: Introduce new AQC devices and capabilities
    - net: aquantia: Convert hw and caps structures to const static pointers
    - net: aquantia: Cleanup pci functions module
    - net: aquantia: Remove create/destroy from hw ops
    - net: aquantia: Change confusing no_ff_addr to more meaningful name
    - net: aquantia: Introduce firmware ops callbacks
    - net: aquantia: Introduce support for new firmware on AQC cards
    - net: aquantia: Introduce global AQC hardware reset sequence
    - net: aquantia: Report correct mediatype via ethtool
    - net: aquantia: bump driver version to match aquantia internal numbering
    - net: aquantia: Fix hardware reset when SPI may rarely hangup
    - net: aquantia: Fix a regression with reset on old firmware
    - net: aquantia: Change inefficient wait loop on fw data reads
    - net: aquantia: Add tx clean budget and valid budget handling logic
    - net: aquantia: Allow live mac address changes
    - net: aquantia: Implement pci shutdown callback
    - net: aquantia: driver version bump

  * ISST-LTE:KVM:Ubuntu1804:BostonLC:boslcp3: cpu hotplug on boslcp3g4 guest
    dumping call traces continuously. (LP: #1759722)
    - blk-mq: turn WARN_ON in __blk_mq_run_hw_queue into printk

  * ISST-LTE:KVM:Ubuntu18.04:BostonLC:boslcp3:boslcp3g3:Guest conosle hangs
    after hotplug CPU add operation. (LP: #1759723)
    - genirq/affinity: assign vectors to all possible CPUs
    - blk-mq: simplify queue mapping & schedule with each possisble CPU

  * test_bpf fails (LP: #1756150)
    - test_bpf: Fix testing with CONFIG_BPF_JIT_ALWAYS_ON=y on other arches

  * Bionic update to v4.15.14 stable release (LP: #1759655)
    - MIPS: ralink: Remove ralink_halt()
    - MIPS: ralink: Fix booting on MT7621
    - MIPS: lantiq: Fix Danube USB clock
    - MIPS: lantiq: Enable AHB Bus for USB
    - MIPS: lantiq: ase: Enable MFD_SYSCON
    - iio: chemical: ccs811: Corrected firmware boot/application mode transition
    - iio: st_pressure: st_accel: pass correct platform data to init
    - iio: adc: meson-saradc: unlock on error in meson_sar_adc_lock()
    - ALSA: usb-audio: Fix parsing descriptor of UAC2 processing unit
    - ALSA: aloop: Sync stale timer before release
    - ALSA: aloop: Fix access to not-yet-ready substream via cable
    - ALSA: hda - Force polling mode on CFL for fixing codec communication
    - ALSA: hda/realtek - Fix speaker no sound after system resume
    - ALSA: hda/realtek - Fix Dell headset Mic can't record
    - ALSA: hda/realtek - Always immediately update mute LED with pin VREF
    - mmc: core: Fix tracepoint print of blk_addr and blksz
    - mmc: core: Disable HPI for certain Micron (Numonyx) eMMC cards
    - mmc: block: fix updating ext_csd caches on ioctl call
    - mmc: dw_mmc: Fix the DTO/CTO timeout overflow calculation for 32-bit systems
    - mmc: dw_mmc: exynos: fix the suspend/resume issue for exynos5433
    - mmc: dw_mmc: fix falling from idmac to PIO mode when dw_mci_reset occurs
    - PCI: Add function 1 DMA alias quirk for Highpoint RocketRAID 644L
    - ahci: Add PCI-id for the Highpoint Rocketraid 644L card
    - lockdep: fix fs_reclaim warning
    - clk: bcm2835: Fix ana->maskX definitions
    - clk: bcm2835: Protect sections updating shared registers
    - clk: sunxi-ng: a31: Fix CLK_OUT_* clock ops
    - RDMA/mlx5: Fix crash while accessing garbage pointer and freed memory
    - Drivers: hv: vmbus: Fix ring buffer signaling
    - pinctrl: samsung: Validate alias coming from DT
    - Bluetooth: btusb: Remove Yoga 920 from the btusb_needs_reset_resume_table
    - Bluetooth: btusb: Add Dell OptiPlex 3060 to btusb_needs_reset_resume_table
    - Bluetooth: btusb: Fix quirk for Atheros 1525/QCA6174
    - libata: fix length validation of ATAPI-relayed SCSI commands
    - libata: remove WARN() for DMA or PIO command without data
    - libata: don't try to pass through NCQ commands to non-NCQ devices
    - libata: Apply NOLPM quirk to Crucial MX100 512GB SSDs
    - libata: Enable queued TRIM for Samsung SSD 860
    - libata: Apply NOLPM quirk to Crucial M500 480 and 960GB SSDs
    - libata: Make Crucial BX100 500GB LPM quirk apply to all firmware versions
    - libata: Modify quirks for MX100 to limit NCQ_TRIM quirk to MU01 version
    - sched, cgroup: Don't reject lower cpu.max on ancestors
    - cgroup: fix rule checking for threaded mode switching
    - nfsd: remove blocked locks on client teardown
    - media: tegra-cec: reset rx_buf_cnt when start bit detected
    - hugetlbfs: check for pgoff value overflow
    - h8300: remove extraneous __BIG_ENDIAN definition
    - mm/vmalloc: add interfaces to free unmapped page table
    - x86/mm: implement free pmd/pte page interfaces
    - mm/khugepaged.c: convert VM_BUG_ON() to collapse fail
    - mm/thp: do not wait for lock_page() in deferred_split_scan()
    - mm/shmem: do not wait for lock_page() in shmem_unused_huge_shrink()
    - Revert "mm: page_alloc: skip over regions of invalid pfns where possible"
    - drm/vmwgfx: Fix black screen and device errors when running without fbdev
    - drm/vmwgfx: Fix a destoy-while-held mutex problem.
    - drm/radeon: Don't turn off DP sink when disconnected
    - drm/amd/display: We shouldn't set format_default on plane as atomic driver
    - drm/amd/display: Add one to EDID's audio channel count when passing to DC
    - drm: Reject getfb for multi-plane framebuffers
    - drm: udl: Properly check framebuffer mmap offsets
    - mm/vmscan: wake up flushers for legacy cgroups too
    - module: propagate error in modules_open()
    - acpi, numa: fix pxm to online numa node associations
    - ACPI / watchdog: Fix off-by-one error at resource assignment
    - libnvdimm, {btt, blk}: do integrity setup before add_disk()
    - brcmfmac: fix P2P_DEVICE ethernet address generation
    - rtlwifi: rtl8723be: Fix loss of signal
    - tracing: probeevent: Fix to support minus offset from symbol
    - mtdchar: fix usage of mtd_ooblayout_ecc()
    - mtd: nand: fsl_ifc: Fix nand waitfunc return value
    - mtd: nand: fsl_ifc: Fix eccstat array overflow for IFC ver >= 2.0.0
    - mtd: nand: fsl_ifc: Read ECCSTAT0 and ECCSTAT1 registers for IFC 2.0
    - staging: ncpfs: memory corruption in ncp_read_kernel()
    - can: peak/pcie_fd: fix echo_skb is occupied! bug
    - can: peak/pcie_fd: remove useless code when interface starts
    - can: ifi: Repair the error handling
    - can: ifi: Check core revision upon probe
    - can: cc770: Fix stalls on rt-linux, remove redundant IRQ ack
    - can: cc770: Fix queue stall & dropped RTR reply
    - can: cc770: Fix use after free in cc770_tx_interrupt()
    - tty: vt: fix up tabstops properly
    - x86/entry/64: Don't use IST entry for #BP stack
    - selftests/x86/ptrace_syscall: Fix for yet more glibc interference
    - x86/vsyscall/64: Use proper accessor to update P4D entry
    - x86/efi: Free efi_pgd with free_pages()
    - posix-timers: Protect posix clock array access against speculation
    - kvm/x86: fix icebp instruction handling
    - x86/build/64: Force the linker to use 2MB page size
    - x86/boot/64: Verify alignment of the LOAD segment
    - hwmon: (k10temp) Only apply temperature offset if result is positive
    - hwmon: (k10temp) Add temperature offset for Ryzen 1900X
    - perf/x86/intel/uncore: Fix Skylake UPI event format
    - perf stat: Fix CVS output format for non-supported counters
    - perf/core: Fix ctx_event_type in ctx_resched()
    - trace/bpf: remove helper bpf_perf_prog_read_value from tracepoint type
      programs
    - perf/x86/intel: Don't accidentally clear high bits in bdw_limit_period()
    - perf/x86/intel/uncore: Fix multi-domain PCI CHA enumeration bug on Skylake
      servers
    - iio: ABI: Fix name of timestamp sysfs file
    - iio: imu: st_lsm6dsx: fix endianness in st_lsm6dsx_read_oneshot()
    - iio: imu: st_lsm6dsx: introduce conf_lock mutex
    - staging: android: ion: Zero CMA allocated memory
    - kbuild: disable clang's default use of -fmerge-all-constants
    - bpf: skip unnecessary capability check
    - bpf, x64: increase number of passes
    - Linux 4.15.14

  * System fails to start (boot) on battery due to read-only root file-system
    (LP: #1726930) // Bionic update to v4.15.14 stable release (LP: #1759655)
    - libata: disable LPM for Crucial BX100 SSD 500GB drive

  * [Feature][CFL][ICL] [CNL]Thunderbolt support (Titan Ridge) (LP: #1730775)
    - thunderbolt: Resume control channel after hibernation image is created
    - thunderbolt: Serialize PCIe tunnel creation with PCI rescan
    - thunderbolt: Handle connecting device in place of host properly
    - thunderbolt: Do not overwrite error code when domain adding fails
    - thunderbolt: Wait a bit longer for root switch config space
    - thunderbolt: Wait a bit longer for ICM to authenticate the active NVM
    - thunderbolt: Handle rejected Thunderbolt devices
    - thunderbolt: Factor common ICM add and update operations out
    - thunderbolt: Correct function name in kernel-doc comment
    - thunderbolt: Add tb_switch_get()
    - thunderbolt: Add tb_switch_find_by_route()
    - thunderbolt: Add tb_xdomain_find_by_route()
    - thunderbolt: Add constant for approval timeout
    - thunderbolt: Move driver ready handling to struct icm
    - thunderbolt: Add 'boot' attribute for devices
    - thunderbolt: Add support for preboot ACL
    - Documentation/admin-guide: fixes for thunderbolt.rst
    - thunderbolt: Introduce USB only (SL4) security level
    - thunderbolt: Add support for Intel Titan Ridge

  * QCA9377 requires more IRAM banks for its new firmware (LP: #1748345)
    - ath10k: update the IRAM bank number for QCA9377

  * nfp: fix disabling on hw-tc-offload in flower (LP: #1752828)
    - nfp: bpf: require ETH table
    - nfp: don't advertise hw-tc-offload on non-port netdevs
    - nfp: forbid disabling hw-tc-offload on representors while offload active

  * Fix an issue that when system in S3, USB keyboard can't wake up the system.
    (LP: #1759511)
    - ACPI / PM: Allow deeper wakeup power states with no _SxD nor _SxW

  * retpoline hints: primary infrastructure and initial hints (LP: #1758856)
    - [Packaging] retpoline -- add safe usage hint support
    - [Packaging] retpoline-check -- only report additions
    - [Packaging] retpoline -- widen indirect call/jmp detection
    - [Packaging] retpoline -- elide %rip relative indirections
    - [Packaging] retpoline -- clear hint information from packages
    - SAUCE: apm -- annotate indirect calls within
      firmware_restrict_branch_speculation_{start,end}
    - SAUCE: EFI -- annotate indirect calls within
      firmware_restrict_branch_speculation_{start,end}
    - SAUCE: early/late -- annotate indirect calls in early/late initialisation
      code
    - SAUCE: vga_set_mode -- avoid jump tables
    - [Config] retpoine -- switch to new format

  * zfs system process hung on container stop/delete (LP: #1754584)
    - SAUCE: Fix non-prefaulted page deadlock (LP: #1754584)
    - Revert "UBUNTU: SAUCE: Fix non-prefaulted page deadlock (LP: #1754584)"
    - SAUCE: Fix non-prefaulted page deadlock (LP: #1754584)

  * Important KVM fixes for ppc64el (LP: #1759045)
    - KVM: PPC: Book3S HV: Do SLB load/unload with guest LPCR value loaded
    - KVM: PPC: Book3S HV: Fix handling of secondary HPTEG in HPT resizing code
    - KVM: PPC: Book3S HV: Make HPT resizing work on POWER9
    - KVM: PPC: Book3S: Add MMIO emulation for VMX instructions
    - KVM: PPC: Book3S: Fix compile error that occurs with some gcc versions
    - KVM: PPC: Book3S HV: Fix trap number return from __kvmppc_vcore_entry
    - KVM: PPC: Book3S HV: Fix duplication of host SLB entries

  * ubuntu_zram_smoke test will cause soft lockup on Artful ThunderX ARM64
    (LP: #1755073)
    - SAUCE: crypto: thunderx_zip: Fix fallout from CONFIG_VMAP_STACK

  * Update to ocxl driver (LP: #1755161)
    - ocxl: fix signed comparison with less than zero
    - ocxl: Fix potential bad errno on irq allocation
    - ocxl: Add get_metadata IOCTL to share OCXL information to userspace

  * CAPI Flash (cxlflash) update (LP: #1752672)
    - scsi: cxlflash: Update cxl-specific arguments to generic cookie
    - scsi: cxlflash: Explicitly cache number of interrupts per context
    - scsi: cxlflash: Remove embedded CXL work structures
    - scsi: cxlflash: Adapter context init can return error
    - scsi: cxlflash: Staging to support future accelerators
    - SAUCE: cxlflash: Preserve number of interrupts for master contexts
    - SAUCE: cxlflash: Avoid clobbering context control register value
    - SAUCE: cxlflash: Add argument identifier names
    - SAUCE: cxlflash: Introduce OCXL backend
    - SAUCE: cxlflash: Hardware AFU for OCXL
    - SAUCE: cxlflash: Read host function configuration
    - SAUCE: cxlflash: Setup function acTag range
    - SAUCE: cxlflash: Read host AFU configuration
    - SAUCE: cxlflash: Setup AFU acTag range
    - SAUCE: cxlflash: Setup AFU PASID
    - SAUCE: cxlflash: Adapter context support for OCXL
    - SAUCE: cxlflash: Use IDR to manage adapter contexts
    - SAUCE: cxlflash: Support adapter file descriptors for OCXL
    - SAUCE: cxlflash: Support adapter context discovery
    - SAUCE: cxlflash: Support image reload policy modification
    - SAUCE: cxlflash: MMIO map the AFU
    - SAUCE: cxlflash: Support starting an adapter context
    - SAUCE: cxlflash: Support process specific mappings
    - SAUCE: cxlflash: Support AFU state toggling
    - SAUCE: cxlflash: Support reading adapter VPD data
    - SAUCE: cxlflash: Setup function OCXL link
    - SAUCE: cxlflash: Setup OCXL transaction layer
    - SAUCE: cxlflash: Support process element lifecycle
    - SAUCE: cxlflash: Support AFU interrupt management
    - SAUCE: cxlflash: Support AFU interrupt mapping and registration
    - SAUCE: cxlflash: Support starting user contexts
    - SAUCE: cxlflash: Support adapter context polling
    - SAUCE: cxlflash: Support adapter context reading
    - SAUCE: cxlflash: Support adapter context mmap and release
    - SAUCE: cxlflash: Support file descriptor mapping
    - SAUCE: cxlflash: Introduce object handle fop
    - SAUCE: cxlflash: Setup LISNs for user contexts
    - SAUCE: cxlflash: Setup LISNs for master contexts
    - SAUCE: cxlflash: Update synchronous interrupt status bits
    - SAUCE: cxlflash: Introduce OCXL context state machine
    - SAUCE: cxlflash: Register for translation errors
    - SAUCE: cxlflash: Support AFU reset
    - SAUCE: cxlflash: Enable OCXL operations

  * [Feature][CFL] Enable pmc_core driver for H, S, and U SKUs (LP: #1730770)
    - platform/x86: intel_pmc_core: Remove unused EXPORTED API
    - platform/x86: intel_pmc_core: Change driver to a module
    - platform/x86: intel_pmc_core: Fix file permission warnings
    - platform/x86: intel_pmc_core: Refactor debugfs entries
    - platform/x86: intel_pmc_core: Substitute PCI with CPUID enumeration
    - platform/x86: intel_pmc_core: Convert to ICPU macro
    - platform/x86: intel_pmc_core: Remove unused header file
    - ACPI / LPIT: Export lpit_read_residency_count_address()
    - platform/x86: intel_pmc_core: Read base address from LPIT
    - x86/cpu: Add Cannonlake to Intel family
    - platform/x86: intel_pmc_core: Add CannonLake PCH support
    - platform/x86: intel_pmc_core: Special case for Coffeelake

  * Cpu utilization showing system time for kvm guests (performance) (sysstat)
    (LP: #1755979)
    - KVM: PPC: Book3S HV: Fix guest time accounting with VIRT_CPU_ACCOUNTING_GEN

  * [Artful][Wyse 3040] System hang when trying to enable an offlined CPU core
    (LP: #1736393)
    - SAUCE: drm/i915:Don't set chip specific data
    - SAUCE: drm/i915: make previous commit affects Wyse 3040 only

  * [Bug] ISH support for CFL-H (LP: #1739522)
    - HID: intel-ish-hid: Enable Cannon Lake and Coffee Lake laptop/desktop

  * ath9k can't connect to wifi AP (LP: #1727228)
    - ath9k: add MSI support
    - ath9k: add a quirk to set use_msi automatically

  * [P9,Power NV][Witherspoon][Ubuntu 18.04][Perf] : PMU events by name it is
    not listed under perf list (LP: #1755470)
    - iperf vendor events: Use more flexible pattern matching for CPU
      identification for mapfile.csv

  * zed process consuming 100% cpu (LP: #1751796)
    - SAUCE: Fix ioctl loop-spin in zed (LP: #1751796)

  * Bionic update to 4.15.13 stable release (LP: #1758886)
    - scsi: megaraid_sas: Do not use 32-bit atomic request descriptor for Ventura
      controllers
    - staging: android: ashmem: Fix possible deadlock in ashmem_ioctl
    - drm/amdgpu: use polling mem to set SDMA3 wptr for VF
    - Bluetooth: hci_qca: Avoid setup failure on missing rampatch
    - Bluetooth: btqcomsmd: Fix skb double free corruption
    - cpufreq: longhaul: Revert transition_delay_us to 200 ms
    - media: c8sectpfe: fix potential NULL pointer dereference in
      c8sectpfe_timer_interrupt
    - drm/msm: fix leak in failed get_pages
    - IB/ipoib: Warn when one port fails to initialize
    - RDMA/iwpm: Fix uninitialized error code in iwpm_send_mapinfo()
    - hv_netvsc: Fix the receive buffer size limit
    - hv_netvsc: Fix the TX/RX buffer default sizes
    - tcp: allow TLP in ECN CWR
    - spi: sh-msiof: Avoid writing to registers from spi_master.setup()
    - libbpf: prefer global symbols as bpf program name source
    - rtlwifi: rtl_pci: Fix the bug when inactiveps is enabled.
    - rtlwifi: always initialize variables given to RT_TRACE()
    - media: bt8xx: Fix err 'bt878_probe()'
    - ath10k: handling qos at STA side based on AP WMM enable/disable
    - media: [RESEND] media: dvb-frontends: Add delay to Si2168 restart
    - qmi_wwan: set FLAG_SEND_ZLP to avoid network initiated disconnect
    - tty: goldfish: Enable 'earlycon' only if built-in
    - serial: 8250_dw: Disable clock on error
    - cros_ec: fix nul-termination for firmware build info
    - watchdog: Fix potential kref imbalance when opening watchdog
    - watchdog: Fix kref imbalance seen if handle_boot_enabled=0
    - platform/chrome: Use proper protocol transfer function
    - dmaengine: zynqmp_dma: Fix race condition in the probe
    - drm/tilcdc: ensure nonatomic iowrite64 is not used
    - mmc: avoid removing non-removable hosts during suspend
    - mmc: block: fix logical error to avoid memory leak
    - /dev/mem: Add bounce buffer for copy-out
    - net: phy: meson-gxl: check phy_write return value
    - sfp: fix EEPROM reading in the case of non-SFF8472 SFPs
    - sfp: fix non-detection of PHY
    - media: s5p-mfc: Fix lock contention - request_firmware() once
    - rtc: ac100: Fix multiple race conditions
    - IB/ipoib: Avoid memory leak if the SA returns a different DGID
    - RDMA/cma: Use correct size when writing netlink stats
    - IB/umem: Fix use of npages/nmap fields
    - iser-target: avoid reinitializing rdma contexts for isert commands
    - bpf/cgroup: fix a verification error for a CGROUP_DEVICE type prog
    - vgacon: Set VGA struct resource types
    - omapdrm: panel: fix compatible vendor string for td028ttec1
    - mmc: sdhci-xenon: wait 5ms after set 1.8V signal enable
    - drm/omap: DMM: Check for DMM readiness after successful transaction commit
    - pty: cancel pty slave port buf's work in tty_release
    - coresight: Fix disabling of CoreSight TPIU
    - PCI: designware-ep: Fix ->get_msi() to check MSI_EN bit
    - PCI: endpoint: Fix find_first_zero_bit() usage
    - PCI: rcar: Handle rcar_pcie_parse_request_of_pci_ranges() failures
    - media: davinci: fix a debug printk
    - clk: check ops pointer on clock register
    - dt-bindings: display: panel: Fix compatible string for Toshiba LT089AC29000
    - clk: use round rate to bail out early in set_rate
    - pinctrl: Really force states during suspend/resume
    - pinctrl: rockchip: enable clock when reading pin direction register
    - iommu/vt-d: clean up pr_irq if request_threaded_irq fails
    - ip6_vti: adjust vti mtu according to mtu of lower device
    - ip_gre: fix error path when erspan_rcv failed
    - ip_gre: fix potential memory leak in erspan_rcv
    - soc: qcom: smsm: fix child-node lookup
    - RDMA/ocrdma: Fix permissions for OCRDMA_RESET_STATS
    - ARM: dts: aspeed-evb: Add unit name to memory node
    - nfsd4: permit layoutget of executable-only files
    - clk: at91: pmc: Wait for clocks when resuming
    - clk: Don't touch hardware when reparenting during registration
    - clk: axi-clkgen: Correctly handle nocount bit in recalc_rate()
    - clk: si5351: Rename internal plls to avoid name collisions
    - crypto: artpec6 - set correct iv size for gcm(aes)
    - hwrng: core - Clean up RNG list when last hwrng is unregistered
    - dmaengine: ti-dma-crossbar: Fix event mapping for TPCC_EVT_MUX_60_63
    - IB/mlx5: Fix integer overflows in mlx5_ib_create_srq
    - IB/mlx5: Fix out-of-bounds read in create_raw_packet_qp_rq
    - RDMA/vmw_pvrdma: Fix usage of user response structures in ABI file
    - serial: 8250_pci: Don't fail on multiport card class
    - RDMA/core: Do not use invalid destination in determining port reuse
    - clk: migrate the count of orphaned clocks at init
    - RDMA/ucma: Fix access to non-initialized CM_ID object
    - RDMA/ucma: Don't allow join attempts for unsupported AF family
    - Linux 4.15.13

  * Ubuntu18.04:PowerPC - Set Transparent Huge Pages (THP) by default to
    "always" (LP: #1753708)
    - Config: Set TRANSPARENT_HUGEPAGE_ALWAYS=y on ppc64el

  * Bionic update to 4.15.12 stable release (LP: #1757465)
    - x86/cpufeatures: Add Intel Total Memory Encryption cpufeature
    - x86/cpufeatures: Add Intel PCONFIG cpufeature
    - selftests/x86/entry_from_vm86: Exit with 1 if we fail
    - selftests/x86/entry_from_vm86: Add test cases for POPF
    - x86/vm86/32: Fix POPF emulation
    - x86/speculation, objtool: Annotate indirect calls/jumps for objtool on
      32-bit kernels
    - x86/speculation: Remove Skylake C2 from Speculation Control microcode
      blacklist
    - KVM: x86: Fix device passthrough when SME is active
    - x86/mm: Fix vmalloc_fault to use pXd_large
    - parisc: Handle case where flush_cache_range is called with no context
    - ALSA: pcm: Fix UAF in snd_pcm_oss_get_formats()
    - ALSA: hda - Revert power_save option default value
    - ALSA: seq: Fix possible UAF in snd_seq_check_queue()
    - ALSA: seq: Clear client entry before deleting else at closing
    - drm/nouveau/bl: Fix oops on driver unbind
    - drm/nouveau/mmu: ALIGN_DOWN correct variable
    - drm/amdgpu: fix prime teardown order
    - drm/radeon: fix prime teardown order
    - drm/amdgpu/dce: Don't turn off DP sink when disconnected
    - fs: Teach path_connected to handle nfs filesystems with multiple roots.
    - KVM: arm/arm64: Reduce verbosity of KVM init log
    - KVM: arm/arm64: Reset mapped IRQs on VM reset
    - kvm: arm/arm64: vgic-v3: Tighten synchronization for guests using v2 on v3
    - KVM: arm/arm64: vgic: Don't populate multiple LRs with the same vintid
    - lock_parent() needs to recheck if dentry got __dentry_kill'ed under it
    - fs/aio: Add explicit RCU grace period when freeing kioctx
    - fs/aio: Use RCU accessors for kioctx_table->table[]
    - RDMAVT: Fix synchronization around percpu_ref
    - irqchip/gic-v3-its: Ensure nr_ites >= nr_lpis
    - nvme: fix subsystem multiple controllers support check
    - xfs: preserve i_rdev when recycling a reclaimable inode
    - btrfs: Fix NULL pointer exception in find_bio_stripe
    - btrfs: add missing initialization in btrfs_check_shared
    - btrfs: alloc_chunk: fix DUP stripe size handling
    - btrfs: Fix use-after-free when cleaning up fs_devs with a single stale
      device
    - btrfs: remove spurious WARN_ON(ref->count < 0) in find_parent_nodes
    - btrfs: Fix memory barriers usage with device stats counters
    - scsi: qla2xxx: Fix smatch warning in qla25xx_delete_{rsp|req}_que
    - scsi: qla2xxx: Fix NULL pointer access for fcport structure
    - scsi: qla2xxx: Fix logo flag for qlt_free_session_done()
    - scsi: qla2xxx: Fix crashes in qla2x00_probe_one on probe failure
    - usb: dwc2: fix STM32F7 USB OTG HS compatible
    - dt-bindings: usb: fix the STM32F7 DWC2 OTG HS core binding
    - USB: gadget: udc: Add missing platform_device_put() on error in
      bdc_pci_probe()
    - usb: dwc3: Fix GDBGFIFOSPACE_TYPE values
    - usb: dwc3: core: Power-off core/PHYs on system_suspend in host mode
    - usb: dwc3: of-simple: fix oops by unbalanced clk disable call
    - usb: gadget: udc: renesas_usb3: fix oops in renesas_usb3_remove()
    - phy: phy-brcm-usb: Fix two DT properties to match bindings doc
    - phy: phy-brcm-usb-init: Some Low Speed keyboards fail on 7271
    - phy: phy-brcm-usb-init: DRD mode can cause crash on startup
    - phy: phy-brcm-usb-init: Power down USB 3.0 PHY when XHCI disabled
    - Linux 4.15.12

  * cxl: Fix timebase synchronization status on POWER9 missing (CAPI)
    (LP: #1757228)
    - cxl: Fix timebase synchronization status on P9

  * [Feature][GLK] Enable L2 CDP (Code and Data Prioritization) (LP: #1737873)
    - x86/intel_rdt: Enumerate L2 Code and Data Prioritization (CDP) feature
    - x86/intel_rdt: Add command line parameter to control L2_CDP

  * [Feature] Crystal Ridge-Restrict DAX to configurations with struct page
    (LP: #1751724)
    - mm, dax: introduce pfn_t_special()
    - ext2: auto disable dax instead of failing mount
    - ext4: auto disable dax instead of failing mount
    - dax: require 'struct page' by default for filesystem dax
    - Config: Enable CONFIG_FS_DAX_LIMITED

  * Bionic update to 4.15.11 stable release (LP: #1756978)
    - x86: Treat R_X86_64_PLT32 as R_X86_64_PC32
    - ASoC: sun4i-i2s: Fix RX slot number of SUN8I
    - ASoC: sgtl5000: Fix suspend/resume
    - ASoC: wm_adsp: For TLV controls only register TLV get/set
    - ASoC: rt5651: Fix regcache sync errors on resume
    - usb: host: xhci-rcar: add support for r8a77965
    - xhci: Fix front USB ports on ASUS PRIME B350M-A
    - xhci: fix endpoint context tracer output
    - serial: sh-sci: prevent lockup on full TTY buffers
    - tty/serial: atmel: add new version check for usart
    - uas: fix comparison for error code
    - staging: comedi: fix comedi_nsamples_left.
    - staging: android: ashmem: Fix lockdep issue during llseek
    - scsi: sd_zbc: Fix potential memory leak
    - USB: storage: Add JMicron bridge 152d:2567 to unusual_devs.h
    - usbip: vudc: fix null pointer dereference on udc->lock
    - usb: quirks: add control message delay for 1b1c:1b20
    - usb: usbmon: Read text within supplied buffer size
    - usb: gadget: f_fs: Fix use-after-free in ffs_fs_kill_sb()
    - usb: dwc3: Fix lock-up on ID change during system suspend/resume
    - serial: 8250_pci: Add Brainboxes UC-260 4 port serial device
    - serial: core: mark port as initialized in autoconfig
    - earlycon: add reg-offset to physical address before mapping
    - dm mpath: fix passing integrity data
    - Revert "btrfs: use proper endianness accessors for super_copy"
    - gfs2: Clean up {lookup,fillup}_metapath
    - gfs2: Fixes to "Implement iomap for block_map" (2)
    - drm/panel: rpi-touchscreen: propagate errors in rpi_touchscreen_i2c_read()
    - spi: imx: Fix failure path leak on GPIO request error correctly
    - HID: multitouch: Only look at non touch fields in first packet of a frame
    - KVM: PPC: Book3S HV: Avoid shifts by negative amounts
    - drm/edid: set ELD connector type in drm_edid_to_eld()
    - dma-buf/fence: Fix lock inversion within dma-fence-array
    - video/hdmi: Allow "empty" HDMI infoframes
    - KVM: PPC: Book3S HV: Fix typo in kvmppc_hv_get_dirty_log_radix()
    - HID: elo: clear BTN_LEFT mapping
    - iwlwifi: mvm: rs: don't override the rate history in the search cycle
    - ARM: dts: koelsch: Move cec_clock to root node
    - clk: meson: gxbb: fix wrong clock for SARADC/SANA
    - ARM: dts: exynos: Correct Trats2 panel reset line
    - drm/amdgpu: fix get_max_engine_clock_in_mhz
    - staging: rtl8822be: fix missing null check on dev_alloc_skb return
    - typec: tcpm: fusb302: Resolve out of order messaging events
    - USB: ledtrig-usbport: fix of-node leak
    - dt-bindings: serial: Add common rs485 binding for RTS polarity
    - sched: Stop switched_to_rt() from sending IPIs to offline CPUs
    - sched: Stop resched_cpu() from sending IPIs to offline CPUs
    - crypto: chelsio - Fix an error code in chcr_hash_dma_map()
    - crypto: ecc - Fix NULL pointer deref. on no default_rng
    - crypto: keywrap - Add missing ULL suffixes for 64-bit constants
    - crypto: cavium - fix memory leak on info
    - test_firmware: fix setting old custom fw path back on exit
    - drm/vblank: Fix vblank timestamp debugs
    - net: ieee802154: adf7242: Fix bug if defined DEBUG
    - rtc: brcmstb-waketimer: fix error handling in brcmstb_waketmr_probe()
    - perf report: Fix -D output for user metadata events
    - net: xfrm: allow clearing socket xfrm policies.
    - gpiolib: don't allow OPEN_DRAIN & OPEN_SOURCE flags simultaneously
    - mtd: nand: fix interpretation of NAND_CMD_NONE in nand_command[_lp]()
    - net: thunderx: Set max queue count taking XDP_TX into account
    - ARM: dts: am335x-pepper: Fix the audio CODEC's reset pin
    - ARM: dts: omap3-n900: Fix the audio CODEC's reset pin
    - mtd: nand: ifc: update bufnum mask for ver >= 2.0.0
    - userns: Don't fail follow_automount based on s_user_ns
    - xfrm: Fix xfrm_replay_overflow_offload_esn
    - leds: pm8058: Silence pointer to integer size warning
    - bpf: fix stack state printing in verifier log
    - power: supply: sbs-message: double left shift bug in sbsm_select()
    - power: supply: ab8500_charger: Fix an error handling path
    - power: supply: ab8500_charger: Bail out in case of error in
      'ab8500_charger_init_hw_registers()'
    - drm/etnaviv: make THERMAL selectable
    - iio: adc: ina2xx: Shift bus voltage register to mask flag bits
    - iio: health: max30102: Add power enable parameter to get_temp function
    - ath10k: update tdls teardown state to target
    - cpufreq: Fix governor module removal race
    - KVM: X86: Restart the guest when insn_len is zero and SEV is enabled
    - drm/amdgpu:fix random missing of FLR NOTIFY
    - scsi: ses: don't ask for diagnostic pages repeatedly during probe
    - pwm: stmpe: Fix wrong register offset for hwpwm=2 case
    - drm/sun4i: Fix format mask in DE2 driver
    - pinctrl: sh-pfc: r8a7791: Add can_clk function
    - pinctrl: sh-pfc: r8a7795-es1: Fix MOD_SEL1 bit[25:24] to 0x3 when using
      STP_ISEN_1_D
    - perf annotate: Fix unnecessary memory allocation for s390x
    - perf annotate: Fix objdump comment parsing for Intel mov dissassembly
    - iwlwifi: mvm: avoid dumping assert log when device is stopped
    - drm/amdgpu:fix virtual dce bug
    - drm/amdgpu: fix amdgpu_sync_resv v2
    - bnxt_en: Uninitialized variable in bnxt_tc_parse_actions()
    - clk: qcom: msm8916: fix mnd_width for codec_digcodec
    - mwifiex: cfg80211: do not change virtual interface during scan processing
    - ath10k: fix invalid STS_CAP_OFFSET_MASK
    - tools/usbip: fixes build with musl libc toolchain
    - spi: sun6i: disable/unprepare clocks on remove
    - bnxt_en: Don't print "Link speed -1 no longer supported" messages.
    - scsi: core: scsi_get_device_flags_keyed(): Always return device flags
    - scsi: devinfo: apply to HP XP the same flags as Hitachi VSP
    - scsi: dh: add new rdac devices
    - clk: renesas: r8a77970: Add LVDS clock
    - staging: fsl-dpaa2/eth: Fix access to FAS field
    - media: vsp1: Prevent suspending and resuming DRM pipelines
    - dm raid: fix raid set size revalidation
    - media: cpia2: Fix a couple off by one bugs
    - media: davinci: vpif_capture: add NULL check on devm_kzalloc return value
    - virtio_net: Disable interrupts if napi_complete_done rescheduled napi
    - net: sched: drop qdisc_reset from dev_graft_qdisc
    - veth: set peer GSO values
    - drm/amdkfd: Fix memory leaks in kfd topology
    - powerpc/64: Don't trace irqs-off at interrupt return to soft-disabled
      context
    - arm64: dts: renesas: salvator-common: Add EthernetAVB PHY reset
    - agp/intel: Flush all chipset writes after updating the GGTT
    - mac80211_hwsim: enforce PS_MANUAL_POLL to be set after PS_ENABLED
    - mac80211: remove BUG() when interface type is invalid
    - crypto: caam/qi - use correct print specifier for size_t
    - ASoC: nuc900: Fix a loop timeout test
    - mmc: mmc_test: Ensure command queue is disabled for testing
    - Fix misannotated out-of-line _copy_to_user()
    - ipvlan: add L2 check for packets arriving via virtual devices
    - rcutorture/configinit: Fix build directory error message
    - locking/locktorture: Fix num reader/writer corner cases
    - ima: relax requiring a file signature for new files with zero length
    - IB/mlx5: revisit -Wmaybe-uninitialized warning
    - dmaengine: qcom_hidma: check pending interrupts
    - drm/i915/glk: Disable Guc and HuC on GLK
    - Linux 4.15.11
    - Config: Enable CONFIG_DRM_ETNAVIV_THERMAL=y

  * [FFE][Feature] KVM CLX avx512_vnni (LP: #1739665)
    - KVM: x86: add support for UMIP
    - KVM: Expose new cpu features to guest

  * Ubuntu18.04[P9 DD2.2 Boston]:Unable to boot power8 compat mode
    guests(ubuntu14.04.5) (kvm) (LP: #1756254)
    - KVM: PPC: Book3S HV: Allow HPT and radix on the same core for POWER9 v2.2

  * Allow hugepage backing for "p8compat" mode kvm guests (LP: #1754206)
    - KVM: PPC: Book3S HV: Fix VRMA initialization with 2MB or 1GB memory backing

  * [Bug][KVM][Crystal Ridge] Terrible performance of vNVDIMM on QEMU with
    device DAX backend (LP: #1745899)
    - x86/mm: add a function to check if a pfn is UC/UC-/WC
    - KVM: MMU: consider host cache mode in MMIO page check

  * nfp: read ME frequency from vNIC ctrl memory (LP: #1752818)
    - nfp: add TLV capabilities to the BAR
    - nfp: read ME frequency from vNIC ctrl memory
    - nfp: fix TLV offset calculation

  * Miscellaneous Ubuntu changes
    - [Packaging] skip cloud tools packaging when not building package
    - [Packaging] final-checks -- remove check for empty retpoline files

 -- Seth Forshee <email address hidden>  Wed, 04 Apr 2018 08:26:19 -0500

This bug is awaiting verification that the kernel in -proposed solves the problem. Please test the kernel and update this bug with the results. If the problem is solved, change the tag 'verification-needed-bionic' to 'verification-done-bionic'. If the problem still exists, change the tag 'verification-needed-bionic' to 'verification-failed-bionic'.

If verification is not done by 5 working days from today, this fix will be dropped from the source code, and this bug will be closed.

See https://wiki.ubuntu.com/Testing/EnableProposed for documentation how to enable and use -proposed. Thank you!


This bug is awaiting verification that the kernel in -proposed solves the problem. Please test the kernel and update this bug with the results. If the problem is solved, change the tag 'verification-needed-bionic' to 'verification-done-bionic'. If the problem still exists, change the tag 'verification-needed-bionic' to 'verification-failed-bionic'.

If verification is not done by 5 working days from today, this fix will be dropped from the source code, and this bug will be closed.

See https://wiki.ubuntu.com/Testing/EnableProposed for documentation how to enable and use -proposed. Thank you!


This bug was erroneously marked for verification in bionic; verification is not required and verification-needed-bionic is being removed.

