boot: 0.839
performance: 0.812
graphic: 0.756
other: 0.743
device: 0.738
semantic: 0.686
vnc: 0.685
debug: 0.638
permissions: 0.633
socket: 0.563
PID: 0.504
files: 0.375
network: 0.279
KVM: 0.112

Unaccessible memory

Hello,

I'm trying to develop a OS over L4/X2 microkernel and I use Linux debian and qemu 0.13 in 64 bits mode. When I start qemu with qemu-system-x86_64 -hdc freevms.img -smp 1 -serial stdio -m 128M -k fr, my kernel boots fine. If I modify this command line with -m 384M (for example), my kernel is loaded but enter in a deadlock. I have found a bug in my code until I have tried to use the _same_ disk image under virtualbox and it works without any trouble. I runs fine on a real PC also.

I have bissected my code and qemu stops (maybe in a deadlock) when I try to access to memory :
%MEM-I-VM_ALLOC, adding $0000000000045000 - $0000000000108FFF to VM allocator
%MEM-I-VM_ALLOC, adding $000000000010B000 - $00000000003F2FFF to VM allocator
%MEM-I-VM_ALLOC, adding $000000000040C000 - $0000000000FFFFFF to VM allocator
%MEM-I-VM_ALLOC, adding $000000000100F000 - $FFFFFEFFFFFFFFFF to VM allocator
%MEM-I-ACCMAP, accepting mapping
%MEM-I-ACCMAP, virtual  $FFFF000000000000 - $FFFF000000000FFF
%MEM-I-ACCMAP, physical $000000000009E000 - $000000000009EFFF

Note that qemu doesn't crash. It only stops. My virtual memory subsystem maps $FFFF000000000000 in physical memory ($9E000). And when I try to initialize this memory, qemu enters in deadlock.

A disk image to reproduce this bug is available at http://www.systella.fr/~bertrand/freevms.img.bz2

Regards,

JKB

This is a qemu emulator problem, whould qemu stop when the memory is larger than 128M? You can try  set the memory 256 to start vm.

QEMU 0.13 is pretty much outdated nowadays ... can you still reproduce this issue with the latest version of QEMU?

[Expired for QEMU because there has been no activity for 60 days.]

