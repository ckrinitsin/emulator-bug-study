KVM: 0.898
graphic: 0.810
device: 0.589
semantic: 0.536
boot: 0.533
performance: 0.484
other: 0.415
socket: 0.359
network: 0.350
permissions: 0.296
vnc: 0.281
debug: 0.250
PID: 0.230
files: 0.202

kvm: 16-bit code execution failure should be more friendly

Today, when kvm fails at 16-bit code execution, we report:

     spirit:~/qemu> qemu-kvm ./hda-fedora.img 
     kvm: unhandled exit 80000021
     kvm_run returned -22

There are three reasons exit reason 21 happens.  The first is that a user is executing an image containing a workload that uses GFXBOOT or some other bootloader that exercises big real mode.  On pre-Westmere Intel processors, VT could not handle big real mode.  The second reason is that the guest's image is corrupted and we're executing random code.  We accidentally fall into one of the unsupported modes for VT.  Again, this is addressed on WSM.  The third case is where there's an actual bug in KVM.  This should be exceedingly rare at this stage.

We should present a friendly error message explaining the possible causes and recommending corrective action.

Triaging old bug tickets... has this ever been fixed, thus could we close this ticket nowadays? Or is there something left to do here?

[Expired for QEMU because there has been no activity for 60 days.]

