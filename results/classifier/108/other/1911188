device: 0.912
graphic: 0.902
semantic: 0.853
files: 0.809
other: 0.765
PID: 0.761
permissions: 0.729
debug: 0.711
socket: 0.710
network: 0.697
performance: 0.692
vnc: 0.639
boot: 0.638
KVM: 0.485

qemu-system-x86_64 prints obscure error message and exits when encountering an empty argument

QEMU emulator version 4.2.1 (qemu-4.2.1-1.fc32) on Fedora 32.

When writing a script to start qemu automatically, I ran into a very confusing error message due to a bug in my script and had trouble understanding it. I isolated the problem to the following:

$ qemu-system-x86_64 ""
qemu-system-x86_64: Initialization of device ide-hd failed: Device needs media, but drive is empty

As you can see, running qemu with an empty argument prints a seemingly random and unrelated error message about an ide-hd device, and the program immediately exits with code 1. This happens when an empty argument appears anywhere in the arguments list, always causing the program to immediately die with this error.

This is a simply baffling message to be encountering when the problem is really an empty argument.

Expected behaviour: Either flatly ignore the empty argument, or at most trigger a warning (eg, "warning: saw empty argument"). It should not at all prevent the program from running.

If QEMU receives an argument that isn't an option flag, then it considers it to be the path to a disk. The block code treats the empty string as indicating that no backing file should be opened for the device. This only makes sense for devices that support removable media (ie CDROM, floppy), hence getting an error message for the ide-hd disk.

So weird as this message might seem, I believe it does ultimately make sense, and I don't think we can just ignore the empty string without potentially breaking other things.

Thanks for the quick reply Daniel. I've looked at the qemu man page many times but somehow never noticed that it can take one non-option argument alongside any other options. That does explain what is going on here. In that case I'm not going to push for a potentially breaking change.

Perhaps it would still be beneficial to emit a warning about the empty string, at least when it has occurred in conjunction with a non-removable drive (I suppose one is created automatically if no other options are present?) which doesn't make sense to get such a path. I feel like the scenario in which it is intended might be less common than the scenario in which it has happened accidentally. Maybe I'm biased though ;)

The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting the bug state to "Incomplete" now.

If the bug has already been fixed in the latest upstream version of QEMU,
then please close this ticket as "Fix released".

If it is not fixed yet and you think that this bug report here is still
valid, then you have two options:

1) If you already have an account on gitlab.com, please open a new ticket
for this problem in our new tracker here:

    https://gitlab.com/qemu-project/qemu/-/issues

and then close this ticket here on Launchpad (or let it expire auto-
matically after 60 days). Please mention the URL of this bug ticket on
Launchpad in the new ticket on GitLab.

2) If you don't have an account on gitlab.com and don't intend to get
one, but still would like to keep this ticket opened, then please switch
the state back to "New" or "Confirmed" within the next 60 days (other-
wise it will get closed as "Expired"). We will then eventually migrate
the ticket automatically to the new system (but you won't be the reporter
of the bug in the new system and thus you won't get notified on changes
anymore).

Thank you and sorry for the inconvenience.


[Expired for QEMU because there has been no activity for 60 days.]

