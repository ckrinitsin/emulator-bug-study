permissions: 0.942
KVM: 0.875
device: 0.833
socket: 0.789
debug: 0.695
graphic: 0.692
semantic: 0.668
PID: 0.621
other: 0.590
performance: 0.538
network: 0.529
boot: 0.471
vnc: 0.434
files: 0.293

qemu-kvm-0.13.0 doesn't pass USB devices to the VM

I have the bug, similar to this one:
https://bugzilla.redhat.com/show_bug.cgi?id=583108
but under gentoo

When I add parameters -usb -usbdevice host:4348:5584, I see the following lines in console:

husb: config #1 need -1
USBDEVFS_DISCONNECT: No route to host
husb: open device 2.11
(...many repetitions of three above lines...)

All parameters (2.11) are verified with lsusb at host computer - parameters are correct

Error description is very confusing - I don't know what to check, what "config #1" mean, which route should be checked and how to check it.

Hi,

Thanks for reporting this problem.

Can you tell me a bit more about your configuration? For example:
What are the guest and host operating systems?

Is it always "need -1"? Do you ever see "need 1"?

What is the device you're trying to open? Can you show the USB descriptors (e.g. from lsusb)?

Do you have rights to open the device (e.g. are you running qemu with elevated privileges)? Does it help / change things if you do or don't?

I'm not sure that the error messages are very accurate in this particular case. I think the problem with those messages comes from use of perror() in the QEMU code and that the underlying operations aren't returning / setting errno in the right way (or perhaps at all). However the fact that we're even getting to the error path indicates a problem. If I had to guess, the device is already bound to a driver on the host and you don't have permissions to unbind it. However I'm pretty fuzzy on this one, and I'm really hoping the additional information might help someone else fix it.

Brad





QEMU 0.13.0 is quite outdated - and I assume that USB passthrough should be working fine with the latest version, so I'm closing this bug ticket now. If you still have problems with the latest version of QEMU, feel free to open it again (or create a new bug ticket instead).

