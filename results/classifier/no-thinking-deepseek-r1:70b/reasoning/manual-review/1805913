The bug report discusses an issue where readdir() returns NULL with errno=EOVERFLOW when running a 32-bit user-static qemu on a 64-bit host. The root cause is related to how glibc handles inode numbers and offsets, which don't fit into 32-bit ranges when using getdents64() from the 64-bit kernel. This leads to EOVERFLOW as per the C standard's requirements for readdir(). The problem arises in the interaction between the 32-bit environment (qemu) and the underlying 64-bit system calls.

The issue is classified under "syscall" because it pertains to errors occurring during system calls, specifically how getdents64() handles inode numbers and offsets across different bitness environments.