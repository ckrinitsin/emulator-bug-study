The issue involves a segmentation fault when using `__clock_gettime64()` through VDSO on `qemu-armeb`, but not on `qemu-arm`. The problem is tied to how the VDSO (Virtual Dynamic Shared Object) is handled in the big-endian ARM environment. Specifically, the stack trace points to an issue within `__GI___clock_gettime64` and `__GI___time64`, which are part of glibc's interaction with the system calls via VDSO.

The key indicators here are:
- The segmentation fault occurs when calling into the VDSO implementation.
- Disabling VDSO resolves the problem, suggesting that the issue lies within the VDSO mechanism itself or its usage in this specific architecture.
- The same code works correctly on little-endian ARM (`qemu-arm`), indicating an architecture-specific bug.

This points to a problem with how system calls are being handled through the VDSO layer in big-endian ARM environments. Therefore, the category is:

syscall