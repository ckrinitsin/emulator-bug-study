The issue arises when running a multiprocess program that relies on shared memory and mutexes under QEMU's ARM user emulation. The program works correctly in threaded mode but fails in multiprocess mode, pointing to potential problems in how system calls related to process management or inter-process communication are handled.

The key points from the bug report:
- The program uses shared memory regions with shmat (similar to mmap).
- It consistently passes on real hardware but fails under QEMU.
- The failure is observed specifically in multiprocess mode, not threaded mode.
- This suggests issues with how QEMU emulates system calls related to process creation, synchronization primitives, or shared memory management.

Given that the problem occurs only under QEMU and involves inter-process communication via shared memory and mutexes, it likely relates to how QEMU handles system calls involved in these operations. Therefore, the category is:

syscall