id = 489
title = "Assertion raised when hitting gdb break point in qemu-system-avr"
state = "closed"
created_at = "2021-07-18T08:23:54.027Z"
closed_at = "2021-07-22T15:10:34.268Z"
labels = ["Closed::Fixed", "GDB", "accel: TCG", "kind::Bug", "target: avr"]
url = "https://gitlab.com/qemu-project/qemu/-/issues/489"
host-os = "Linux Mint 20.2"
host-arch = "x86_64"
qemu-version = "QEMU emulator version 6.0.50 (v6.0.0-2825-ga97fca4ceb)"
guest-os = "Embedded"
guest-arch = "AVR"
description = """An assertion is triggered when inserting a break point via gdb and continuing from gdb until hitting the break point:
```
./qemu-system-avr -nographic -machine uno -s -S -bios simpletest.bin 
Starting up...
qemu-system-avr: ../accel/tcg/translate-all.c:1476: tb_gen_code: Assertion `tb->size != 0' failed.
Aborted (core dumped)
```
The matching gdb session:
```
~/gdb/gdb-10.1-OK/gdb/avr-gdb 
GNU gdb (GDB) 10.1
[snipped copyright notice ]
(gdb) tar rem :1234
Remote debugging using :1234
warning: Target-supplied registers are not supported by the current architecture
warning: No executable has been specified and target does not support
determining executable automatically.  Try using the "file" command.
0x00000000 in ?? ()
(gdb) b *0xb2
Breakpoint 1 at 0xb2
(gdb) c
Continuing.
Remote connection closed
(gdb) 
```"""
reproduce = """1. Start qemu with command line given in description above
2. Connect to qemu session using avr-gdb, also given in description.
3. From avr-gdb, place a break point somewhere in code, then continue
4. When qemu reaches break point, an assertion is raised"""
additional = """1. When running without a break point there is no assertion
2. Problem appears to be triggered only when inserted break point is hit.
3. Stepping in gdb works
4. This problem isn't evident in qemu 6.0.0"""
