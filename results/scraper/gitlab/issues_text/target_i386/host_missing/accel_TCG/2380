Crash on x86_64 vm launch
Description of problem:
When I started using QEMU for x86 OS programming about a year or 2 ago it ran fine until about a year ago where it just does not launch for more than a few seconds, it always crashes with no output at all, even when running with debug options enabled, it still outputs normal values before just crashing or exiting, this happens when running with an OS image or not, I have tried everything possible (wiping the whole system of anything including "qemu" including the registry, disabling all AV including windows defender, using SFC and DISM to repair corrupt files, installing the oldest versions of qemu up to the newest, running the program in different compatibility modes, running as admin, changing install directories, disabling overclocking, and many more) the only way it runs is if I use a VM to run qemu or reinstall windows, I am not reinstalling windows and im not running a vm to run another vm, my OS is very stable apart from this one program, I need to use QEMU as it is very important for my OS builds as it allows me to automate many things.
Steps to reproduce:
1. launch qemu-system-x86_64

unable to reproduce on other clean OS installs
Additional information:
upon clean building QEMU from latest build using MSYS2 and running GDB here is the output

```
(gdb) run
Starting program: C:\qemu\build\qemu-system-x86_64.exe
[New Thread 22292.0x250c]
[New Thread 22292.0x2004]
[New Thread 22292.0x1d2c]
[New Thread 22292.0x5614]
[New Thread 22292.0x5b3c]
[New Thread 22292.0x5ae8]
[New Thread 22292.0x2d04]
[New Thread 22292.0x5588]
[New Thread 22292.0x3ce8]
gdb: unknown target exception 0xc0000409 at 0x7ffac8f83e74

Thread 8 received signal ?, Unknown signal.
[Switching to Thread 22292.0x2d04]
0x00007ffac8f83e74 in strerror_s () from C:\Windows\System32\msvcrt.dll

```

the error code leads to STATUS_STACK_BUFFER_OVERRUN

upon back tracing this it leads to this output

```
(gdb) bt
#0  0x00007ffac8f83e74 in strerror_s () from C:\Windows\System32\msvcrt.dll
#1  0x00007ffac8f82c04 in msvcrt!longjmp () from C:\Windows\System32\msvcrt.dll
#2  0x00007ff670af2b8e in advance_pc (env=0x34d3c60, s=0x4beff8d0, num_bytes=4)
    at ../target/i386/tcg/translate.c:2131
#3  0x00007ff670af2d33 in x86_ldl_code (env=0x34d3c60, s=0x4beff8d0)
    at ../target/i386/tcg/translate.c:2169
#4  0x00007ff670af3939 in insn_get (env=0x34d3c60, s=0x4beff8d0, ot=MO_32)
    at ../target/i386/tcg/translate.c:2454
#5  0x00007ff670b0c4ca in disas_insn (s=0x4beff8d0, cpu=0x34d1450)
    at ../target/i386/tcg/translate.c:5148
#6  0x00007ff670b1253f in i386_tr_translate_insn (dcbase=0x4beff8d0, cpu=0x34d1450)
    at ../target/i386/tcg/translate.c:7023
#7  0x00007ff670ba30b2 in translator_loop (cpu=0x34d1450, tb=0x3b3a280, max_insns=0x4beffba4,
    pc=954352, host_pc=0x43de8ff0, ops=0x7ff671a9b480 <i386_tr_ops>, db=0x4beff8d0)
    at ../accel/tcg/translator.c:164
#8  0x00007ff670b127ef in gen_intermediate_code (cpu=0x34d1450, tb=0x3b3a280,
    max_insns=0x4beffba4, pc=954352, host_pc=0x43de8ff0) at ../target/i386/tcg/translate.c:7099
#9  0x00007ff670ba1abd in setjmp_gen_code (env=0x34d3c60, tb=0x3b3a280, pc=954352,
    host_pc=0x43de8ff0, max_insns=0x4beffba4, ti=0x4beffbc0) at ../accel/tcg/translate-all.c:278
#10 0x00007ff670ba1de3 in tb_gen_code (cpu=0x34d1450, pc=954352, cs_base=0, flags=176,
    cflags=-16646144) at ../accel/tcg/translate-all.c:358
#11 0x00007ff670b96508 in cpu_exec_loop (cpu=0x34d1450, sc=0x4beffd60)
    at ../accel/tcg/cpu-exec.c:989
#12 0x00007ff670b96689 in cpu_exec_setjmp (cpu=0x34d1450, sc=0x4beffd60)
    at ../accel/tcg/cpu-exec.c:1035
#13 0x00007ff670b96728 in cpu_exec (cpu=0x34d1450) at ../accel/tcg/cpu-exec.c:1061
--Type <RET> for more, q to quit, c to continue without paging--
#14 0x00007ff670bc1fb7 in tcg_cpu_exec (cpu=0x34d1450) at ../accel/tcg/tcg-accel-ops.c:76
#15 0x00007ff670bc28a2 in mttcg_cpu_thread_fn (arg=0x34d1450)
    at ../accel/tcg/tcg-accel-ops-mttcg.c:95
#16 0x00007ff670de8587 in win32_start_routine (arg=0x3537c60) at ../util/qemu-thread-win32.c:411
#17 0x00007ffac8f8e634 in msvcrt!_beginthreadex () from C:\Windows\System32\msvcrt.dll
#18 0x00007ffac8f8e70c in msvcrt!_endthreadex () from C:\Windows\System32\msvcrt.dll
#19 0x00007ffac901257d in KERNEL32!BaseThreadInitThunk () from C:\Windows\System32\kernel32.dll
#20 0x00007ffacae0aa48 in ntdll!RtlUserThreadStart () from C:\Windows\SYSTEM32\ntdll.dll
#21 0x0000000000000000 in ?? ()

```

if I am reading the output correctly   qemu/target/i386/tcg/translate.c:2131     is the last file (in source) it accesses before moving to msvcrt.dll,  inside of the advance_pc function


this is the function

```
static uint64_t advance_pc(CPUX86State *env, DisasContext *s, int num_bytes) {
    uint64_t pc = s->pc;

    if (s->base.num_insns > 1 && !is_same_page(&s->base, s->pc + num_bytes - 1)) {
        siglongjmp(s->jmpbuf, 2);   <--------------------------------------------------   The line is the last function call
    }

    s->pc += num_bytes;

    if (unlikely(cur_insn_len(s) > X86_MAX_INSN_LENGTH)) {
        if (((s->pc - 1) ^ (pc - 1)) & TARGET_PAGE_MASK) {
            volatile uint8_t unused = cpu_ldub_code(env, (s->pc - 1) & TARGET_PAGE_MASK);
            (void)unused;
        }
        siglongjmp(s->jmpbuf, 1);
    }

    return pc;
}
```

if I had to guess this problem could be caused by some windows configuration, something to do with memory, or maybe some corrupt files, but I am unsure

I am not a c programmer so I don't know much about the code but I can debug more if needed
