7 Days To Die issue with Mono
First off, thanks for providing this open source translation layer, it works great! 7 Days To Die seems to be pretty rough, so not surprising it has issues; everything else I've tried has been smooth sailing.

I'm trying to run the 7 Days To Die server on OCI AMPERE, runtime errors recorded in the log seem to point to an issue with Mono. I am using the latest box64/box86 runtimes from the git (Box64 with Dynarec v0.2.1 73467dc5 built on Dec 14 2022 17:31:17/Box86 with Dynarec v0.2.9 47581ddb built on Dec 14 2022 17:31:57). The game should be 64-bit only, but I can't know for sure with my limited knowledge.

The server works for a bit, I entered the game and ran until I found a zombie that was unresponsive. Some of the server seems to stay up, I don't get disconnected, but the logic that moves the entities/keeps track of positions seems to be hit by the "SIGSEGV with Access error".

Here is the server log:
https://pastebin.com/Kv8JTgtG

For anyone wanting to test, here are the steps to run it:
You need to start on Ubuntu 20.04 LTS, AMPERE instance prob needs at least 6GB of RAM, and give at least 2 cores to let multi-threading happen.

get needed packages:
```
sudo apt install git build-essential cmake
sudo dpkg --add-architecture armhf
sudo apt update
sudo apt install gcc-arm-linux-gnueabihf
sudo apt install libc6:armhf
sudo apt install libncurses5:armhf
sudo apt install libstdc++6:armhf
```

build box64 from source:
```
cd
git clone https://github.com/ptitSeb/box64.git
cd box64; mkdir build; cd build; cmake .. -DRPI4ARM64=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo; make -j$(nproc)
sudo make install
sudo systemctl restart systemd-binfmt
```


build box86 from source:
```
cd
git clone https://github.com/ptitSeb/box86.git
cd box86; mkdir build; cd build; cmake .. -DRPI4ARM64=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo; make -j$(nproc)
sudo make install
sudo systemctl restart systemd-binfmt
```

get steamcmd:
```
mkdir /home/ubuntu/steamcmd
cd /home/ubuntu/steamcmd
curl -sqL "https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz" | tar zxvf -
```

install the 7 Days To Die server:
```
/home/ubuntu/steamcmd/steamcmd.sh \
    +@sSteamCmdForcePlatformType linux \
    +force_install_dir /home/ubuntu/7DaysToDieServer +login anonymous \
    +app_update 294420 +app_update 294420 validate +quit
```

set iptables to forward, or use UFW:
```
sudo -s
nano etc/iptables/rules.v4
```
insert after `-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT`:
```
-A INPUT -p tcp -m state –state NEW -m tcp –dport 26900 -j ACCEPT
-A INPUT -p udp -m state –state NEW -m udp –dport 26900 -j ACCEPT
-A INPUT -p udp -m state –state NEW -m udp –dport 26901 -j ACCEPT
-A INPUT -p udp -m state –state NEW -m udp –dport 26902 -j ACCEPT
-A INPUT -p udp -m state –state NEW -m udp –dport 26903 -j ACCEPT
```
`ctrl + x` to quit, `y` to save
`exit` to quit root instance

start the 7 Days To Die server:
`/home/ubuntu/7DaysToDieServer/startserver.sh -configfile=serverconfig.xml`

forward ports TCP 26900 and UDP 26900-26903 via the UCI web console

connect to the server with a client, run until you find an entity that doesn't move

Let me know if there's anything else I can provide!