ArchLinux PKGBUILD for riscv64
Here are the PKGBUILD for ARchlinux RISCv64. Work, and box64 execute. I also made a 0.1.8 version here https://popolon.org/depots/ArchLinuxRISC-V/

Archlinux installed from this  https://github.com/sehraf/riscv-arch-image-builder/ on Sipeed lichee RV board. (Allwinner D1 based) swap is needed to make the final package on it, due to limited (512MB) RAM. New models come with 1GB (and MangoPi MQ Pro too) but each batch of both are sold really quickly :(.

PKGBUILD-riscv64

<pre># Maintainer: Jai-JAP <jai.jap.318@gmail.com>
# Author: Sebastien Chevalier <ptitseb@box86.org>
pkgname=box64-riscv64-git
pkgver=r1774.2a4c1d0
pkgrel=1
pkgdesc="Linux Userspace x86_64 Emulator with a twist, targeted at ARM64 Linux devices."
arch=('riscv64')
url="https://github.com/ptitSeb/box64"
license=('MIT')
optdepends=('gl4es: OpenGL 2 for GLES 2 devices')
makedepends=('git' 'cmake' 'make')
provides=("${pkgname%-git}" "${pkgname%-riscv64-git}-git" "${pkgname%-riscv64-git}")
conflicts=("${pkgname%-git}" "${pkgname%-riscv64-git}-git" "${pkgname%-riscv64-git}")
source=('git+https://github.com/ptitSeb/box64')
md5sums=('SKIP')

pkgver() {
	cd "$srcdir/${pkgname%-riscv64-git}"
	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
	cd "${srcdir}/${pkgname%-riscv64-git}"
	if [[ ! -d ./build ]]; then
		mkdir build && cd build
		cmake .. -DRV64=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo
	fi
}

build() {
	cd "$srcdir/${pkgname%-riscv64-git}/build"
	make -j$(nproc)
}

package() {
	cd "$srcdir/${pkgname%-riscv64-git}/build"
	make DESTDIR="${pkgdir}/" install
	# /usr/local/bin isn't in PATH by the default,
	# we should move it to /usr/bin
	cd ${pkgdir}
	mv usr/local/bin/ usr/bin/
	# cleanup when dir is empty
	rmdir usr/local || exit 0
}</pre>

PKGBUILD-riscv64-DEBUG

<pre># Maintainer: Jai-JAP <jai.jap.318@gmail.com>
# Author: Sebastien Chevalier <ptitseb@box86.org>
pkgname=box64-riscv64-git
pkgver=r1774.2a4c1d0
pkgrel=1
pkgdesc="Linux Userspace x86_64 Emulator with a twist, targeted at ARM64 Linux devices."
arch=('riscv64')
url="https://github.com/ptitSeb/box64"
license=('MIT')
optdepends=('gl4es: OpenGL 2 for GLES 2 devices')
makedepends=('git' 'cmake' 'make')
provides=("${pkgname%-git}" "${pkgname%-riscv64-git}-git" "${pkgname%-riscv64-git}")
conflicts=("${pkgname%-git}" "${pkgname%-riscv64-git}-git" "${pkgname%-riscv64-git}")
source=('git+https://github.com/ptitSeb/box64')
md5sums=('SKIP')

pkgver() {
	cd "$srcdir/${pkgname%-riscv64-git}"
	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

prepare() {
	cd "${srcdir}/${pkgname%-riscv64-git}"
	if [[ ! -d ./build ]]; then
		mkdir build && cd build
		cmake .. -DRV64=1 -DCMAKE_BUILD_TYPE=Debug
	fi
}

build() {
	cd "$srcdir/${pkgname%-riscv64-git}/build"
	make -j$(nproc)
}

package() {
	cd "$srcdir/${pkgname%-riscv64-git}/build"
	make DESTDIR="${pkgdir}/" install
	# /usr/local/bin isn't in PATH by the default,
	# we should move it to /usr/bin
	cd ${pkgdir}
	mv usr/local/bin/ usr/bin/
	# cleanup when dir is empty
	rmdir usr/local || exit 0
}</pre>
