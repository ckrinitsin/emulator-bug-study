qemu-system-arm segmentation fault using pmemsave on the interrupt controller registers

Qemu segfaults trying to generate a VM memory dump:

$ QEMU_AUDIO_DRV=none qemu-git-src/arm-softmmu/qemu-system-arm -M vexpress-a9 -smp 4 -m 1024 -machine secure=off,dump-guest-core=on -kernel linux-4.9.75/arch/arm/boot/zImage -append "root=/dev/mmcblk0 rw rootfstype=ext4 mem=1024M net.ifnames=0 console=ttyAMA0" -dtb vexpress-v2p-ca9.dtb -sd armv7-hd.qcow2 -netdev tap,ifname=tap_armv7,script=no,downscript=no,id=net0 -device virtio-net-device,mac=00:DE:AD:BE:FF:02,netdev=net0  -monitor stdio -serial vc  -loadvm SS0
QEMU 2.11.50 monitor - type 'help' for more information
(qemu) pmemsave 0 0x3FFFFFFF memory.dmp
Segmentation fault (core dumped)

$ git rev-parse HEAD
b384cd95eb9c6f73ad84ed1bb0717a26e29cc78f

It's the second time I try to submit this bug, I think last time it failed because the attached core dump size (400M compressed). Have a look if you can get that file, otherwise I will try to update this ticket once it's created:

(Error ID: OOPS-65553b72bc14be693eb1e37814ff9267)

Yeah, the page fails uploading the code dump file. Actually it seems to upload the whole file but then it shows a "Timeout error" error. Anyway, let me know if you need that file and if so how can I send it to you.

What's happening here is that the memory range you're asking to dump (physaddrs 0 to 0x3fffffff) includes a lot of devices, including the interrupt controller, which is at 0x1e000000. There's a longstanding bug in the GIC code where it will crash if you try to access its per-CPU register bank from some context that isn't a guest CPU (including the monitor or the QEMU gdb stub), because it doesn't know which CPU's version of the registers you wanted. That's what you've run into here.

However, I suspect you didn't really want to try to take a memory dump of a pile of devices. The RAM in the vexpress-a9 board starts at 0x60000000, so if you wanted the RAM then try
  pmemsave 0x60000000 0x9fffffff memory.dmp


LP:1602247 is the bug for the similar issue when using the gdb stub.


The QEMU project is currently moving its bug tracking to another system.
For this we need to know which bugs are still valid and which could be
closed already. Thus we are setting the bug state to "Incomplete" now.

If the bug has already been fixed in the latest upstream version of QEMU,
then please close this ticket as "Fix released".

If it is not fixed yet and you think that this bug report here is still
valid, then you have two options:

1) If you already have an account on gitlab.com, please open a new ticket
for this problem in our new tracker here:

    https://gitlab.com/qemu-project/qemu/-/issues

and then close this ticket here on Launchpad (or let it expire auto-
matically after 60 days). Please mention the URL of this bug ticket on
Launchpad in the new ticket on GitLab.

2) If you don't have an account on gitlab.com and don't intend to get
one, but still would like to keep this ticket opened, then please switch
the state back to "New" or "Confirmed" within the next 60 days (other-
wise it will get closed as "Expired"). We will then eventually migrate
the ticket automatically to the new system (but you won't be the reporter
of the bug in the new system and thus you won't get notified on changes
anymore).

Thank you and sorry for the inconvenience.


Still valid.



This is an automated cleanup. This bug report has been moved to QEMU's
new bug tracker on gitlab.com and thus gets marked as 'expired' now.
Please continue with the discussion here:

 https://gitlab.com/qemu-project/qemu/-/issues/247


