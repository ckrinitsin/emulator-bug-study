Track stack accesses through register moves to remove more TSO accesses
It's common practice to do a `mov rbp, rsp` and some arithmetic on it and then access stack variables through rbp instead of rsp.
We should track those stack moves and delete TSO accesses when possible.

This will have a disproportionately large improvement on Qualcomm's Orion which has stalls when a cacheline is accessed as LRCPC and then non-LRCPC, In addition to the other improvements that non-TSO memory accesses improve.