pusha/popa family generates incorrect code
Noticed in https://github.com/FEX-Emu/FEX/pull/4585 that these family of instructions are moving the SP to a temporary register and doing push/pop operations on the temporary and then moving the SP set to the end.

If an async signal landed in the middle of that instruction then Linux async signal handling would corrupt the guest stack since it assumes correct guest SP at all times.