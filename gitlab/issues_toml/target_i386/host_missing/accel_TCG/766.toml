id = 766
title = "qemu-system-x86_64: Reboot loop after Machine->Reset"
state = "closed"
created_at = "2021-12-10T01:20:31.289Z"
closed_at = "2022-04-18T10:56:27.449Z"
labels = ["accel: TCG", "target: i386"]
url = "https://gitlab.com/qemu-project/qemu/-/issues/766"
host-os = "Arch Linux"
host-arch = "amd64"
qemu-version = "QEMU emulator version 6.1.94 (v6.2.0-rc4)"
guest-os = "Not needed."
guest-arch = "## Description of problem"
description = """When using tcg, the virtual machine goes into a reboot loop after the VM
is rebooted through UI->Machine->Reboot menu, or through outb(0xcf9, 0xf).
There might be other reboot mechanisms that result in the same loop.

The loop doesn't occur when using kvm:
qemu-system-x86_64 -M q35 -enable-kvm"""
reproduce = """1. Run the command. (The one without -enable-kvm.)
2. From the UI, click on Machine->Reset.
3. See that the VM locks up, instead of resetting."""
additional = """The reboot loop occurs because a variable defined by Seabios cannot be updated, possibly because the memory is read-only.

The variable in question is [HaveRunPost](https://github.com/coreboot/seabios/blob/2dd4b9b3f84019668719344b40dba79d681be41c/src/fw/shadow.c#L194). If HaveRunPost is non-zero, the BIOS follows the resume path. When the reset is clicked, the BIOS does indeed gain control and follow the resume path because HaveRunPost is 2. The control ends up at qemu_reboot, which should reset HaveRunPost to 0 and trigger another reset, so that this second time around, the BIOS sees HaveRunPost as 0, and follows the initialization path instead.

But, even though the instruction to update HaveRunPost seems to run, the value remains non-zero (2 to be exact).

```
        // HaveRunPost has value 2 here.
        barrier();
        HaveRunPost = 0;
        barrier();
        // If a dprintf(1, "%x\\n", HaveRunPost); is placed here, the value printed is 2 and not 0!
        // With kvm-enabled, this dprintf prints 0.
```"""
