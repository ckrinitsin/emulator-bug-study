id = 729
title = "Environment variables are not passed with user-space semihosting"
state = "closed"
created_at = "2021-11-16T12:40:37.854Z"
closed_at = "2022-03-16T00:21:05.331Z"
labels = ["Closed::Invalid", "linux-user", "target: arm"]
url = "https://gitlab.com/qemu-project/qemu/-/issues/729"
host-os = "Ubuntu 20.04 WSL2 on Windows 10 (also experienced on native Ubuntu 20.04 and containerised)"
host-arch = "x86_64"
qemu-version = "qemu-arm version 6.1.90 (v6.2.0-rc0-10-gb30187ef02d)"
guest-os = "n/a"
guest-arch = "n/a"
description = """Environment variables are not passed to the emulated process, either inherited (as I might expect it to work in user-space?) or by specifying the values through the QEMU command-line. Note that setting the environment variable from within the app before calling `getenv` does work, so it isn't just a case of some system no-ops for the platform."""
reproduce = """1. Compile the following program with [ARM embedded toolchain](https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/gnu-rm/downloads):
```cpp
#include <iostream>
#include <cstdlib>

int main(int argc, char* argv[]) {
\tchar* env = std::getenv("TEST");
\tif (env)
\t\tstd::cout << "Env TEST: " << env << "\\n";
\telse
\t\tstd::cout << "Env TEST not set.\\n";
\treturn 0;
}
```

```
$ $CXX --version
arm-none-eabi-g++ (GNU Arm Embedded Toolchain 10-2020-q4-major) 10.2.1 20201103 (release)
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

$ $CXX main.cpp --specs=rdimon.specs -mcpu=cortex-m7
```

2. Run in user-space (semihosted):
```
$ qemu-arm -cpu cortex-m7 -E TEST=val123 ./a.out 
Env TEST not set.
```"""
additional = "n/a"
