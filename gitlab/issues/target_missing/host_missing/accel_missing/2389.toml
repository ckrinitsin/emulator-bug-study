id = 2389
title = "Mutex initialization assertion failure due to incompatibility with macOS setrlimit() syscall"
state = "closed"
created_at = "2024-06-13T07:32:04.897Z"
closed_at = "2024-06-13T07:39:55.559Z"
labels = []
url = "https://gitlab.com/qemu-project/qemu/-/issues/2389"
host-os = "macOS 10.15.7"
host-arch = "x86_64"
qemu-version = "9.0.50"
guest-os = "n/a"
guest-arch = "n/a"
description = """Running the command with with any set of arguments instantly crashes with the following error message:

```
Assertion failed: (mutex->initialized), function qemu_mutex_lock_impl, file ../util/qemu-thread-posix.c, line 92.
zsh: abort      ./qemu-system-x86_64
```"""
reproduce = """As per instructions for building from scratch:

1. `mkdir build && cd build`
2. `../configure --prefix=$PWD/.. --audio-drv-list=sdl --disable-cocoa --enable-sdl --enable-sdl-image`
3. `make && make install`
4. `cd ../bin`
5. `./qemu-system-x86_64`"""
additional = """The issue is coming from the `os_setup_limits()` function in `os-posix.c`. As it turns out, the `setrlimit()` syscall behaves subtly different on macOS than on Linux systems, and the macOS man pages explicitly forbade the code on line 273.

Line 273 from `os-posix.c`:

```
nofile.rlim_cur = nofile.rlim_max;
```

macOS `setrlimit()` man page:

```
COMPATIBILITY
     setrlimit() now returns with errno set to EINVAL in places that historically succeeded.  It no longer accepts "rlim_cur = RLIM_INFINITY" for
     RLIM_NOFILE.  Use "rlim_cur = min(OPEN_MAX, rlim_max)".
```

The man page thankfully gives us the [patch](/uploads/e7c8c6e3b5620c3b1ee34e89661097f3/qemu.patch)"""
