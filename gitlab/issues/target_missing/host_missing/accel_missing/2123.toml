id = 2123
title = "Invalid subprocess commands spawns successfully when running under QEMU"
state = "opened"
created_at = "2024-01-24T10:39:58.883Z"
closed_at = "n/a"
labels = []
url = "https://gitlab.com/qemu-project/qemu/-/issues/2123"
host-os = "Linux Ubuntu 22"
host-arch = "x86"
qemu-version = "qemu-aarch64 version 6.2.0 (Debian 1:6.2+dfsg-2ubuntu6.16)"
guest-os = "Linux"
guest-arch = "ARM64"
description = """When executing a subprocess from with a non-existing command EQMU still spawns a process.

Consider this small rust program for instance:
```rust
use std::process::Command;

fn main() {
    match Command::new("thisdoesnotexist").spawn() {
        Ok(child) => {
            println!("Child process id is {}", child.id());
        }
        Err(_) => {
            println!("This should happen");
        }
    }
}
```

**Executing with `qemu-aarch64`:**
```shell
qemu-aarch64 ./rust-app
Child process id is 20182
```

**Executing regularly:**
```shell
./rust-app
This should happen
```"""
reproduce = "n/a"
additional = "n/a"
